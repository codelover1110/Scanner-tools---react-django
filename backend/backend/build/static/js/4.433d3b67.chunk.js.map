{"version":3,"sources":["redux/actions/result.js","contexts/ResultViewContext.js","components/Common/NotFound/index.js","redux/actions/screen.js","components/Common/Loading.js","components/ScreenView/NewStockModal.js","components/ScreenView/NewPopOver.js","components/ScreenView/StyledDiv/ListView.styles.js","components/ScreenView/ListView.js","components/ScreenView/ScreenForm/Category.js","components/ScreenView/ScreenForm/StyledDiv/Smart.styles.js","components/ScreenView/ScreenForm/SmartForm.js","components/ScreenView/ScreenForm/StyledDiv/Earning.styles.js","components/ScreenView/ScreenForm/EarningForm.js","components/ScreenView/ScreenForm/StyledDiv/Sales.styles.js","components/ScreenView/ScreenForm/SalesForm.js","components/ScreenView/ScreenForm/StyledDiv/TwoSelectBox.styles.js","components/ScreenView/ScreenForm/TwoSelectBoxs.js","components/ScreenView/ScreenForm/StyledDiv/Industry.styles.js","components/ScreenView/ScreenForm/IndustryForm.js","components/ScreenView/ScreenForm/StyledDiv/Sharing.styles.js","components/ScreenView/ScreenForm/SharingForm.js","components/ScreenView/ScreenForm/StyledDiv/Price.styles.js","components/ScreenView/ScreenForm/PriceVolumeForm.js","components/ScreenView/ScreenForm/StyledDiv/Margins.styles.js","components/ScreenView/ScreenForm/MarginsForm.js","components/ScreenView/ScreenForm/StyledDiv/General.styles.js","components/ScreenView/ScreenForm/GeneralForm.js","components/ScreenView/ScreenForm/StyledDiv/IDB.styles.js","components/ScreenView/ScreenForm/IDB.js","components/ScreenView/ScreenForm/StyledDiv/Favorite.styles.js","components/ScreenView/ScreenForm/Favorite.js","redux/actions/screenOption.js","components/ScreenView/ScreenForm/Criteria.js","components/ScreenView/ScreenForm/StyledDiv/Summary.styles.js","components/ScreenView/ScreenForm/Summary.js","components/ScreenView/ScreenForm/ScreenOption.js","components/ScreenView/ScreenForm/TrendTemplate.js","components/ScreenView/ScreenForm/TrendTemplateWide.js","components/ScreenView/ScreenForm/PowerPlay.js","components/ScreenView/ScreenForm/index.js","components/ScreenView/index.js","pages/MSTool/StyledDiv/index.styles.js","pages/MSTool/index.js","components/Routes.js","components/Layouts/Header/index.js","assets/Layout/logo.png","assets/Layout/utc.png","components/ResultView/StyledDiv/ScreenResult.styles.js","components/ResultView/ScreenResultsList.js","components/ResultView/StyledDiv/MenuView.styles.js","components/ResultView/MenuView.js","components/ResultView/CSVPopOver.js","components/Common/StaticData.js","components/ResultView/StyledDiv/DragListItem.styles.js","components/ResultView/DragListItem.js","components/Common/AccordionPanel.js","redux/actions/accordions.js","components/ResultView/CustomizeColumnModal.js","redux/actions/column.js","components/ResultView/ToolPopOver.js","components/ResultView/StyledDiv/index.styles.js","components/ResultView/index.js","components/Main.js"],"names":["GetTrendWideData","dispatch","a","axios","get","config","res","status","type","ActionTypes","GetScreenResultData","payload","data","console","log","GetPowerPlayData","ResultViewContext","React","ResultViewProvider","children","value","Provider","useResultViewInfo","makeStyles","theme","root","marginTop","display","alignItems","justifyContent","flexDirection","width","height","textAlign","fontSize","site","fontWeight","paddingBottom","panel","backgroundColor","error","color","GetScreenListData","SetTreeViewType","useStyles","position","top","left","zIndex","backdropFilter","marginBottom","Loading","props","classes","Box","className","paper","background","textTransform","borderRadius","titleDiv","formDiv","padding","tipDiv","buttonGroup","gap","mapDispatchToProps","InsertScreenListData","post","connect","state","stockList","screen","open","handleClose","newStockName","setNewStockName","handleNewStock","findIndex","stock","text","swal","title","icon","buttons","timer","temp","Dialog","fullWidth","DialogContent","sx","mb","TextField","size","placeholder","onChange","e","target","onClick","disabled","popover","textDecoration","blackRectDiv","greenRectDiv","anchorEl","handlePopOver","handleAddNewStock","useState","openNewStockModal","setOpenNewStockModal","handleCloseNewStockModal","Popover","id","onClose","anchorOrigin","vertical","horizontal","List","ListItemButton","minHeight","border","borderTopLeftRadius","borderBottomLeftRadius","minWidth","cursor","marginLeft","topList","actionList","boxShadow","checkBox","marginRight","closeButtonCss","selectScreen","handleSelectCategory","InitialResultViewPoint","selectedScreenList","setSelectedScreenList","treeViewId","setTreeViewId","isOpenPop","setOpenNewPop","anchorRef","useRef","loading","useEffect","Button","variant","ref","TreeView","defaultCollapseIcon","defaultExpandIcon","flexGrow","maxWidth","maxHeight","overflowY","TreeItem","nodeId","label","map","index","ListItem","handleSelectScreenList","ListItemText","primary","current","idleItemDiv","borderBottom","activeItemDiv","borderRight","favourite","list","setSelectedItem","selectedItem","itemList","count","item","listItemDiv","paddingTop","paddingRight","liDiv","underLineDiv","rangeDiv","checkboxDiv","SmartForm","formData","setFormData","charItems","eps_rating_min","eps_rating_max","rs_rating_min","rs_rating_max","char","FormGroup","row","FormControlLabel","control","Checkbox","checked","smr_rating","split","filter","join","includes","ad_rating","comp_rating_min","comp_rating_max","ind_group_rs_rating","selectDateDiv","paddingLeft","selectDiv","bannderDiv","erns_lst_rpt_date_min","erns_lst_rpt_date_max","erns_dued_min","erns_dued_max","eps_chg_lst_rpt_q_min","eps_chg_lst_rpt_q_max","eps_chg_q_1_min","eps_chg_q_1_max","RadioGroup","erns_acce_lst_q_3","Radio","erns_stability_min","erns_stability_max","eps_chg_q_2_min","eps_chg_q_2_max","eps_chg_q_3_min","eps_chg_q_3_max","eps_chg_lst_rpt_q_eps_chg_lst_q_3_is_bigger","avg_eps_chg_lst_q_2_min","avg_eps_chg_lst_q_2_max","avg_eps_chg_lst_q_3_min","avg_eps_chg_lst_q_3_max","avg_eps_chg_lst_q_4_min","avg_eps_chg_lst_q_4_max","avg_eps_chg_lst_q_5_min","avg_eps_chg_lst_q_5_max","avg_eps_chg_lst_q_6_min","avg_eps_chg_lst_q_6_max","eps_trailing_q_4_min","eps_trailing_q_4_max","eps_trailing_q_4_is_bigger","eps_trailing_q_4_lst_y_is_bigger","eps_chg_lst_rpty_vs_1y_ago_min","eps_chg_lst_rpty_vs_1y_ago_max","eps_chg_lst_rpty_vs_2y_ago_min","eps_chg_lst_rpty_vs_2y_ago_max","eps_chg_lst_y_min","eps_chg_lst_y_max","eps_grow_rate_lst_3y_min","eps_grow_rate_lst_3y_max","eps_grow_rate_lst_5y_min","eps_grow_rate_lst_5y_max","eps_grow_rate_lst_3y_5y_is_bigger","eps_grow_rate_lst_5y_percent_rnk_min","eps_grow_rate_lst_5y_percent_rnk_max","eps_grow_rate_projected_sus_growth_min","eps_grow_rate_projected_sus_growth_max","eps_lst_rpty_min","eps_lst_rpty_max","eps_1y_ago_min","eps_1y_ago_max","eps_2y_ago_min","eps_2y_ago_max","eps_3y_ago_min","eps_3y_ago_max","eps_4y_ago_min","eps_4y_ago_max","eps_5y_ago_min","eps_5y_ago_max","eps_6y_ago_min","eps_6y_ago_max","eps_lst_rpty_4y_is_bigger","eps_est_erns_surp_min","eps_est_erns_surp_max","eps_est_chg_next_q_min","eps_est_chg_next_q_max","eps_est_chg_cur_y_min","eps_est_chg_cur_y_max","eps_est_chg_1y_forward_vs_min","eps_est_chg_1y_forward_vs_max","sales_chg_lst_rpt_q_min","sales_chg_lst_rpt_q_max","avg_sales_chg_lst_2_q_min","avg_sales_chg_lst_2_q_max","avg_sales_chg_lst_3_q_min","avg_sales_chg_lst_3_q_max","avg_sales_chg_lst_4_q_min","avg_sales_chg_lst_4_q_max","avg_sales_chg_lst_5_q_min","avg_sales_chg_lst_5_q_max","avg_sales_chg_lst_6_q_min","avg_sales_chg_lst_6_q_max","sales_acc_lst_2_q","sales_acc_lst_3_q","sales_chg_lst_rpt_y_min","sales_chg_lst_rpt_y_max","sales_growth_rate_lst_3_y_min","sales_growth_rate_lst_3_y_max","sales_growth_rate_lst_5_y_min","sales_growth_rate_lst_5_y_max","tot_ann_sales_lst_rpt_y_min","tot_ann_sales_lst_rpt_y_max","TwoSelectBox","useTheme","parent_value","baseItems","selectedItems","setSelectedItems","exportedItems","setExportedItems","tempItems","setTempItems","handleChangeMultiple","which","options","i","l","length","selected","push","FormControl","Select","multiple","native","inputProps","palette","brown","main","Object","keys","forEach","key","handleTempItems","multiLetterDiv","IndustryForm","company_ids_g_r_min","company_ids_g_r_max","defaultValue","sponsorship_rating","shares_outstanding_min","shares_outstanding_max","shares_in_float_min","shares_in_float_max","market_capitialization_min","market_capitialization_max","enterprise_value_min","enterprise_value_max","funds_min","funds_max","funds_increase_min","funds_increase_max","number_of_fund_min","number_of_fund_max","management_min","management_max","institutional_ownership","PriceVolumeForm","price_min","price_max","price_vs_52_week_high_min","price_vs_52_week_high_max","price_chg_cur_d_min","price_chg_cur_d_max","price_chg_min","price_chg_max","price_chg_cur_w_min","price_chg_cur_w_max","price_chg_lst_m_min","price_chg_lst_m_max","price_chg_lst_3_m_min","price_chg_lst_3_m_max","price_chg_lst_6_m_min","price_chg_lst_6_m_max","price_chg_lst_12_m_min","price_chg_lst_12_m_max","price_chg_y_to_d_min","price_chg_y_to_d_max","price_chg_sp_500_lst26w_min","price_chg_sp_500_lst26w_max","weekly_closing_range_min","weekly_closing_range_max","daily_closing_range_min","daily_closing_range_max","price_vs_10_d_min","price_vs_10_d_max","price_vs_21_d_min","price_vs_50_d_min","price_vs_50_d_max","price_vs_150_d_min","price_vs_150_d_max","price_vs_200_d_min","price_vs_200_d_max","d_10_d_21_d_50","d_50_d_150_d_200","vol_50_d_avg_min","vol_50_d_avg_max","vol_Chg_50_d_avg_min","vol_Chg_50_d_avg_max","w_vol_chg_10_w_avg_min","w_vol_chg_10_w_avg_max","cur_d_vol_grt_pre_5_d","cur_d_vol_grt_pre_10_d","cur_d_vol_grt_pre_20_d","vol_int_min","vol_int_max","up_down_vol_rat_min","up_down_vol_rat_max","vol_50_d_avg_dol_1000s_min","vol_50_d_avg_dol_1000s_max","rs_line_new_high","rs_line_new_low","rs_rating_3_m_min","rs_rating_3_m_max","rs_rating_6_m_min","rs_rating_6_m_max","timeliness_rating","alpha_min","alpha_max","beta_min","beta_max","avg_true_range_30_d_min","avg_true_range_30_d_max","MarginsForm","davidend_yield_min","davidend_yield_max","after_tax_mrgn_acce_lst_3_q","pre_tax_mrgn_lst_rpty_min","pre_tax_mrgn_lst_rpty_max","after_tax_mrgn_lst_rpt_q_min","after_tax_mrgn_lst_rpt_q_max","after_tax_mrgn_avg_lst_q_2_min","after_tax_mrgn_avg_lst_q_2_max","after_tax_mrgn_avg_lst_q_3_min","after_tax_mrgn_avg_lst_q_3_max","after_tax_mrgn_avg_lst_q_4_min","after_tax_mrgn_avg_lst_q_4_max","after_tax_mrgn_avg_lst_q_5_min","after_tax_mrgn_avg_lst_q_5_max","after_tax_mrgn_avg_lst_q_6_min","after_tax_mrgn_avg_lst_q_6_max","opr_sys_ids_median_is_bigger","profile_mrgn_ids_median_is_bigger","p_e_current_min","p_e_current_max","p_e_est_min","p_e_est_max","p_e_vs_sp_500_min","p_e_vs_sp_500_max","p_e_percent_rnk_min","p_e_percent_rnk_max","p_e_percent_rnk_in_grp_min","p_e_percent_rnk_in_grp_max","p_e_avg_5y_is_bigger","peg_min","peg_max","peg_divid_adj_min","peg_divid_adj_max","cf_v_eps_diff_lst_rpt_q_min","cf_v_eps_diff_lst_rpt_q_max","cf_v_eps_diff_lst_rpt_y_min","cf_v_eps_diff_lst_rpt_y_max","roe_5y_avg_min","roe_5y_avg_max","debit_lst_rpt_y_min","current_ratio_min","current_ratio_max","price_to_sales_min","price_to_sales_max","price_to_book_value_min","price_to_book_value_max","price_to_cash_flow_min","price_to_cash_flow_max","epr_val_free_cash_flow_min","epr_val_free_cash_flow_max","long_term_debit_work_cap_min","long_term_debit_work_cap_max","tot_lia_tot_assn","GeneralForm","adr","etf_closed_end_fund","etf","ipo_date_min","ipo_date_max","incorporation_date_min","incorporation_date_max","new_ceo_in_lst_12_m","ibd_article_lst_2_y","IDB","ibd_50","ibd_new_america","ibd_85","ibd_big_cap_20","sectionDiv","InsertScreenOptionData","setLoading","GetScreenOptionData","screen_id","stateFormData","setStateFormData","borderTop","buttonDiv","buttonCss","SetChangeDataResult","changeData","GetMyScreenData","stockCount","result","oldStateFormData","setChangeData","changeField","setChangeField","element","temp_new","JSON","stringify","temp_old","entries","getCount","slice","handleViewResult","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","colSpan","toString","component","screenOption","inserFormData","inserFormtData","Date","toISOString","substring","industry_g_n","broad_sectors","price_vs_21_d_max","debit_lst_rpt_y_max","exchange","headquarters_city","setOldStateFormData","replace","_industry_g_n","parse","_exchange","_headquarters_city","_broad_sectors","Grid","container","xs","fontStyle","GetTrendData","currentCategory","setScreenValue","mt","ScreenView","SetResultViewStatus","setCurrentCategory","selectedCategory","tabsDiv","tabDiv","tabActiveDiv","MSTool","navigate","useNavigate","selectedTab","setSelectedTab","handleSelectedTab","path","Routing","memo","Header","propTypes","typeDiv","GetStockCount","customizeColumnHeader","column","customizeColumnData","screenResultData","treeViewType","setMockList","setMockData","filterList","alertDiv","screenResultDiv","activeDiv","B100","selectedMenuItem","clsx","csv","symbol","name","comp_rating","eps_rating","rs_rating","ind_group_rs","a_d_rating","eps_lst_rptd","eps_chg_last","eps_chg_q_1","eps_chg_q_2","eps_chg_q_3","csvData","handleCsvPopOver","field","transformOrigin","accordionContent","card","droppableId","context","flexWrap","margin","expanded","itemDiv","DragListItem","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","fontFamily","content","draggableListDiv","overflowX","expandedColumn","ExpandedItem","expandedItem","accordions","idx","draggableList","isDropDisabled","setExpaned","useMeasure","listDiv","rowCount","colCount","leftOverIndex","estDivWidth","listModel","setListModel","TriggerExpandedItem","itemIndex","Math","floor","Number","isInteger","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","Array","rowIndex","direction","droppableProps","rowDiv","colIndex","colDiv","accordionDiv","preview","previewTitle","previewContent","scrollDiv","previewColumn","previewTable","borderCollapse","borderSpacing","transition","previewFooter","CustomizeColumnHeader","tempHeader","CustomizeColumnData","tempData","setDropDisabled","prefix","elements","setElements","extractDroppableId","raw_droppable_id","DialogTitle","p","onDragEnd","destination","listCopy","from","splice","removeFromList","source","removedElement","newSourceList","destinationList","addToList","onDragStart","Paper","aria-label","ml","DialogActions","ToolPopOver","anchorRef1","isCsvOpenPop","setCsvOpenNewPop","customizeColumnOpen","setCustomizeColumnOpen","bottom","toolbarDiv","labelDiv","arrowDiv","statusDiv","resultSize","minimum","normalize","maximum","resizeButtonCss","borderTopRightRadius","borderLeft","mouseDragPanel","ResultView","UpdateResultViewHeight","isBeginResize","beginStartPoint","beginStartHeight","BeginResultViewResize","FinishResultViewResize","StoreBeginValues","handleMouseDown","clientY","handleMouseMove","handleMouseUp","handleMouseOut","handleChangeResultHeight","onMouseMove","onMouseUp","onMouseOut","onMouseDown","window","innerHeight","distance","startPoint","startViewHeight","resultViewHeight","scrollTop","innerText"],"mappings":"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","file":"static/js/4.433d3b67.chunk.js","sourcesContent":["import ActionTypes from \"./actionTypes\";\r\nimport axios from 'axios' ;\r\nimport * as config from '../../static/constants';\r\n\r\nexport const SelectResultMenuItem = (selectedMenuItem) => async dispatch => {\r\n    try {\r\n        await dispatch ({\r\n            type : ActionTypes.SelectResultMenuItem,\r\n            payload : selectedMenuItem\r\n        }) ;\r\n\r\n        return true ;\r\n    } catch(err) {\r\n        console.log(err) ;\r\n        return false ;\r\n    }\r\n}\r\n\r\nexport const SetResultViewStatus = (status) => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.SetResultViewStatus,\r\n            payload : status\r\n        }) ;\r\n        return true ;\r\n    } catch(err) {\r\n        console.log(err) ;\r\n        return false ;\r\n    }\r\n}\r\n\r\nexport const UpdateResultViewHeight = (distance) => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.UpdateResultViewHeight,\r\n            payload : distance\r\n        });\r\n\r\n        return true ;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return false ;\r\n    }\r\n}\r\n\r\nexport const BeginResultViewResize = () => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.BeginResultViewResize\r\n        }) ;\r\n        return true ;\r\n    } catch(err) {\r\n        console.log(err) ;\r\n        return false ;\r\n    }\r\n}\r\n\r\nexport const FinishResultViewResize = () => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.FinishResultViewResize\r\n        }) ;\r\n        return true ;\r\n    } catch(err) {\r\n        console.log(err) ;\r\n        return false ;\r\n    }\r\n}\r\n\r\nexport const StoreBeginValues = (startPoint, startViewHeight) => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type :ActionTypes.StoreBeginValues,\r\n            payload : {\r\n                beginStartPoint : startPoint,\r\n                beginStartHeight : startViewHeight\r\n            }\r\n        }) ;\r\n\r\n        return true ;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const InitialResultViewPoint = (resultViewHeight) => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.InitialResultViewPoint,\r\n            payload: resultViewHeight\r\n        });\r\n\r\n        return true ;\r\n    } catch(err) {\r\n        console.log(err) ;\r\n        return false ;\r\n    }\r\n}\r\n\r\nexport const ChangeBeginStartHeight = (initialHeight) => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.ChangeBeginStartHeight,\r\n            payload : initialHeight\r\n        });\r\n        \r\n        return true;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return false;\r\n    }\r\n} \r\n\r\n\r\nexport const SetChangeDataResult = (changeData) => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.SetChangeDataResult,\r\n            payload : changeData\r\n        });\r\n        \r\n        return true;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return false;\r\n    }\r\n} \r\n\r\nexport const GetMyScreenData = () => async dispatch => {\r\n    try {\r\n        let res = await axios.get(`${config.PRIVATE_MARKETSMITH_API}screenresult/` , {}) ;\r\n\r\n        if(res.status === 200) {\r\n            await dispatch({\r\n                type : ActionTypes.GetScreenResultData,\r\n                payload : res.data\r\n            });\r\n        }\r\n        \r\n        return true;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return false;\r\n    }\r\n} \r\n\r\nexport const GetTrendData = () => async dispatch => {\r\n    try {\r\n        let res = await axios.get(`${config.PRIVATE_MARKETSMITH_API}screenresult/trend/` , {}) ;\r\n\r\n        if(res.status === 200) {\r\n            await dispatch({\r\n                type : ActionTypes.GetScreenResultData,\r\n                payload : res.data\r\n            });\r\n        }\r\n        \r\n        return true;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return false;\r\n    }\r\n} \r\n\r\nexport const GetTrendWideData = () => async dispatch => {\r\n    try {\r\n        let res = await axios.get(`${config.PRIVATE_MARKETSMITH_API}screenresult/trendwide/` , {}) ;\r\n\r\n        if(res.status === 200) {\r\n            await dispatch({\r\n                type : ActionTypes.GetScreenResultData,\r\n                payload : res.data\r\n            });\r\n        }\r\n        \r\n        return true;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return false;\r\n    }\r\n} \r\n\r\nexport const GetPowerPlayData = () => async dispatch => {\r\n    try {\r\n        let res = await axios.get(`${config.PRIVATE_MARKETSMITH_API}screenresult/powerplay/` , {}) ;\r\n\r\n        if(res.status === 200) {\r\n            await dispatch({\r\n                type : ActionTypes.GetScreenResultData,\r\n                payload : res.data\r\n            });\r\n        }\r\n        \r\n        return true;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return false;\r\n    }\r\n} \r\n\r\nexport const GetStockCount = (data) => async dispatch => {\r\n    try {\r\n            console.log(data.length, \"aa\")\r\n            await dispatch({\r\n                type : ActionTypes.GetStockCount,\r\n                payload : data.length\r\n            });\r\n        \r\n        return true;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return false;\r\n    }\r\n} \r\n","import * as React from 'react'\r\n\r\nconst ResultViewContext = React.createContext() ;\r\n\r\nexport const ResultViewProvider = ({ children, value }) => {\r\n  return (\r\n    <ResultViewContext.Provider value={ value }>\r\n      { children }\r\n    </ResultViewContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useResultViewInfo = () => {\r\n    return React.useContext(ResultViewContext) ;\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n    Box,\r\n    Grid\r\n} from '@mui/material' ;\r\n\r\nimport { makeStyles } from '@mui/styles' ;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        marginTop : \"100px\",\r\n        display : \"flex\" ,\r\n        alignItems : 'center',\r\n        justifyContent : 'center',\r\n\r\n        flexDirection : 'column',\r\n\r\n        width : '100%',\r\n        height : 'calc(100vh - 60px)',\r\n\r\n        \"& .MuiGrid-item\" : {\r\n            textAlign : 'center',\r\n            fontSize : '14px'\r\n        }\r\n    },\r\n    site : {\r\n        fontSize : '20px',\r\n        fontWeight : 'bold',\r\n        paddingBottom : '15px'\r\n    },\r\n    panel : {\r\n        backgroundColor : 'white',\r\n\r\n        width : \"300px\",\r\n        height : '180px',\r\n\r\n        display : 'flex',\r\n        alignItems:'center',\r\n        justifyContent : 'center',\r\n\r\n        flexDirection : 'column'\r\n    },\r\n    error : {\r\n        fontSize : '18px !important',\r\n        fontWeight : 'bold',\r\n        color : 'red'\r\n    },\r\n}))\r\nconst NotFound = () => {\r\n    const classes = useStyles() ;\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.site}>\r\n                AutoMarket App User\r\n            </Box>\r\n            <Box className={classes.panel}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} className={classes.error}>\r\n                        Page Not Found\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        Sorry, we couldn't find the page.\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        Please check the URL and try again.\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        (Error code 404)\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nNotFound.propTypes = {\r\n\r\n};\r\n\r\nexport default NotFound;\r\n","import ActionTypes from \"./actionTypes\";\r\nimport axios from 'axios' ;\r\nimport * as config from '../../static/constants';\r\n\r\nexport const GetScreenListData = () => async dispatch => {\r\n    try {\r\n        let res = await axios.get(`${config.PRIVATE_MARKETSMITH_API}screenlist/` , {}) ;\r\n        if(res.status === 200){\r\n            await dispatch({\r\n                type : ActionTypes.GetScreenListData,\r\n                payload : res.data\r\n            }) ;\r\n        }\r\n        return true ;\r\n    } catch(err){\r\n        console.log(err) ;\r\n\r\n        return false ;\r\n    } \r\n}\r\n\r\nexport const InsertScreenListData = (data) => async dispatch => {\r\n    try {\r\n        let res = await axios.post(`${config.PRIVATE_MARKETSMITH_API}screenlist/add/` , {data}) ;\r\n\r\n        return true ;\r\n    } catch(err){\r\n        console.log(err) ;\r\n\r\n        return false ;\r\n    } \r\n}\r\n\r\nexport const SetTreeViewType = (type) => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.SetTreeViewType,\r\n            payload : type\r\n        }) ;\r\n        return true ;\r\n    } catch(err){\r\n        console.log(err) ;\r\n\r\n        return false ;\r\n    } \r\n}\r\n\r\n\r\n","import React from 'react' ;\r\n\r\nimport ReactLoading from \"react-loading\";\r\n\r\nimport {\r\n    Box, \r\n    CircularProgress\r\n} from '@mui/material' ;\r\n\r\nimport { makeStyles } from '@mui/styles' ;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root : {\r\n        position : 'fixed',\r\n        top:0,\r\n        left : 0,\r\n        zIndex : 1500,\r\n\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        alignItems : 'center',\r\n        justifyContent : 'center',\r\n\r\n        width : '100vw',\r\n        height : '100vh',\r\n\r\n        backdropFilter : \"blur(5px)\"\r\n    },\r\n    status : {\r\n        fontSize : 20,\r\n        fontWeight : 600,\r\n        marginBottom : 10\r\n    }\r\n})) ;\r\n\r\nconst Loading = (props) => {\r\n    const classes =  useStyles() ;\r\n\r\n    const {\r\n        status\r\n    } = props ;\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.status}>\r\n                {\r\n                    status\r\n                }\r\n            </Box>\r\n            <ReactLoading type=\"bars\" color='blue'/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Loading ;","import * as React from 'react' ;\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types' ;\r\nimport { AddNewStock, InsertScreenListData } from '../../redux/actions/screen';\r\n\r\nimport  {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Box,\r\n    Button,\r\n    TextField\r\n} from '@mui/material' ;\r\n\r\nimport swal from 'sweetalert' ;\r\n\r\nimport { makeStyles } from '@mui/styles' ;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \r\n    },\r\n    paper : {\r\n        backgroundColor : 'lightgray !important',\r\n        \r\n        \"& .MuiDialogContent-root\" : {\r\n            background : 'lightgray'\r\n        },\r\n\r\n        \"& .MuiButtonBase-root\" : {\r\n            textTransform : 'capitalize !important',\r\n            color : 'white',\r\n            borderRadius : 20,\r\n            backgroundColor : '#3772FF !important'\r\n        },\r\n    },\r\n    titleDiv : {\r\n        marginBottom : 10,\r\n        fontSize : 20,\r\n        fontWeight : 'bold',\r\n        color : 'gray'\r\n    },\r\n    formDiv : {\r\n        background : 'white',\r\n        padding : 25\r\n    },\r\n    tipDiv : {\r\n        fontSize : 15,\r\n        marginTop : 40,\r\n        fontWeight : 'bold'\r\n    },\r\n    buttonGroup : {\r\n        display : 'flex', gap : 20, justifyContent : 'center',\r\n        marginTop :20\r\n    }\r\n})) ;\r\n\r\nconst NewStockModal = (props) => {\r\n\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        open,\r\n        handleClose,\r\n\r\n        InsertScreenListData,\r\n        stockList\r\n    } = props ;\r\n\r\n    const [newStockName, setNewStockName] = React.useState('') ;\r\n\r\n    const handleNewStock = async () => {\r\n\r\n        if(stockList.findIndex(stock => stock.text === newStockName) > -1) {\r\n            return swal({\r\n                title : 'Warning',\r\n                text : 'Duplicate Stock Name',\r\n                icon : 'warning',\r\n                buttons : false,\r\n                timer : 5000\r\n            }) ;\r\n        }\r\n\r\n        let temp = [...stockList] ;\r\n\r\n        temp = [{\r\n            text : newStockName\r\n        }, ...temp] ;\r\n\r\n        await InsertScreenListData(newStockName);\r\n\r\n        handleClose() ;\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Dialog\r\n                open={open}\r\n                fullWidth\r\n                classes ={{\r\n                    paper : classes.paper\r\n                }}\r\n            >\r\n                <DialogContent>\r\n                    <Box className={classes.titleDiv}>\r\n                        Create New Stock Screen\r\n                    </Box>\r\n                    <Box className={classes.formDiv}>\r\n                        <Box sx={{mb : '5px'}}>\r\n                            Name New Stock Screen{` (up to 50 characters)`}\r\n                        </Box>\r\n                        <TextField \r\n                            size='small'\r\n                            placeholder='Please enter a name'\r\n                            value={newStockName}\r\n                            onChange={(e) => setNewStockName(e.target.value)}\r\n                        />\r\n                        <Box className={classes.tipDiv}>\r\n                            Tip : You may change the name at any time.\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className={classes.buttonGroup}>\r\n                        <button onClick={handleClose}>Cancel</button>\r\n                        <button onClick={() => handleNewStock()} \r\n                            disabled={!newStockName}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\nNewStockModal.propTypes = {\r\n    // AddNewStock : PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    stockList : state.screen.stockList\r\n})\r\nconst mapDispatchToProps = {\r\n    InsertScreenListData\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewStockModal) ;","import React from 'react' ;\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { GetScreenListData } from \"../../redux/actions/screen\";\r\n\r\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\r\n\r\nimport {\r\n   Popover,\r\n   List,\r\n   ListItem,\r\n   Divider,\r\n   Box,\r\n   ListItemButton\r\n} from '@mui/material' ;\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport NewStockModal from './NewStockModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popover : {\r\n        zIndex : \"1500 !important\",\r\n        \"& .MuiList-root\" : {\r\n            padding : \"10px\"\r\n        },\r\n        \"& .MuiListItemButton-root\" : {\r\n            padding : 3,\r\n            fontSize : \"14px\" ,\r\n            color : 'black',\r\n\r\n            display : 'flex', gap: 10\r\n        },\r\n        \"& a\" : {\r\n            textDecoration : \"none\"\r\n        }\r\n    },\r\n    blackRectDiv : {\r\n        background : 'black',\r\n        width : 10, height : 10\r\n    },\r\n    greenRectDiv : {\r\n        background : 'green',\r\n        width : 10, height : 10\r\n    }\r\n}))\r\n\r\nconst NewPopOver = (props) => {\r\n\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        open , anchorEl , handlePopOver,\r\n        handleAddNewStock,\r\n        GetScreenListData\r\n    } = props ;\r\n\r\n    const [openNewStockModal, setOpenNewStockModal] = React.useState(false) ;\r\n\r\n    const handleOpenNewStockModal = () => {\r\n        setOpenNewStockModal(true) ;\r\n    }\r\n    const handleCloseNewStockModal = async () => {\r\n        setOpenNewStockModal(false) ;\r\n        await GetScreenListData()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Popover\r\n                id=\"NewPopOver-popover\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handlePopOver}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                classes={{\r\n                    paper : classes.popover\r\n                }}\r\n            >\r\n                <List>\r\n                    <ListItemButton\r\n                        onClick={() => {\r\n                            handlePopOver() ;\r\n                            handleOpenNewStockModal() ;\r\n                        }}\r\n                    >\r\n                        <Box className={classes.blackRectDiv} /><Box>New Stock Screen</Box>\r\n                    </ListItemButton>\r\n                    {/* <ListItemButton>\r\n                        <Box className={classes.greenRectDiv}/><Box>New Fund Screen</Box>\r\n                    </ListItemButton>\r\n                    <ListItemButton><CreateNewFolderIcon sx={{fontSize : '15px', color : 'gray'}}/><Box>New Folder</Box></ListItemButton> */}\r\n                </List>\r\n            </Popover>\r\n\r\n            {/* <NewStockModal /> */}\r\n            <NewStockModal\r\n                open={openNewStockModal}\r\n                handleClose={handleCloseNewStockModal}\r\n                handleAddNewStock={handleAddNewStock}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n    GetScreenListData\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPopOver) ;","import { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        minHeight : 'calc(100vh - 90px)',\r\n        \r\n        border : '1px solid grey',\r\n        borderTopLeftRadius : '5px',\r\n        borderBottomLeftRadius : '5px',\r\n        background : 'white',\r\n\r\n        \"& .MuiButtonBase-root\" : {\r\n            minWidth : '20px',\r\n            height : '20px',\r\n            background: 'linear-gradient(0deg, rgba(232,231,228,1) 0%, rgba(255,253,249,1) 52%, rgba(255,255,253,0) 100%)',\r\n            textTransform : 'none',\r\n            padding : '12px',\r\n        },\r\n\r\n        \"& .MuiListItem-root\" : {\r\n            display : 'flex',\r\n            alignItems : 'center',\r\n            padding : '0px 40px',\r\n            \r\n            \"&:hover\" : {\r\n                background : '#f7b147',\r\n                cursor : 'pointer'\r\n            }\r\n        },\r\n\r\n        \"& .MuiTreeItem-root\" : {\r\n            \"& svg\" : {\r\n                color : '#f7b147'\r\n            },\r\n        },\r\n        \"& .MuiTreeItem-content\" : {\r\n            // background : 'white !important'\r\n        },\r\n        \"& .MuiCollapse-root\" : {\r\n            marginLeft : '10px'\r\n        }\r\n    },\r\n    topList : {\r\n        display : 'flex', justifyContent : 'space-between', alignItems : 'center',\r\n\r\n        padding : '10px'\r\n    },\r\n    actionList : {\r\n        display : 'flex',\r\n        justifyContent : 'space-around',\r\n        background : 'lightgray',\r\n        border : '1px solid rgb(160,160,160)',\r\n        boxShadow : 'inset',\r\n        padding : '10px'\r\n    },\r\n    checkBox : {\r\n        width : '10px',\r\n        height : '10px',\r\n        background : 'black',\r\n        borderRadius : '2px',\r\n        marginRight : '10px'\r\n    },\r\n    closeButtonCss : {\r\n        padding : '5px !important',\r\n        width : '25px !important',\r\n        height : '20px !important',\r\n        fontSize : '10px !important'\r\n    },\r\n    selectScreen : {\r\n        background : '#f7b147'\r\n    }\r\n}))","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { GetScreenListData } from \"../../redux/actions/screen\";\r\nimport { GetTrendWideData, GetPowerPlayData } from \"../../redux/actions/result\";\r\n\r\nimport { useResultViewInfo } from '../../contexts/ResultViewContext';\r\nimport Loading from '../Common/Loading';\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n    List,\r\n    ListItem,\r\n    ListItemText\r\n} from '@mui/material';\r\n\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\nimport NewPopOver from \"./NewPopOver\";\r\n\r\nimport { useStyles } from \"./StyledDiv/ListView.styles\";\r\n\r\nconst ListView = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        InitialResultViewPoint,\r\n    } = useResultViewInfo() ;\r\n\r\n    const {\r\n        handleSelectCategory,\r\n        selectedScreenList,\r\n        setSelectedScreenList,\r\n        stockList,\r\n        treeViewId,\r\n        setTreeViewId,\r\n        GetScreenListData,\r\n        GetTrendWideData,\r\n        GetPowerPlayData,\r\n    } = props ;\r\n    \r\n    const [ isOpenPop , setOpenNewPop ] = React.useState(false) ;\r\n\r\n    const anchorRef = React.useRef(null) ;\r\n    const [ loading, setLoading ] = React.useState(false);\r\n\r\n    const handlePopOver = () => {\r\n        setOpenNewPop(!isOpenPop) ;\r\n    }\r\n\r\n    const handleScreenListBrowse = async () => {\r\n    }\r\n\r\n    const handleSelectScreenList = (stock, index) => {\r\n        handleSelectCategory(stock.text);\r\n        setSelectedScreenList(index + 1);\r\n        setTreeViewId(1);\r\n    }\r\n\r\n    React.useEffect(async () => {\r\n        await GetScreenListData()\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                {/* <Box className={classes.topList}>\r\n                    <Button variant=\"outlined\" \r\n                        className={classes.closeButtonCss}\r\n                    >\r\n                        X\r\n                    </Button>\r\n                    <Button variant=\"outlined\" >\r\n                        Close Edit\r\n                    </Button>\r\n                </Box> */}\r\n                <Box className={classes.actionList} >\r\n                    <Button variant=\"outlined\" \r\n                        ref={anchorRef}\r\n                        onClick={handlePopOver}\r\n                    >\r\n                        New Screen\r\n                    </Button>\r\n                    {/* <Button variant=\"outlined\"\r\n                        onClick={handleScreenListBrowse}\r\n                    >\r\n                        Browse Screens\r\n                    </Button> */}\r\n                </Box>\r\n                \r\n                <TreeView\r\n                    defaultCollapseIcon={<ExpandMoreIcon />}\r\n                    defaultExpandIcon={<ChevronRightIcon />}\r\n                    sx={{ flexGrow: 1, maxWidth: 400, maxHeight : 'calc(100vh - 200px)',overflowY: 'auto' }}\r\n                >\r\n                    <TreeItem nodeId=\"1\" label=\"My Screens\" onClick={() => setTreeViewId(1)}>\r\n                        <List>\r\n                            {\r\n                                stockList && stockList.map((stock, index) => {\r\n                                    return (\r\n                                        <ListItem\r\n                                            key={index}\r\n                                            onClick={() => handleSelectScreenList(stock, index)}\r\n                                            className={(selectedScreenList === index + 1 && treeViewId === 1) ? classes.selectScreen : ''}\r\n                                        >\r\n                                            <Box className={classes.checkBox}/>\r\n                                            <ListItemText primary={stock.title}/>\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </TreeItem>\r\n                    <TreeItem\r\n                        nodeId=\"2\"\r\n                        label=\"Trend Template\"\r\n                        onClick={() => setTreeViewId(2)}\r\n                        sx={{background :  (treeViewId === 2 ? '#f7b147' : '')}}\r\n                    >\r\n                        \r\n                    </TreeItem>\r\n                    <TreeItem\r\n                        nodeId=\"3\"\r\n                        label=\"Trend Template Wide\"\r\n                        onClick={() => setTreeViewId(3)}\r\n                        sx={{background :  (treeViewId === 3 ? '#f7b147' : '')}}\r\n                    >\r\n                        \r\n                    </TreeItem>\r\n                    <TreeItem\r\n                        nodeId=\"4\"\r\n                        label=\"Power Play\"\r\n                        onClick={() => setTreeViewId(4)}\r\n                        sx={{background :  (treeViewId === 4 ? '#f7b147' : '')}}\r\n                    >\r\n                        \r\n                    </TreeItem>\r\n                </TreeView>\r\n            </Box>\r\n            <NewPopOver\r\n                open={isOpenPop}\r\n                handlePopOver={handlePopOver}\r\n                anchorEl={anchorRef ? anchorRef.current : null}\r\n            />\r\n            {\r\n                loading &&\r\n                <Loading />\r\n            }\r\n        </>\r\n    );\r\n}\r\nListView.propTypes = {\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n    stockList : state.screen.stockList\r\n})\r\nconst mapDispatchToProps = {\r\n    GetScreenListData,\r\n    GetTrendWideData,\r\n    GetPowerPlayData,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListView) ;","import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport {\r\n    Box,\r\n    List,\r\n    ListItem,\r\n} from '@mui/material';\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        background : '#f8fca430',\r\n        height: '100%',\r\n\r\n    },\r\n    idleItemDiv : {\r\n        display : 'flex !important', alignItems : 'center !important', justifyContent : 'space-between !important',\r\n        background: 'linear-gradient(0deg, rgba(248,252,164,0.8239670868347339) 0%, rgba(248,249,200,0.21332282913165268) 45%, rgba(255,251,138,0.6671043417366946) 100%)',\r\n        borderBottom : '1px solid #f6d510',\r\n\r\n        cursor : 'pointer'\r\n    },\r\n    activeItemDiv : {\r\n        display : 'flex !important', alignItems : 'center !important', justifyContent : 'space-between !important',\r\n        borderBottom : '1px solid #f6d510',\r\n\r\n        color : '#c77e33',\r\n\r\n        cursor : 'pointer',\r\n        background : 'white'\r\n    },\r\n    title : {\r\n        fontSize : '13px',\r\n        color : 'gray',\r\n        borderRight : '1px solid #ef8f66',\r\n        background : 'rgb(240,240,230)'\r\n    },\r\n    favourite : {\r\n        display : 'flex',\r\n        justifyContent : 'space-between',\r\n        padding : '10px 20px'\r\n    },\r\n    list : {\r\n    }\r\n}))\r\n\r\nconst Category = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        setSelectedItem,\r\n        selectedItem,\r\n    } = props ;\r\n\r\n    const itemList = [\r\n        {\r\n            value : 'favorite',\r\n            text : <Box sx={{display : 'flex', alignItems : 'center', gap : '5px'}}>\r\n                <StarBorderIcon/>\r\n                <Box>Favorites</Box>\r\n            </Box>,\r\n            count : 8\r\n        },\r\n        {\r\n            value : 'smart',\r\n            text : \"SmartSelect Rating\",\r\n            count : 0\r\n        },\r\n        {\r\n            value : 'earning',\r\n            text : 'Earnings',\r\n            count : 6\r\n        },\r\n        {\r\n            value : 'sales',\r\n            text : 'Sales',\r\n            count : 36\r\n        },\r\n        {\r\n            value : 'industry',\r\n            text : \"Industry & Sector\",\r\n            count : 12\r\n        },\r\n        {\r\n            value : 'sharing',\r\n            text : \"Sharing & Holdings\",\r\n            count : 3\r\n        },\r\n        {\r\n            value : 'pricevolume',\r\n            text : 'Price & Volume',\r\n            count : 37\r\n        },\r\n        {\r\n            value : 'margins',\r\n            text : 'Margins & Ratios',\r\n            count : 31\r\n        },\r\n        {\r\n            value : 'general',\r\n            text : 'General Stock Criteria',\r\n            count : 12\r\n        },\r\n        // {\r\n        //     value : 'idb',\r\n        //     text : 'IBD Content',\r\n        //     count : 4\r\n        // }\r\n    ]\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.title}>\r\n                CATEGORIES\r\n            </Box>\r\n            <Box className={classes.list}>\r\n                <List>\r\n                    {\r\n                        itemList.map((item, index) => {\r\n                            return (\r\n                                <ListItem onClick={() => setSelectedItem(item.value)} key={index}\r\n                                    className={item.value === selectedItem ? classes.activeItemDiv : classes.idleItemDiv}\r\n                                >\r\n                                    <Box sx={{fontSize : '15px', fontWeight : 'bold'}}>\r\n                                        {item.text}\r\n                                    </Box>\r\n                                    <Box sx={{fontSize : '12px'}}>\r\n                                        {0} of {item.count}\r\n                                    </Box>\r\n                                </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\nCategory.propTypes = {\r\n    \r\n}\r\nconst mapStateToProps = state => ({\r\n    stockList : state.screen.stockList\r\n})\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category) ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \"& svg\" : {\r\n            color : 'gray !important'\r\n        },\r\n\r\n        minHeight : 700,\r\n        overflowY : 'auto',\r\n\r\n        // form control background style\r\n        \"& .MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            height : '30px !important',\r\n            maxWidth : '60px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 13\r\n        },\r\n\r\n        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button':\r\n        {\r\n            display: 'none',\r\n        },\r\n    },\r\n    listItemDiv : {\r\n        paddingTop : 10,\r\n        paddingRight : 30,\r\n        paddingBottom : 5,\r\n        \r\n        borderBottom: '1px solid gray'\r\n    },\r\n    liDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10\r\n    },\r\n    underLineDiv : {\r\n        borderBottom : '1px dotted gray'\r\n    },\r\n    rangeDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    checkboxDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport {\r\n    Box, \r\n    Checkbox, \r\n    FormControlLabel, \r\n    FormGroup,\r\n    TextField\r\n} from '@mui/material' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport { useStyles } from './StyledDiv/Smart.styles';\r\n\r\nconst SmartForm = (props) => {\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        formData,\r\n        setFormData\r\n    } = props;\r\n\r\n    const charItems = [\r\n        \"A\",\r\n        \"B\",\r\n        \"C\",\r\n        \"D\",\r\n        \"E\"\r\n    ]\r\n    \r\n    \r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    1\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS Rating</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.eps_rating_min}\r\n                        onChange={(e) => setFormData({...formData, eps_rating_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        value = { formData.eps_rating_max }\r\n                        size={'small'}\r\n                        onChange={(e) =>setFormData({...formData, eps_rating_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    2\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>RS Rating</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.rs_rating_min }\r\n                        onChange={(e) =>setFormData({...formData, rs_rating_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        value = { formData.rs_rating_max }\r\n                        size={'small'}\r\n                        onChange={(e) =>setFormData({...formData, rs_rating_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    3\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>SMR Rating</Box>\r\n                </Box>\r\n                <Box className={classes.checkboxDiv}>\r\n                    {\r\n                        charItems.map((char, index) => {\r\n                            return (\r\n                                <FormGroup row key={index} >\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox     \r\n                                                onChange={(e, id) => \r\n                                                    {\r\n                                                        console.log(e.target.value) ;\r\n                                                        if(e.target.checked) {\r\n                                                            setFormData({\r\n                                                                ...formData,\r\n                                                                smr_rating : formData.smr_rating+','+char\r\n                                                            })\r\n                                                        } else {\r\n                                                            setFormData({\r\n                                                                ...formData,\r\n                                                                smr_rating : formData.smr_rating.split(',').filter(value => \r\n                                                                    value !== char\r\n                                                                ).join(',')\r\n                                                            })\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                // value={formData.smr_rating.split(',').includes(char)} \r\n                                                checked={formData.smr_rating.split(',').includes(char)}\r\n                                            />\r\n                                        }\r\n                                        label={<span>{char}</span>}\r\n                                    />\r\n                                </FormGroup>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    4\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>A/D Rating</Box>\r\n                </Box>\r\n                <Box className={classes.checkboxDiv}>\r\n                    {\r\n                        charItems.map((char, index) => {\r\n                            return (\r\n                                <FormGroup row key={index} >\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                onChange={(e, id) => \r\n                                                    {\r\n                                                        console.log(e.target.value) ;\r\n                                                        if(e.target.checked) {\r\n                                                            setFormData({\r\n                                                                ...formData,\r\n                                                                ad_rating : formData.ad_rating+','+char\r\n                                                            })\r\n                                                        } else {\r\n                                                            setFormData({\r\n                                                                ...formData,\r\n                                                                ad_rating : formData.ad_rating.split(',').filter(value => \r\n                                                                    value !== char\r\n                                                                ).join(',')\r\n                                                            })\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                checked={formData.ad_rating.split(',').includes(char)}\r\n                                            \r\n                                            />\r\n                                        }\r\n                                        label={<span>{char}</span>}\r\n                                    />\r\n                                </FormGroup>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    5\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Comp Rating</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        value = { formData.comp_rating_min }\r\n                        size={'small'}\r\n                        onChange={(e) =>setFormData({...formData, comp_rating_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        value = { formData.comp_rating_max }\r\n                        size={'small'}\r\n                        onChange={(e) =>setFormData({...formData, comp_rating_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    6\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Ind Group Rs Rating</Box>\r\n                </Box>\r\n                <Box className={classes.checkboxDiv}>\r\n                    {\r\n                        charItems.map((char, index) => {\r\n                            return (\r\n                                <FormGroup row key={index} >\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                onChange={(e, id) => \r\n                                                    {\r\n                                                        console.log(e.target.value) ;\r\n                                                        if(e.target.checked) {\r\n                                                            setFormData({\r\n                                                                ...formData,\r\n                                                                ind_group_rs_rating : formData.ind_group_rs_rating+','+char\r\n                                                            })\r\n                                                        } else {\r\n                                                            setFormData({\r\n                                                                ...formData,\r\n                                                                ind_group_rs_rating : formData.ind_group_rs_rating.split(',').filter(value => \r\n                                                                    value !== char\r\n                                                                ).join(',')\r\n                                                            })\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                checked={formData.ind_group_rs_rating.split(',').includes(char)}                         \r\n                                            />\r\n                                        }\r\n                                        label={<span>{char}</span>}\r\n                                    />\r\n                                </FormGroup>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SmartForm ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \"& svg\" : {\r\n            color : 'gray !important'\r\n        },\r\n\r\n        height : 700,\r\n        overflowY : 'auto',\r\n\r\n        // form control background style\r\n        \"& .MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            height : '30px !important',\r\n            maxWidth : '160px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 13\r\n        },\r\n\r\n        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button':\r\n        {\r\n            display: 'none',\r\n        },\r\n    },\r\n    listItemDiv : {\r\n        paddingTop : 10,\r\n        paddingRight : 30,\r\n        paddingBottom : 5,\r\n        \r\n        borderBottom: '1px solid gray'\r\n    },\r\n    liDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10\r\n    },\r\n    underLineDiv : {\r\n        cursor : 'pointer',\r\n        borderBottom : '1px dotted gray',\r\n        \"&:hover\" : {\r\n            color : '#c77e33'\r\n        }\r\n    },\r\n    rangeDiv : {\r\n        paddingTop : 10,\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    checkboxDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    selectDateDiv : {\r\n        paddingTop : 10,\r\n        paddingLeft : 20,\r\n        display : 'flex', gap : 10,\r\n        fontSize: 15\r\n    },\r\n    selectDiv : {\r\n        cursor : 'pointer',\r\n        \"&:hover\" : {\r\n            color : 'blue'\r\n        }\r\n    },\r\n    bannderDiv : {\r\n        background: 'linear-gradient(90deg, rgba(200,199,195,1) 0%, rgba(255,255,255,1) 100%)',\r\n        fontWeight :'bold'\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    Box, \r\n    Checkbox, \r\n    FormControlLabel, \r\n    FormGroup,\r\n    TextField,\r\n    RadioGroup,\r\n    Radio\r\n} from '@mui/material' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport { useStyles } from './StyledDiv/Earning.styles';\r\n\r\nconst EarningForm = (props) => {\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        formData,\r\n        setFormData,\r\n    } = props;\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    1\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Earnings Last Reported Date</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <Box>\r\n                        <TextField\r\n                            type={'date'}\r\n                            size={'small'}\r\n                            value = { formData.erns_lst_rpt_date_min }\r\n                            // defaultValue={ new Date().toISOString().substring(0, 10) }\r\n                            onChange={(e) => setFormData({...formData, erns_lst_rpt_date_min : e.target.value})}\r\n                        />\r\n                        <Box sx={{fontSize : '13px', textAlign : 'right'}}>Date</Box>\r\n                    </Box>\r\n                    <Box >to</Box>\r\n                    <Box>\r\n                        <TextField\r\n                            type={'date'}\r\n                            size={'small'}\r\n                            value = { formData.erns_lst_rpt_date_max}\r\n                            // defaultValue={ new Date().toISOString().substring(0, 10)}\r\n                            onChange={(e) => setFormData({...formData, erns_lst_rpt_date_max : e.target.value})}\r\n                        />\r\n                        <Box sx={{fontSize : '13px', textAlign : 'right'}}>Date</Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    2\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Earning Due Date</Box>\r\n                </Box>\r\n                <Box className={classes.selectDateDiv}>\r\n                    <Box className={classes.selectDiv}>Today</Box>\r\n                    <Box className={classes.selectDiv}>Tomorror</Box>\r\n                    <Box className={classes.selectDiv}>Next 5 Days</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <Box>\r\n                        <TextField\r\n                            type={'date'}\r\n                            size={'small'}\r\n                            // defaultValue={new Date().toISOString().substring(0, 10)}\r\n                            value = { formData.erns_dued_min}\r\n                            onChange={(e) => setFormData({...formData, erns_dued_min : e.target.value})}\r\n                        />\r\n                        <Box sx={{fontSize : '13px', textAlign : 'right'}}>Date</Box>\r\n                    </Box>\r\n                    <Box >to</Box>\r\n                    <Box>\r\n                        <TextField\r\n                            type={'date'}\r\n                            size={'small'}\r\n                            // defaultValue={new Date().toISOString().substring(0, 10) }\r\n                            value = { formData.erns_dued_max}\r\n                            onChange={(e) => setFormData({...formData, erns_dued_max : e.target.value})}\r\n                        />\r\n                        <Box sx={{fontSize : '13px', textAlign : 'right'}}>Date</Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.bannderDiv}>\r\n                Quarterly\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    3\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Change - Last Reported Quarter</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <FormGroup row >\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                \r\n                                />\r\n                            }\r\n                            label={<span>{'Include stocks with negative comparison quarter'}</span>}\r\n                        />\r\n                    </FormGroup>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_chg_lst_rpt_q_min}\r\n                        onChange={(e) => setFormData({...formData, eps_chg_lst_rpt_q_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        value = { formData.eps_chg_lst_rpt_q_max}\r\n                        size={'small'}\r\n                        onChange={(e) => setFormData({...formData, eps_chg_lst_rpt_q_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    4\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Change - 1 Quarter Ago</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <FormGroup row >\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                \r\n                                />\r\n                            }\r\n                            label={<span>{'Include stocks with negative comparison quarter'}</span>}\r\n                        />\r\n                    </FormGroup>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        value = { formData.eps_chg_q_1_min}\r\n                        size={'small'}\r\n                        onChange={(e) => setFormData({...formData, eps_chg_q_1_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        value = { formData.eps_chg_q_1_max}\r\n                        size={'small'}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_q_1_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    5\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Earnings Acceleration - Last 3 Qtrs</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.erns_acce_lst_q_3} >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, erns_acce_lst_q_3 : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, erns_acce_lst_q_3 : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    6\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Earnings Stability</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        value = { formData.erns_stability_min}\r\n                        size={'small'}\r\n                        onChange={(e) =>setFormData({...formData, erns_stability_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        value = { formData.erns_stability_max}\r\n                        size={'small'}\r\n                        onChange={(e) =>setFormData({...formData, erns_stability_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            \r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    7\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Change - 2 Quarter Ago</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <FormGroup row >\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                />\r\n                            }\r\n                            label={<span>{'Include stocks with negative comparison quarter'}</span>}\r\n                        />\r\n                    </FormGroup>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        value = { formData.eps_chg_q_2_min}\r\n                        size={'small'}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_q_2_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_chg_q_2_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_q_2_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    8\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Change - 3 Quarter Ago</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <FormGroup row >\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                \r\n                                />\r\n                            }\r\n                            label={<span>{'Include stocks with negative comparison quarter'}</span>}\r\n                        />\r\n                    </FormGroup>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_chg_q_3_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_q_3_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_chg_q_3_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_q_3_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    9\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Change - Last Reported Quarter {'>'} Last 3 Quarters</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.eps_chg_lst_rpt_q_eps_chg_lst_q_3_is_bigger} >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={(e) => setFormData({...formData, eps_chg_lst_rpt_q_eps_chg_lst_q_3_is_bigger : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={(e) => setFormData({...formData, eps_chg_lst_rpt_q_eps_chg_lst_q_3_is_bigger : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    10\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average EPS % Change - Last 2 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.avg_eps_chg_lst_q_2_min}\r\n                        onChange={(e) =>setFormData({...formData, avg_eps_chg_lst_q_2_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.avg_eps_chg_lst_q_2_max}\r\n                        onChange={(e) =>setFormData({...formData, avg_eps_chg_lst_q_2_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    11\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average EPS % Change - Last 3 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.avg_eps_chg_lst_q_3_min}\r\n                        onChange={(e) =>setFormData({...formData, avg_eps_chg_lst_q_3_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.avg_eps_chg_lst_q_3_max}\r\n                        onChange={(e) =>setFormData({...formData, avg_eps_chg_lst_q_3_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    12\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average EPS % Change - Last 4 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.avg_eps_chg_lst_q_4_min}\r\n                        onChange={(e) =>setFormData({...formData, avg_eps_chg_lst_q_4_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.avg_eps_chg_lst_q_4_max}\r\n                        onChange={(e) =>setFormData({...formData, avg_eps_chg_lst_q_4_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    13\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average EPS % Change - Last 5 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.avg_eps_chg_lst_q_5_min}\r\n                        onChange={(e) =>setFormData({...formData, avg_eps_chg_lst_q_5_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.avg_eps_chg_lst_q_5_max}\r\n                        onChange={(e) =>setFormData({...formData, avg_eps_chg_lst_q_5_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    14\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average EPS % Change - Last 6 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.avg_eps_chg_lst_q_6_min}\r\n                        onChange={(e) =>setFormData({...formData, avg_eps_chg_lst_q_6_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.avg_eps_chg_lst_q_6_max}\r\n                        onChange={(e) =>setFormData({...formData, avg_eps_chg_lst_q_6_min : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    15\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - Trailing 4 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_trailing_q_4_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_trailing_q_4_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_trailing_q_4_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_trailing_q_4_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n            \r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    16\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - Trailing 4 Qtrs {`>`} EPS, 4 Years Ago</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.eps_trailing_q_4_is_bigger} >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, eps_trailing_q_4_is_bigger : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, eps_trailing_q_4_is_bigger : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    17\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - Trailing 4 Qtrs {`>=`} Last Year</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row  value={ formData.eps_trailing_q_4_lst_y_is_bigger}>\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, eps_trailing_q_4_lst_y_is_bigger : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, eps_trailing_q_4_lst_y_is_bigger : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.bannderDiv}>\r\n                Annual\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    18\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Change - Last Reported Year vs. 1 Years Ago</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_chg_lst_rpty_vs_1y_ago_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_lst_rpty_vs_1y_ago_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_chg_lst_rpty_vs_1y_ago_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_lst_rpty_vs_1y_ago_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    19\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Change - Last Reported Year vs. 2 Years Ago</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_chg_lst_rpty_vs_2y_ago_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_lst_rpty_vs_2y_ago_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_chg_lst_rpty_vs_2y_ago_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_lst_rpty_vs_2y_ago_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    20\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Change - Last Year</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_chg_lst_y_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_lst_y_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_chg_lst_y_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_chg_lst_y_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n           \r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    21\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Growth Rate - Last 3 Years</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_grow_rate_lst_3y_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_grow_rate_lst_3y_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_grow_rate_lst_3y_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_grow_rate_lst_3y_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    22\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Growth Rate - Last 5 Years</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_grow_rate_lst_5y_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_grow_rate_lst_5y_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_grow_rate_lst_5y_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_grow_rate_lst_5y_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    23\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Growth Rate - Last 3 Years {`>=`} 5 Years</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.eps_grow_rate_lst_3y_5y_is_bigger}>\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, eps_grow_rate_lst_3y_5y_is_bigger : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, eps_grow_rate_lst_3y_5y_is_bigger : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    24\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Growth Rate - Last 5 Years Percential Rank</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_grow_rate_lst_5y_percent_rnk_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_grow_rate_lst_5y_percent_rnk_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_grow_rate_lst_5y_percent_rnk_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_grow_rate_lst_5y_percent_rnk_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    25\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS % Growth Rate - Projected Sustainable Growth</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_grow_rate_projected_sus_growth_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_grow_rate_projected_sus_growth_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_grow_rate_projected_sus_growth_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_grow_rate_projected_sus_growth_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    26\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - Last Reported Year</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_lst_rpty_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_lst_rpty_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_lst_rpty_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_lst_rpty_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    27\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - 1 Years Ago</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_1y_ago_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_1y_ago_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_1y_ago_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_1y_ago_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    28\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - 2 Years Ago</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_2y_ago_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_2y_ago_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_2y_ago_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_2y_ago_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    29\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - 3 Years Ago</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_3y_ago_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_3y_ago_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_3y_ago_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_3y_ago_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    30\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - 4 Years Ago</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_4y_ago_min}\r\n                        onChange={(e) =>setFormData({...formData, eps_4y_ago_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_4y_ago_max}\r\n                        onChange={(e) =>setFormData({...formData, eps_4y_ago_min : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    31\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - 5 Years Ago</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_5y_ago_min}\r\n                        onChange={(e) => setFormData({...formData, eps_5y_ago_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_5y_ago_max}\r\n                        onChange={(e) => setFormData({...formData, eps_5y_ago_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    32\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - 6 Years Ago</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_6y_ago_min}\r\n                        onChange={(e) => setFormData({...formData, eps_6y_ago_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_6y_ago_max}\r\n                        onChange={(e) => setFormData({...formData, eps_6y_ago_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    33\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS - Last Reported Year {`>`} 4 Years Ago</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.eps_lst_rpty_4y_is_bigger}>\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, eps_lst_rpty_4y_is_bigger : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, eps_lst_rpty_4y_is_bigger : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.bannderDiv}>\r\n                Estimates\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    34\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS Estimate - Earnings Surprise</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_est_erns_surp_min}\r\n                        onChange={(e) => setFormData({...formData, eps_est_erns_surp_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_est_erns_surp_max}\r\n                        onChange={(e) => setFormData({...formData, eps_est_erns_surp_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    35\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS Estimate % Change - Next Quarter</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_est_chg_next_q_min}\r\n                        onChange={(e) => setFormData({...formData, eps_est_chg_next_q_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_est_chg_next_q_max}\r\n                        onChange={(e) => setFormData({...formData, eps_est_chg_next_q_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    36\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS Estimate % Change - CUrrent Year</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_est_chg_cur_y_min}\r\n                        onChange={(e) => setFormData({...formData, eps_est_chg_cur_y_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        value = { formData.eps_est_chg_cur_y_max}\r\n                        size={'small'}\r\n                        onChange={(e) => setFormData({...formData, eps_est_chg_cur_y_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    37\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>EPS Estimate % Change - 1 Year Forward vs. C...</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = { formData.eps_est_chg_1y_forward_vs_min}\r\n                        onChange={(e) => setFormData({...formData, eps_est_chg_1y_forward_vs_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = { formData.eps_est_chg_1y_forward_vs_max}\r\n                        onChange={(e) => setFormData({...formData, eps_est_chg_1y_forward_vs_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (EarningForm) ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \"& svg\" : {\r\n            color : 'gray !important'\r\n        },\r\n\r\n        height : 700,\r\n        overflowY : 'auto',\r\n\r\n        // form control background style\r\n        \"& .MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            height : '30px !important',\r\n            maxWidth : '160px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 13\r\n        },\r\n\r\n        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button':\r\n        {\r\n            display: 'none',\r\n        },\r\n    },\r\n    listItemDiv : {\r\n        paddingTop : 10,\r\n        paddingRight : 30,\r\n        paddingBottom : 5,\r\n        \r\n        borderBottom: '1px solid gray'\r\n    },\r\n    liDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10\r\n    },\r\n    underLineDiv : {\r\n        cursor : 'pointer',\r\n        borderBottom : '1px dotted gray',\r\n        \"&:hover\" : {\r\n            color : '#c77e33'\r\n        }\r\n    },\r\n    rangeDiv : {\r\n        paddingTop : 10,\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    checkboxDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    selectDateDiv : {\r\n        paddingTop : 10,\r\n        paddingLeft : 20,\r\n        display : 'flex', gap : 10,\r\n        fontSize: 15\r\n    },\r\n    selectDiv : {\r\n        cursor : 'pointer',\r\n        \"&:hover\" : {\r\n            color : 'blue'\r\n        }\r\n    },\r\n    bannderDiv : {\r\n        background: 'linear-gradient(90deg, rgba(200,199,195,1) 0%, rgba(255,255,255,1) 100%)',\r\n        fontWeight :'bold'\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    Box, \r\n    Checkbox, \r\n    FormControlLabel, \r\n    FormGroup,\r\n    TextField,\r\n    RadioGroup,\r\n    Radio,\r\n} from '@mui/material' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport { useStyles } from './StyledDiv/Sales.styles';\r\n\r\nconst SalesForm = (props) => {\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        formData,\r\n        setFormData,\r\n    } = props;\r\n\r\n    \r\n    \r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.bannderDiv}>\r\n                Quarterly\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    1\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Sales % Change - Last Reported Quarter</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.sales_chg_lst_rpt_q_min}\r\n                        onChange={(e) => setFormData({...formData, sales_chg_lst_rpt_q_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.sales_chg_lst_rpt_q_max}\r\n                        onChange={(e) => setFormData({...formData, sales_chg_lst_rpt_q_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    2\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average Sales % Change - Last 2 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.avg_sales_chg_lst_2_q_min}\r\n                        onChange={(e) => setFormData({...formData, avg_sales_chg_lst_2_q_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.avg_sales_chg_lst_2_q_max}                        \r\n                        onChange={(e) => setFormData({...formData, avg_sales_chg_lst_2_q_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    3\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average Sales % Change - Last 3 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.avg_sales_chg_lst_3_q_min}\r\n                        \r\n                        onChange={(e) => setFormData({...formData, avg_sales_chg_lst_3_q_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.avg_sales_chg_lst_3_q_max}\r\n                        onChange={(e) => setFormData({...formData, avg_sales_chg_lst_3_q_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    4\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average Sales % Change - Last 4 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        value = {formData.avg_sales_chg_lst_4_q_min}\r\n                        size={'small'}\r\n                        onChange={(e) => setFormData({...formData, avg_sales_chg_lst_4_q_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        value = {formData.avg_sales_chg_lst_4_q_max}\r\n                        size={'small'}\r\n                        onChange={(e) => setFormData({...formData, avg_sales_chg_lst_4_q_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    5\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average Sales % Change - Last 5 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        value = {formData.avg_sales_chg_lst_5_q_min}\r\n                        placeholder={'Min'}\r\n                        onChange={(e) => setFormData({...formData, avg_sales_chg_lst_5_q_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        value = {formData.avg_sales_chg_lst_5_q_max}\r\n                        size={'small'}\r\n                        onChange={(e) => setFormData({...formData, avg_sales_chg_lst_5_q_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    6\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average Sales % Change - Last 6 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        value = {formData.avg_sales_chg_lst_6_q_min}\r\n                        size={'small'}\r\n                        onChange={(e) => setFormData({...formData, avg_sales_chg_lst_6_q_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        value = {formData.avg_sales_chg_lst_6_q_max}\r\n                        size={'small'}\r\n                        onChange={(e) => setFormData({...formData, avg_sales_chg_lst_6_q_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            \r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    7\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Sales Acceleration - Last 3 Qtrs</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value = { formData.sales_acc_lst_2_q } >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, sales_acc_lst_2_q : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, sales_acc_lst_2_q : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    8\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Sales Acceleration - Last 3 Qtrs</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.sales_acc_lst_3_q} >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, sales_acc_lst_3_q : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, sales_acc_lst_3_q : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.bannderDiv}>\r\n                Annual\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    9\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Sales % Change - Last Reported Year</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.sales_chg_lst_rpt_y_min}\r\n                        onChange={(e) => setFormData({...formData, sales_chg_lst_rpt_y_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.sales_chg_lst_rpt_y_max}\r\n                        onChange={(e) => setFormData({...formData, sales_chg_lst_rpt_y_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    10\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Sales % Growth Rate - Last 3 Years</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.sales_growth_rate_lst_3_y_min}\r\n                        onChange={(e) => setFormData({...formData, sales_growth_rate_lst_3_y_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.sales_growth_rate_lst_3_y_max}\r\n                        onChange={(e) => setFormData({...formData, sales_growth_rate_lst_3_y_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    11\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Sales % Growth Rate - Last 5 Years</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.sales_growth_rate_lst_5_y_min}\r\n                        onChange={(e) => setFormData({...formData, sales_growth_rate_lst_5_y_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.sales_growth_rate_lst_5_y_max}\r\n                        onChange={(e) => setFormData({...formData, sales_growth_rate_lst_5_y_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    12\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Total Annual Sales {`(mil)`} - Last Reported Year </Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.tot_ann_sales_lst_rpt_y_min}\r\n                        onChange={(e) => setFormData({...formData, tot_ann_sales_lst_rpt_y_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.tot_ann_sales_lst_rpt_y_max}\r\n                        onChange={(e) => setFormData({...formData, tot_ann_sales_lst_rpt_y_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SalesForm) ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    root : {\r\n\r\n        display: 'flex', flexDirection : 'row', gap : 10, alignItems : 'center', justifyContent : 'flex-end',\r\n\r\n        // form control background style\r\n        \"& .MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            minHeight : '110px !important',\r\n            minWidth : '200px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 15\r\n        },\r\n    }\r\n}))","import * as React from 'react';\r\n\r\nimport {\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    Box\r\n} from '@mui/material' ;\r\n\r\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\r\n\r\nimport { useStyles } from './StyledDiv/TwoSelectBox.styles';\r\nimport { useTheme } from '@mui/styles';\r\n\r\nexport const TwoSelectBox = (props) => {\r\n\r\n    const classes = useStyles() ;\r\n    const theme = useTheme() ;\r\n\r\n    const {\r\n        formData,\r\n        setFormData,\r\n        parent_value,\r\n    } = props;\r\n\r\n    const {\r\n        baseItems \r\n    } = props ;\r\n\r\n    // initial_data = formData[]\r\n\r\n    const [selectedItems, setSelectedItems] = React.useState([]);\r\n    const [exportedItems, setExportedItems] = React.useState([]) ;\r\n    const [tempItems, setTempItems] = React.useState( formData[parent_value] ) ;\r\n    \r\n    // \r\n    const handleChangeMultiple = (e, which) => {\r\n        const { options } = e.target;\r\n        const value  = [];\r\n\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n            if ( options[i].selected ) {\r\n                value.push(options[i].value);\r\n            }\r\n        }\r\n        if(which === 'selected') setSelectedItems(value) ;\r\n        if(which === 'exported') setExportedItems(value) ;        \r\n    };\r\n\r\n    const handleTempItems = (selectedItems) => {\r\n        const value  = [];\r\n\r\n        for (let i = 0, l = selectedItems.length; i < l; i += 1) {\r\n            value.push(selectedItems[i]);\r\n        }\r\n\r\n        setTempItems([...value]) ;        \r\n        \r\n        Object.keys( formData ).forEach( key => {\r\n            if ( key == parent_value ){\r\n                \r\n                formData[key] = value;\r\n                setFormData({\r\n                    ...formData                    \r\n                })\r\n                console.log( formData ,'sss')                \r\n            }\r\n        })\r\n        // setFormData( {...formData, parent_value: value } ) ;\r\n      \r\n    }\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <FormControl>\r\n                    <Select\r\n                        multiple\r\n                        native\r\n                        value={selectedItems}\r\n                        onChange={(e) => handleChangeMultiple(e, 'selected')}\r\n                        inputProps={{\r\n                            id: 'select-multiple-native',\r\n                        }}\r\n                    >\r\n                    {\r\n                        baseItems?.map((item) => (\r\n                            <option key={item + '_selected'} value={item}>\r\n                            {item}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                    </Select>\r\n                </FormControl>\r\n                <DoubleArrowIcon sx={{cursor : 'pointer', \"&:hover\" : {color : theme.palette.brown.main + ' !important'}}} \r\n                    onClick={() => handleTempItems(selectedItems)}\r\n                />\r\n                <FormControl>\r\n                    <Select\r\n                        multiple\r\n                        native\r\n                        onChange={(e) => handleChangeMultiple(e, 'exported')}\r\n                        value={exportedItems}                        \r\n                        inputProps={{\r\n                            id: 'select-multiple-native',\r\n                        }}\r\n                    >\r\n                    {\r\n                        tempItems?.map((item) => (\r\n                            <option key={item + '_exported'} value={item}>\r\n                            {item}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n            <Box sx={{textAlign : 'right'}}><u>Reset</u></Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TwoSelectBox ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \"& svg\" : {\r\n            color : 'gray !important'\r\n        },\r\n\r\n        height : 700,\r\n        overflowY : 'auto',\r\n\r\n        // form control background style\r\n        \"&.MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            height : '30px !important',\r\n            maxWidth : '160px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 13\r\n        },\r\n\r\n        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button':\r\n        {\r\n            display: 'none',\r\n        },\r\n    },\r\n    listItemDiv : {\r\n        paddingTop : 10,\r\n        paddingRight : 30,\r\n        paddingBottom : 5,\r\n        \r\n        borderBottom: '1px solid gray'\r\n    },\r\n    liDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10\r\n    },\r\n    underLineDiv : {\r\n        cursor : 'pointer',\r\n        borderBottom : '1px dotted gray',\r\n        \"&:hover\" : {\r\n            color : '#c77e33'\r\n        }\r\n    },\r\n    rangeDiv : {\r\n        paddingTop : 10,\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    checkboxDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    selectDateDiv : {\r\n        paddingTop : 10,\r\n        paddingLeft : 20,\r\n        display : 'flex', gap : 10,\r\n        fontSize: 15\r\n    },\r\n    selectDiv : {\r\n        cursor : 'pointer',\r\n        \"&:hover\" : {\r\n            color : 'blue'\r\n        }\r\n    },\r\n    multiLetterDiv : {\r\n        paddingLeft : 20\r\n    },\r\n    bannderDiv : {\r\n        background: 'linear-gradient(90deg, rgba(200,199,195,1) 0%, rgba(255,255,255,1) 100%)',\r\n        fontWeight :'bold'\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport TwoSelectBox from './TwoSelectBoxs';\r\n\r\nimport {\r\n    Box, \r\n    Radio, \r\n    FormControlLabel, \r\n    FormGroup,\r\n    TextField,\r\n    RadioGroup,\r\n} from '@mui/material' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport { useStyles } from './StyledDiv/Industry.styles';\r\n\r\nconst IndustryForm = (props) => {\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        formData,\r\n        setFormData\r\n    } = props;\r\n    const mockData1 = [\r\n        \"Aerospace/Defense\",\r\n        \"Agricultural Operations\",\r\n        \"Apparel-Clothing Mfg\",\r\n        \"Apparel-Shoes & Rel Mfg\",\r\n        \"Auto Manufactures\",\r\n        \"Auto/Truck-Original Exp\",\r\n        \"Auto/Truck-Replace Parts\",\r\n    ]\r\n\r\n    const mockData2 = [\r\n        \"AEROSPACE\",\r\n        \"AGRICULTRE\",\r\n        \"ALCOHL/TOB\",\r\n        \"APPAREL\",\r\n        \"AUTO\",\r\n        \"BANKS\",\r\n        \"BUILDING\",\r\n    ]\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    1\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Company's Industry Group Rank</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.company_ids_g_r_min}\r\n                        onChange={(e) => setFormData({...formData, company_ids_g_r_min : e.target.value})}\r\n                        \r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.company_ids_g_r_max}\r\n                        onChange={(e) => setFormData({...formData, company_ids_g_r_max : e.target.value})}\r\n                        \r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    2\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Industry Group Name</Box>\r\n                </Box>\r\n                <Box className={classes.multiLetterDiv}>\r\n                    <b>CTRL</b> or <b>SHIFT</b> to multi-select\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row defaultValue=\"no\" >\r\n                        <FormControlLabel\r\n                            value=\"include\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Include'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Exclude'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n                <Box >\r\n                    <TwoSelectBox \r\n                        baseItems={mockData1}\r\n                        setFormData={setFormData}\r\n                        formData = {formData}\r\n                        parent_value = \"industry_g_n\"\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    3\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Broad Sectors</Box>\r\n                </Box>\r\n                <Box className={classes.multiLetterDiv}>\r\n                    <b>CTRL</b> or <b>SHIFT</b> to multi-select\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row defaultValue=\"include\" >\r\n                        <FormControlLabel\r\n                            value=\"include\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Include'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"exclude\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Exclude'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n                <Box >\r\n                    <TwoSelectBox \r\n                        baseItems={mockData2}\r\n                        setFormData={setFormData}\r\n                        formData = {formData}\r\n                        parent_value = \"broad_sectors\"\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default IndustryForm ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \"& svg\" : {\r\n            color : 'gray !important'\r\n        },\r\n\r\n        height : 700,\r\n        overflowY : 'auto',\r\n\r\n        // form control background style\r\n        \"& .MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            height : '30px !important',\r\n            maxWidth : '160px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 13\r\n        },\r\n\r\n        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button':\r\n        {\r\n            display: 'none',\r\n        },\r\n    },\r\n    listItemDiv : {\r\n        paddingTop : 10,\r\n        paddingRight : 30,\r\n        paddingBottom : 5,\r\n        \r\n        borderBottom: '1px solid gray'\r\n    },\r\n    liDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10\r\n    },\r\n    underLineDiv : {\r\n        cursor : 'pointer',\r\n        borderBottom : '1px dotted gray',\r\n        \"&:hover\" : {\r\n            color : '#c77e33'\r\n        }\r\n    },\r\n    rangeDiv : {\r\n        paddingTop : 10,\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    checkboxDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    selectDateDiv : {\r\n        paddingTop : 10,\r\n        paddingLeft : 20,\r\n        display : 'flex', gap : 10,\r\n        fontSize: 15\r\n    },\r\n    selectDiv : {\r\n        cursor : 'pointer',\r\n        \"&:hover\" : {\r\n            color : 'blue'\r\n        }\r\n    },\r\n    bannderDiv : {\r\n        background: 'linear-gradient(90deg, rgba(200,199,195,1) 0%, rgba(255,255,255,1) 100%)',\r\n        fontWeight :'bold'\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n// import { InsertScreenOptionData } from '../../../redux/actions/screenOption';\r\n\r\nimport {\r\n    Box, \r\n    Checkbox, \r\n    FormControlLabel, \r\n    FormGroup,\r\n    TextField,\r\n    RadioGroup,\r\n    Radio\r\n} from '@mui/material' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport { useStyles } from './StyledDiv/Sharing.styles';\r\n\r\nconst SharingForm = (props) => {\r\n    const classes = useStyles() ;\r\n    \r\n    const {\r\n        formData,\r\n        setFormData,\r\n        // InsertScreenOptionData\r\n    } = props;\r\n\r\n    React.useEffect(async () => {\r\n\r\n        // await InsertScreenOptionData(formData);\r\n\r\n        console.log(formData.sponsorship_rating) ;\r\n\r\n    }, [formData])\r\n    \r\n    const charItems = [\r\n        \"A\",\r\n        \"B\",\r\n        \"C\",\r\n        \"D\",\r\n        \"E\"\r\n    ]\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    1\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Shares Outstanding {`(1000s)`}</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.shares_outstanding_min}\r\n                        onChange={(e) => setFormData({...formData, shares_outstanding_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.shares_outstanding_max}\r\n                        onChange={(e) => setFormData({...formData, shares_outstanding_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    2\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Share in Float {`(1000s)`}</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.shares_in_float_min}\r\n                        onChange={(e) => setFormData({...formData, shares_in_float_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.shares_in_float_max}\r\n                        onChange={(e) => setFormData({...formData, shares_in_float_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    3\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Market Capitialization {`(mil)`} </Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.market_capitialization_min}\r\n                        onChange={(e) => setFormData({...formData, market_capitialization_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.market_capitialization_max}\r\n                        onChange={(e) => setFormData({...formData, market_capitialization_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    4\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Enterprise Value {`(mil)`} </Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.enterprise_value_min}\r\n                        onChange={(e) => setFormData({...formData, enterprise_value_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.enterprise_value_max}\r\n                        onChange={(e) => setFormData({...formData, enterprise_value_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    5\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Sponsorship Rating</Box>\r\n                </Box>\r\n                <Box className={classes.checkboxDiv}>\r\n                    {\r\n                        charItems.map((char, index) => {\r\n                            return (\r\n                                <FormGroup row key={index} >\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                onChange={(e, id) => \r\n                                                    {\r\n                                                        console.log(e.target.value) ;\r\n                                                        if(e.target.checked) {\r\n                                                            setFormData({\r\n                                                                ...formData,\r\n                                                                sponsorship_rating : formData.sponsorship_rating+','+char\r\n                                                            })\r\n                                                        } else {\r\n                                                            setFormData({\r\n                                                                ...formData,\r\n                                                                sponsorship_rating : formData.sponsorship_rating.split(',').filter(value => \r\n                                                                    value !== char\r\n                                                                ).join(',')\r\n                                                            })\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                checked={formData.sponsorship_rating.split(',').includes(char)} \r\n                                            />\r\n                                        }\r\n                                        label={<span>{char}</span>}\r\n                                    />\r\n                                </FormGroup>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    6\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Funds %</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.funds_min}\r\n                        onChange={(e) => setFormData({...formData, funds_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.funds_max}\r\n                        onChange={(e) => setFormData({...formData, funds_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            \r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    7\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Funds % Increase</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.funds_increase_min}\r\n                        onChange={(e) => setFormData({...formData, funds_increase_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.funds_increase_max}\r\n                        onChange={(e) => setFormData({...formData, funds_increase_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    8\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Number of Fund</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.number_of_fund_min}\r\n                        onChange={(e) => setFormData({...formData, number_of_fund_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.number_of_fund_max}\r\n                        onChange={(e) => setFormData({...formData, number_of_fund_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    9\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Management %</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.management_min}\r\n                        onChange={(e) => setFormData({...formData, management_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.management_max}\r\n                        onChange={(e) => setFormData({...formData, management_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    10\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Institutional Ownership {`<`} Median</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.institutional_ownership } >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, institutional_ownership : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, institutional_ownership : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n    // InsertScreenOptionData\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SharingForm) ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \"& svg\" : {\r\n            color : 'gray !important'\r\n        },\r\n\r\n        height : 700,\r\n        overflowY : 'auto',\r\n\r\n        // form control background style\r\n        \"& .MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            height : '30px !important',\r\n            maxWidth : '160px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 13\r\n        },\r\n\r\n        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button':\r\n        {\r\n            display: 'none',\r\n        },\r\n    },\r\n    listItemDiv : {\r\n        paddingTop : 10,\r\n        paddingRight : 30,\r\n        paddingBottom : 5,\r\n        \r\n        borderBottom: '1px solid gray'\r\n    },\r\n    liDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10\r\n    },\r\n    underLineDiv : {\r\n        cursor : 'pointer',\r\n        borderBottom : '1px dotted gray',\r\n        \"&:hover\" : {\r\n            color : '#c77e33'\r\n        }\r\n    },\r\n    rangeDiv : {\r\n        paddingTop : 10,\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    checkboxDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    selectDateDiv : {\r\n        paddingTop : 10,\r\n        paddingLeft : 20,\r\n        display : 'flex', gap : 10,\r\n        fontSize: 15\r\n    },\r\n    selectDiv : {\r\n        cursor : 'pointer',\r\n        \"&:hover\" : {\r\n            color : 'blue'\r\n        }\r\n    },\r\n    bannderDiv : {\r\n        background: 'linear-gradient(90deg, rgba(200,199,195,1) 0%, rgba(255,255,255,1) 100%)',\r\n        fontWeight :'bold'\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport {\r\n    Box, \r\n    Checkbox, \r\n    FormControlLabel, \r\n    FormGroup,\r\n    TextField,\r\n    RadioGroup,\r\n    Radio\r\n} from '@mui/material' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport { useStyles } from './StyledDiv/Price.styles';\r\n\r\nconst PriceVolumeForm = (props) => {\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        formData,\r\n        setFormData,\r\n    } = props;\r\n\r\n    const charItems = [\r\n        \"A\",\r\n        \"B\",\r\n        \"C\",\r\n        \"D\",\r\n        \"E\"\r\n    ]\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    1\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_min}\r\n                        onChange={(e) => setFormData({...formData, price_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_max}\r\n                        onChange={(e) => setFormData({...formData, price_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    2\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price vs 52-Week High</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_52_week_high_min}\r\n                        onChange={(e) => setFormData({...formData, price_vs_52_week_high_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_52_week_high_max}\r\n                        onChange={(e) => setFormData({...formData, price_vs_52_week_high_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    3\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price % Change - Current Day</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_cur_d_min}\r\n                        onChange={(e) => setFormData({...formData, price_chg_cur_d_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_cur_d_max}\r\n                        onChange={(e) => setFormData({...formData, price_chg_cur_d_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    4\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price $ Change</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_min}\r\n                        onChange={(e) => setFormData({...formData, price_chg_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_max}\r\n                        onChange={(e) => setFormData({...formData, price_chg_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    5\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price % Change - Current Week</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_cur_w_min}\r\n                        onChange={(e) => setFormData({...formData, price_chg_cur_w_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_cur_w_max}\r\n                        onChange={(e) => setFormData({...formData, price_chg_cur_w_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    6\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price % Change - Last Month</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_lst_m_min}\r\n                        onChange={(e) => setFormData({...formData, price_chg_lst_m_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_lst_m_max}\r\n                        onChange={(e) => setFormData({...formData, price_chg_lst_m_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    7\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price % Change - Last 3 Months</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_lst_3_m_min}\r\n                        onChange={(e) => setFormData({...formData, price_chg_lst_3_m_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_lst_3_m_max}\r\n                        onChange={(e) => setFormData({...formData, price_chg_lst_3_m_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    8\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price % Change - Last 6 Months</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_lst_6_m_min}\r\n                        onChange={(e) => setFormData({...formData, price_chg_lst_6_m_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_lst_6_m_max}\r\n                        onChange={(e) => setFormData({...formData, price_chg_lst_6_m_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    9\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price % Change - Last 12 Months</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_lst_12_m_min}\r\n                        onChange={(e) => setFormData({...formData, price_chg_lst_12_m_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_lst_12_m_max}\r\n                        onChange={(e) => setFormData({...formData, price_chg_lst_12_m_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    10\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price % Change -= Year to Date</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_y_to_d_min}\r\n                        onChange={(e) => setFormData({...formData, price_chg_y_to_d_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_y_to_d_max}\r\n                        onChange={(e) => setFormData({...formData, price_chg_y_to_d_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    11\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price % Change - vs. S{`&`}P 500{`(Last 26 Weeks)`}</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_sp_500_lst26w_min}\r\n                        onChange={(e) => setFormData({...formData, price_chg_sp_500_lst26w_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_chg_sp_500_lst26w_max}\r\n                        onChange={(e) => setFormData({...formData, price_chg_sp_500_lst26w_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    12\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Weekely Closing Range</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.weekly_closing_range_min}\r\n                        onChange={(e) => setFormData({...formData, weekly_closing_range_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.weekly_closing_range_max}\r\n                        onChange={(e) => setFormData({...formData, weekly_closing_range_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    13\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Daily Closing Range</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.daily_closing_range_min}\r\n                        onChange={(e) => setFormData({...formData, daily_closing_range_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.daily_closing_range_max}\r\n                        onChange={(e) => setFormData({...formData, daily_closing_range_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.bannderDiv}>\r\n                Moving Average\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    14\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price vs 10 Day</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_10_d_min}\r\n                        onChange={(e) => setFormData({...formData, price_vs_10_d_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_10_d_max}\r\n                        onChange={(e) => setFormData({...formData, price_vs_10_d_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    15\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price vs 21 Day</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_21_d_min}\r\n                        onChange={(e) => setFormData({...formData, price_vs_21_d_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_21_d_min}\r\n                        onChange={(e) => setFormData({...formData, price_vs_21_d_min : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    16\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price vs 50 Day</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_50_d_min}\r\n                        onChange={(e) => setFormData({...formData, price_vs_50_d_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_50_d_max}\r\n                        onChange={(e) => setFormData({...formData, price_vs_50_d_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    17\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price vs 150 Day</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_150_d_min}\r\n                        onChange={(e) => setFormData({...formData, price_vs_150_d_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_150_d_max}\r\n                        onChange={(e) => setFormData({...formData, price_vs_150_d_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    18\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price vs 200 Day</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_200_d_min}\r\n                        onChange={(e) => setFormData({...formData, price_vs_200_d_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_vs_200_d_max}\r\n                        onChange={(e) => setFormData({...formData, price_vs_200_d_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    19\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>10 Day {`>`} 21 Day {`>`} 50 Day</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.d_10_d_21_d_50 } >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, d_10_d_21_d_50 : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, d_10_d_21_d_50 : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    20\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>50 Day {`>`} 150 Day {`>`} 200 Day</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.d_50_d_150_d_200} >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, d_50_d_150_d_200 : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, d_50_d_150_d_200 : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.bannderDiv}>Volume</Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    21\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Volume - 50 Day Average {`(1000s)`}</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.vol_50_d_avg_min}\r\n                        onChange={(e) => setFormData({...formData, vol_50_d_avg_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.vol_50_d_avg_max}\r\n                        onChange={(e) => setFormData({...formData, vol_50_d_avg_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n           \r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    22\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Volume - % Chg vs. 50 Day Average</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.vol_Chg_50_d_avg_min}\r\n                        onChange={(e) => setFormData({...formData, vol_Chg_50_d_avg_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.vol_Chg_50_d_avg_max}\r\n                        onChange={(e) => setFormData({...formData, vol_Chg_50_d_avg_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    23\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Weekly Volume - % Chg vs. 10 Week Average</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.w_vol_chg_10_w_avg_min}\r\n                        onChange={(e) => setFormData({...formData, w_vol_chg_10_w_avg_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.w_vol_chg_10_w_avg_max}\r\n                        onChange={(e) => setFormData({...formData, w_vol_chg_10_w_avg_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    24\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Current day's Volume greater than previouse 5 da...</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.cur_d_vol_grt_pre_5_d } >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, cur_d_vol_grt_pre_5_d : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, cur_d_vol_grt_pre_5_d : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    25\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Current day's Volume greater than previouse 10 da...</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={formData.cur_d_vol_grt_pre_10_d} >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, cur_d_vol_grt_pre_10_d : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, cur_d_vol_grt_pre_10_d : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    26\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Current day's Volume greater than previouse 20 da...</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={formData.cur_d_vol_grt_pre_20_d } >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, cur_d_vol_grt_pre_20_d : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, cur_d_vol_grt_pre_20_d : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    27\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Volume - Intraday {`(1000s)`}</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.vol_int_min}\r\n                        onChange={(e) => setFormData({...formData, vol_int_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.vol_int_max}\r\n                        onChange={(e) => setFormData({...formData, vol_int_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    28\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Up/Down Volume Ratio</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.up_down_vol_rat_min}\r\n                        onChange={(e) => setFormData({...formData, up_down_vol_rat_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.up_down_vol_rat_max}\r\n                        onChange={(e) => setFormData({...formData, up_down_vol_rat_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    29\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Volume - 50 Day Average Dollar {`1000s`}</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.vol_50_d_avg_dol_1000s_min}\r\n                        onChange={(e) => setFormData({...formData, vol_50_d_avg_dol_1000s_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.vol_50_d_avg_dol_1000s_max}\r\n                        onChange={(e) => setFormData({...formData, vol_50_d_avg_dol_1000s_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.bannderDiv}>\r\n                Relative Strength\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    30\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>RS Line New High</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.rs_line_new_high } >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, rs_line_new_high : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, rs_line_new_high : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    31\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>RS Line New Low</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={ formData.rs_line_new_low } >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, rs_line_new_low : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, rs_line_new_low : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    32\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>RS Rating - 3 Month</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.rs_rating_3_m_min}\r\n                        onChange={(e) => setFormData({...formData, rs_rating_3_m_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.rs_rating_3_m_max}\r\n                        onChange={(e) => setFormData({...formData, rs_rating_3_m_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    33\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>RS Rating - 6 Month</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.rs_rating_6_m_min}\r\n                        onChange={(e) => setFormData({...formData, rs_rating_6_m_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.rs_rating_6_m_max}\r\n                        onChange={(e) => setFormData({...formData, rs_rating_6_m_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.bannderDiv}>\r\n                Other\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    34\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Timeliness Rating</Box>\r\n                </Box>\r\n                <Box className={classes.checkboxDiv}>\r\n                    {\r\n                        charItems.map((char, index) => {\r\n                            return (\r\n                                <FormGroup row key={index}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                onChange={(e, id) => \r\n                                                    {\r\n                                                        console.log(e.target.value) ;\r\n                                                        if(e.target.checked) {\r\n                                                            setFormData({\r\n                                                                ...formData,\r\n                                                                timeliness_rating : formData.timeliness_rating+','+char\r\n                                                            })\r\n                                                        } else {\r\n                                                            setFormData({\r\n                                                                ...formData,\r\n                                                                timeliness_rating : formData.timeliness_rating.split(',').filter(value => \r\n                                                                    value !== char\r\n                                                                ).join(',')\r\n                                                            })\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                checked={formData.timeliness_rating.split(',').includes(char)} \r\n                                            />\r\n                                        }\r\n                                        label={<span>{char}</span>}\r\n                                    />\r\n                                </FormGroup>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    35\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Alpha</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.alpha_min}\r\n                        onChange={(e) => setFormData({...formData, alpha_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.alpha_max}\r\n                        onChange={(e) => setFormData({...formData, alpha_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    36\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Beta</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.beta_min}\r\n                        onChange={(e) => setFormData({...formData, beta_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.beta_max}\r\n                        onChange={(e) => setFormData({...formData, beta_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    37\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Average True Range {`(30 Days)`}</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.avg_true_range_30_d_min}\r\n                        onChange={(e) => setFormData({...formData, avg_true_range_30_d_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.avg_true_range_30_d_max}\r\n                        onChange={(e) => setFormData({...formData, avg_true_range_30_d_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PriceVolumeForm ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \"& svg\" : {\r\n            color : 'gray !important'\r\n        },\r\n\r\n        height : 700,\r\n        overflowY : 'auto',\r\n\r\n        // form control background style\r\n        \"& .MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            height : '30px !important',\r\n            maxWidth : '160px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 13\r\n        },\r\n\r\n        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button':\r\n        {\r\n            display: 'none',\r\n        },\r\n    },\r\n    listItemDiv : {\r\n        paddingTop : 10,\r\n        paddingRight : 30,\r\n        paddingBottom : 5,\r\n        \r\n        borderBottom: '1px solid gray'\r\n    },\r\n    liDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10\r\n    },\r\n    underLineDiv : {\r\n        cursor : 'pointer',\r\n        borderBottom : '1px dotted gray',\r\n        \"&:hover\" : {\r\n            color : '#c77e33'\r\n        }\r\n    },\r\n    rangeDiv : {\r\n        paddingTop : 10,\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    checkboxDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    selectDateDiv : {\r\n        paddingTop : 10,\r\n        paddingLeft : 20,\r\n        display : 'flex', gap : 10,\r\n        fontSize: 15\r\n    },\r\n    selectDiv : {\r\n        cursor : 'pointer',\r\n        \"&:hover\" : {\r\n            color : 'blue'\r\n        }\r\n    },\r\n    bannderDiv : {\r\n        background: 'linear-gradient(90deg, rgba(200,199,195,1) 0%, rgba(255,255,255,1) 100%)',\r\n        fontWeight :'bold'\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport {\r\n    Box, \r\n    FormControlLabel, \r\n    TextField,\r\n    RadioGroup,\r\n    Radio\r\n} from '@mui/material' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport { useStyles } from './StyledDiv/Margins.styles';\r\n\r\nconst MarginsForm = (props) => {\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        formData,\r\n        setFormData\r\n    } = props;\r\n\r\n    const charItems = [\r\n        \"A\",\r\n        \"B\",\r\n        \"C\",\r\n        \"D\",\r\n        \"E\"\r\n    ]\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.bannderDiv}>\r\n                Margins\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    1\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Davidend Yield</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.davidend_yield_min}\r\n                        onChange={(e) => setFormData({...formData, davidend_yield_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.davidend_yield_max}\r\n                        onChange={(e) => setFormData({...formData, davidend_yield_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    2\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>After Tax Margin Acceleration - Last 3 Qtrs</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value = { formData.after_tax_mrgn_acce_lst_3_q }>\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, after_tax_mrgn_acce_lst_3_q : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, after_tax_mrgn_acce_lst_3_q : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    3\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Pre Tax Margin - Last Reported Year</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.pre_tax_mrgn_lst_rpty_min}\r\n                        onChange={(e) => setFormData({...formData, pre_tax_mrgn_lst_rpty_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.pre_tax_mrgn_lst_rpty_max}\r\n                        onChange={(e) => setFormData({...formData, pre_tax_mrgn_lst_rpty_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    4\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>After Tax Margin - Last Reported Quarter</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_lst_rpt_q_min}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_lst_rpt_q_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    $<TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_lst_rpt_q_max}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_lst_rpt_q_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    5\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>After Tax Margin - Average Last 2 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_avg_lst_q_2_min}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_avg_lst_q_2_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_avg_lst_q_2_max}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_avg_lst_q_2_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    6\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>After Tax Margin - Average Last 3 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_avg_lst_q_3_min}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_avg_lst_q_3_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_avg_lst_q_3_max}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_avg_lst_q_3_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    7\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>After Tax Margin - Average Last 4 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_avg_lst_q_4_min}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_avg_lst_q_4_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_avg_lst_q_4_max}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_avg_lst_q_4_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    8\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>After Tax Margin - Average Last 5 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_avg_lst_q_5_min}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_avg_lst_q_5_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_avg_lst_q_5_max}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_avg_lst_q_5_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    9\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>After Tax Margin - Average Last 6 Qtrs</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_avg_lst_q_6_min}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_avg_lst_q_6_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.after_tax_mrgn_avg_lst_q_6_max}\r\n                        onChange={(e) => setFormData({...formData, after_tax_mrgn_avg_lst_q_6_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    10\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Operating System {`>=`} Industry Median</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={formData.opr_sys_ids_median_is_bigger} >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, opr_sys_ids_median_is_bigger : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, opr_sys_ids_median_is_bigger : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n                <Box sx={{textAlign : 'right'}}><u>Reset</u></Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    11\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Profit Margin {`>=`} Industry Median</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={formData.profile_mrgn_ids_median_is_bigger} >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, profile_mrgn_ids_median_is_bigger : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, profile_mrgn_ids_median_is_bigger : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n                <Box sx={{textAlign : 'right'}}><u>Reset</u></Box>\r\n            </Box>\r\n\r\n            <Box className={classes.bannderDiv}>P/E Ratio</Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    12\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>P/E - Current</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.p_e_current_min}\r\n                        onChange={(e) => setFormData({...formData, p_e_current_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.p_e_current_max}\r\n                        onChange={(e) => setFormData({...formData, p_e_current_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    13\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>P/E - Estimated</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.p_e_est_min}\r\n                        onChange={(e) => setFormData({...formData, p_e_est_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.p_e_est_max}\r\n                        onChange={(e) => setFormData({...formData, p_e_est_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    14\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>P/E - vs. S{`&`}P 500 P/E</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.p_e_vs_sp_500_min}\r\n                        onChange={(e) => setFormData({...formData, p_e_vs_sp_500_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.p_e_vs_sp_500_max}\r\n                        onChange={(e) => setFormData({...formData, p_e_vs_sp_500_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    15\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>P/E - Percentile Rank</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.p_e_percent_rnk_min}\r\n                        onChange={(e) => setFormData({...formData, p_e_percent_rnk_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.p_e_percent_rnk_max}\r\n                        onChange={(e) => setFormData({...formData, p_e_percent_rnk_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    16\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>P/E - Percentile Rank in Group</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.p_e_percent_rnk_in_grp_min}\r\n                        onChange={(e) => setFormData({...formData, p_e_percent_rnk_in_grp_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.p_e_percent_rnk_in_grp_max}\r\n                        onChange={(e) => setFormData({...formData, p_e_percent_rnk_in_grp_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.bannderDiv}>Margins</Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    17\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>P/E {`<`} Average 5 Year P/E</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value={formData.p_e_avg_5y_is_bigger} >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, p_e_avg_5y_is_bigger : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, p_e_avg_5y_is_bigger : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.bannderDiv}>P/E Ratio</Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    18\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>PEG</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.peg_min}\r\n                        onChange={(e) => setFormData({...formData, peg_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.peg_max}\r\n                        onChange={(e) => setFormData({...formData, peg_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    19\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>PEG {`(Dividend Adjusted)`}</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.peg_divid_adj_min}\r\n                        onChange={(e) => setFormData({...formData, peg_divid_adj_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.peg_divid_adj_max}\r\n                        onChange={(e) => setFormData({...formData, peg_divid_adj_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            \r\n            <Box className={classes.bannderDiv}>Ratios</Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    20\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>CF vs EPS % Difference - Last Reported Quarter</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.cf_v_eps_diff_lst_rpt_q_min}\r\n                        onChange={(e) => setFormData({...formData, cf_v_eps_diff_lst_rpt_q_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.cf_v_eps_diff_lst_rpt_q_max}\r\n                        onChange={(e) => setFormData({...formData, cf_v_eps_diff_lst_rpt_q_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    21\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>CF vs EPS % Difference - Last Reported Year</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.cf_v_eps_diff_lst_rpt_y_min}\r\n                        onChange={(e) => setFormData({...formData, cf_v_eps_diff_lst_rpt_y_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.cf_v_eps_diff_lst_rpt_y_max}\r\n                        onChange={(e) => setFormData({...formData, cf_v_eps_diff_lst_rpt_y_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n           \r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    23\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>ROE - 5 Year Average</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.roe_5y_avg_min}\r\n                        onChange={(e) => setFormData({...formData, roe_5y_avg_min : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.roe_5y_avg_max}\r\n                        onChange={(e) => setFormData({...formData, roe_5y_avg_max : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    24\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Debit % - Last Reported Year</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.roe_5y_avg_max}\r\n                        onChange={(e) => setFormData({...formData, roe_5y_avg_max : e.target.value})}\r\n                    />%\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.debit_lst_rpt_y_min}\r\n                        onChange={(e) => setFormData({...formData, debit_lst_rpt_y_min : e.target.value})}\r\n                    />%\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    25 \r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Current Ratio</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.current_ratio_min}\r\n                        onChange={(e) => setFormData({...formData, current_ratio_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.current_ratio_max}\r\n                        onChange={(e) => setFormData({...formData, current_ratio_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    26\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price to Sales</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_to_sales_min}\r\n                        onChange={(e) => setFormData({...formData, price_to_sales_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_to_sales_max}\r\n                        onChange={(e) => setFormData({...formData, price_to_sales_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    27\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price to Book Value</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_to_book_value_min}\r\n                        onChange={(e) => setFormData({...formData, price_to_book_value_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_to_book_value_max}\r\n                        onChange={(e) => setFormData({...formData, price_to_book_value_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    28\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Price to Cash Flow</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.price_to_cash_flow_min}\r\n                        onChange={(e) => setFormData({...formData, price_to_cash_flow_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.price_to_cash_flow_max}\r\n                        onChange={(e) => setFormData({...formData, price_to_cash_flow_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    29\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Enterprice Value to Free Cash Flow</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.epr_val_free_cash_flow_min}\r\n                        onChange={(e) => setFormData({...formData, epr_val_free_cash_flow_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.epr_val_free_cash_flow_max}\r\n                        onChange={(e) => setFormData({...formData, epr_val_free_cash_flow_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    30\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Long Term Debit to Working Capital</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Min'}\r\n                        size={'small'}\r\n                        value = {formData.long_term_debit_work_cap_min}\r\n                        onChange={(e) => setFormData({...formData, long_term_debit_work_cap_min : e.target.value})}\r\n                    />\r\n                    <Box >to</Box>\r\n                    <TextField\r\n                        type={'number'}\r\n                        placeholder={'Max'}\r\n                        size={'small'}\r\n                        value = {formData.long_term_debit_work_cap_max}\r\n                        onChange={(e) => setFormData({...formData, long_term_debit_work_cap_max : e.target.value})}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    31\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Total Liabilities/Total Assets {`<`} Industry Median</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup \r\n                        row defaultValue=\"no\" \r\n                        value = { formData.tot_lia_tot_assn }\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, tot_lia_tot_assn : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, tot_lia_tot_assn : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MarginsForm ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \"& svg\" : {\r\n            color : 'gray !important'\r\n        },\r\n\r\n        height : 700,\r\n        overflowY : 'auto',\r\n\r\n        // form control background style\r\n        \"& .MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            height : '30px !important',\r\n            maxWidth : '160px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 13\r\n        },\r\n\r\n        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button':\r\n        {\r\n            display: 'none',\r\n        },\r\n    },\r\n    listItemDiv : {\r\n        paddingTop : 10,\r\n        paddingRight : 30,\r\n        paddingBottom : 5,\r\n        \r\n        borderBottom: '1px solid gray'\r\n    },\r\n    liDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10\r\n    },\r\n    underLineDiv : {\r\n        cursor : 'pointer',\r\n        borderBottom : '1px dotted gray',\r\n        \"&:hover\" : {\r\n            color : '#c77e33'\r\n        }\r\n    },\r\n    rangeDiv : {\r\n        paddingTop : 10,\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    checkboxDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    selectDateDiv : {\r\n        paddingTop : 10,\r\n        paddingLeft : 20,\r\n        display : 'flex', gap : 10,\r\n        fontSize: 15\r\n    },\r\n    selectDiv : {\r\n        cursor : 'pointer',\r\n        \"&:hover\" : {\r\n            color : 'blue'\r\n        }\r\n    },\r\n    multiLetterDiv : {\r\n        paddingLeft : 20\r\n    },\r\n    bannderDiv : {\r\n        background: 'linear-gradient(90deg, rgba(200,199,195,1) 0%, rgba(255,255,255,1) 100%)',\r\n        fontWeight :'bold'\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport {\r\n    Box, \r\n    Checkbox, \r\n    Radio,\r\n    FormControlLabel, \r\n    TextField,\r\n    RadioGroup,\r\n} from '@mui/material' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport TwoSelectBox from './TwoSelectBoxs';\r\n\r\nimport { useStyles } from './StyledDiv/General.styles';\r\n\r\nconst GeneralForm = ( props ) => {\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        formData,\r\n        setFormData        \r\n    } = props;\r\n\r\n    const mockData1 = [\r\n        \"AMEX\",\r\n        \"ARCA\",\r\n        \"BATS\",\r\n        \"NASDAQ\",\r\n        \"NYSE\",\r\n    ]\r\n\r\n    const mockData2 = [\r\n        \"AB\",\r\n        \"AK\",\r\n        \"AL\",\r\n        \"AR\",\r\n        \"AQ\"\r\n    ]\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    1\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Exchange</Box>\r\n                </Box>\r\n                <Box className={classes.multiLetterDiv}>\r\n                    <b>CTRL</b> or <b>SHIFT</b> to multi-select\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row defaultValue=\"include\" >\r\n                        <FormControlLabel\r\n                            value=\"include\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Include'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"exclude\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Exclude'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n                <Box >\r\n                    <TwoSelectBox \r\n                        baseItems={mockData1}\r\n                        formData = {formData}\r\n                        parent_value = \"exchange\"\r\n                        setFormData = {setFormData}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    2\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>ADR</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup \r\n                        row\r\n                        value = { formData.adr }\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, adr : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, adr : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    3\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>ETF/Closed-End Fund</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row value = { formData.etf_closed_end_fund }>\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, etf_closed_end_fund : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, etf_closed_end_fund : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    4\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>ETF</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row  value = { formData.etf }\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, etf : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, etf : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    5\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Options</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup \r\n                        row \r\n                        value = { formData.options }\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, options : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, options : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    6\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>IPO Date</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <Box>\r\n                        <TextField\r\n                            type={'date'}\r\n                            size={'small'}\r\n                            // defaultValue={new Date().toISOString().substring(0, 10)}\r\n                            value = { formData.ipo_date_min }\r\n                            onChange={(e) => setFormData({...formData, ipo_date_min : e.target.value})}\r\n                        />\r\n                        <Box sx={{fontSize : '13px', textAlign : 'right'}}>Date</Box>\r\n                    </Box>\r\n                    <Box >to</Box>\r\n                    <Box>\r\n                        <TextField\r\n                            type={'date'}\r\n                            size={'small'}\r\n                            // defaultValue={new Date().toISOString().substring(0, 10)}\r\n                            value = { formData.ipo_date_max }\r\n                            onChange={(e) => setFormData({...formData, ipo_date_max : e.target.value})}\r\n                        />\r\n                        <Box sx={{fontSize : '13px', textAlign : 'right'}}>Date</Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    7\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Incorporation Date</Box>\r\n                </Box>\r\n                <Box className={classes.rangeDiv}>\r\n                    <Box>\r\n                        <TextField\r\n                            type={'date'}\r\n                            size={'small'}\r\n                            // defaultValue={new Date().toISOString().substring(0, 10)}\r\n                            value = { formData.incorporation_date_min }\r\n                            // onChange={(e) => setFormData({...formData, incorporation_date_min : e.target.value})}\r\n\r\n                        />\r\n                        <Box sx={{fontSize : '13px', textAlign : 'right'}}>Date</Box>\r\n                    </Box>\r\n                    <Box >to</Box>\r\n                    <Box>\r\n                        <TextField\r\n                            type={'date'}\r\n                            size={'small'}\r\n                            value = { formData.incorporation_date_max }\r\n                            onChange={(e) => setFormData({...formData, incorporation_date_max : e.target.value})}\r\n                        />\r\n                        <Box sx={{fontSize : '13px', textAlign : 'right'}}>Date</Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    9\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>Headquarters - City/Country</Box>\r\n                </Box>\r\n                <Box className={classes.multiLetterDiv}>\r\n                    <b>CTRL</b> or <b>SHIFT</b> to multi-select\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row defaultValue=\"include\" >\r\n                        <FormControlLabel\r\n                            value=\"include\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Include'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"exclude\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Exclude'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n                <Box >\r\n                    <TwoSelectBox \r\n                        baseItems={mockData2}\r\n                        formData = {formData}\r\n                        parent_value = \"headquarters_city\"\r\n                        setFormData = {setFormData}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    11\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>New CEO in Last 12 Months</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup \r\n                    row defaultValue=\"no\" \r\n                    value = { formData.new_ceo_in_lst_12_m }\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, new_ceo_in_lst_12_m : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, new_ceo_in_lst_12_m : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    12\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>IBD Article Last 2 Years</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup \r\n                    row \r\n                    defaultValue=\"no\" \r\n                    value = { formData.ibd_article_lst_2_y }\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, ibd_article_lst_2_y : \"yes\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                    onChange={() => setFormData({...formData, ibd_article_lst_2_y : \"no\"})}\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default GeneralForm ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \"& svg\" : {\r\n            color : 'gray !important'\r\n        },\r\n\r\n        height : 700,\r\n        overflowY : 'auto',\r\n\r\n        // form control background style\r\n        \"& .MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            height : '30px !important',\r\n            maxWidth : '160px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 13\r\n        },\r\n\r\n        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button':\r\n        {\r\n            display: 'none',\r\n        },\r\n    },\r\n    listItemDiv : {\r\n        paddingTop : 10,\r\n        paddingRight : 30,\r\n        paddingBottom : 5,\r\n        \r\n        borderBottom: '1px solid gray'\r\n    },\r\n    liDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10\r\n    },\r\n    underLineDiv : {\r\n        cursor : 'pointer',\r\n        borderBottom : '1px dotted gray',\r\n        \"&:hover\" : {\r\n            color : '#c77e33'\r\n        }\r\n    },\r\n    rangeDiv : {\r\n        paddingTop : 10,\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    checkboxDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    selectDateDiv : {\r\n        paddingTop : 10,\r\n        paddingLeft : 20,\r\n        display : 'flex', gap : 10,\r\n        fontSize: 15\r\n    },\r\n    selectDiv : {\r\n        cursor : 'pointer',\r\n        \"&:hover\" : {\r\n            color : 'blue'\r\n        }\r\n    },\r\n    multiLetterDiv : {\r\n        paddingLeft : 20\r\n    },\r\n    bannderDiv : {\r\n        background: 'linear-gradient(90deg, rgba(200,199,195,1) 0%, rgba(255,255,255,1) 100%)',\r\n        fontWeight :'bold'\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport {\r\n    Box, \r\n    Radio, \r\n    FormControlLabel, \r\n    FormGroup,\r\n    TextField,\r\n    RadioGroup\r\n} from '@mui/material' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport { useStyles } from './StyledDiv/IDB.styles';\r\n\r\nconst IDB = ( props ) => {\r\n    const classes = useStyles() ;\r\n    const {\r\n        formData,\r\n        setFormData        \r\n    } = props;\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    1\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>IBD 50</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup \r\n                        row \r\n                        defaultValue=\"no\" \r\n                        value = { formData.ibd_50 } \r\n                        onChange = { \r\n                            (e) => { \r\n                                setFormData({...formData, ibd_50 : e.target.value}) ;\r\n                            }\r\n                        }\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n                <Box sx={{textAlign : 'right'}}><u>Reset</u></Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    2\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>IBD New America</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row defaultValue=\"no\" \r\n                        value = { formData.ibd_new_america } \r\n                        onChange = { \r\n                            (e) => { \r\n                                setFormData({...formData, ibd_new_america : e.target.value}) ;\r\n                            }\r\n                        }\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n                <Box sx={{textAlign : 'right'}}><u>Reset</u></Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    3\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>IBD 85-85</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row defaultValue=\"no\" \r\n                        value = { formData.ibd_85 } \r\n                        onChange = { \r\n                            (e) => { \r\n                                setFormData({...formData, ibd_85 : e.target.value}) ;\r\n                            }\r\n                        }\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n                <Box sx={{textAlign : 'right'}}><u>Reset</u></Box>\r\n            </Box>\r\n            <Box className={classes.listItemDiv}>\r\n                <Box className={classes.liDiv}>\r\n                    4\r\n                    <StarBorderIcon />\r\n                    <Box className={classes.underLineDiv}>IBD Big Cap 20</Box>\r\n                </Box>\r\n                <Box sx={{display : 'flex', justifyContent : 'flex-end'}}>\r\n                    <RadioGroup row defaultValue=\"no\" \r\n                         value = { formData.ibd_big_cap_20 } \r\n                         onChange = { \r\n                             (e) => { \r\n                                 setFormData({...formData, ibd_big_cap_20 : e.target.value}) ;\r\n                             }\r\n                         }\r\n                    >\r\n                        <FormControlLabel\r\n                            value=\"yes\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'Yes'}</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"no\"\r\n                            control={\r\n                                <Radio\r\n                                />\r\n                            }\r\n                            label={<span>{'No'}</span>}\r\n                        />\r\n                    </RadioGroup>\r\n                </Box>\r\n                <Box sx={{textAlign : 'right'}}><u>Reset</u></Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default IDB ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \"& svg\" : {\r\n            color : 'gray !important'\r\n        },\r\n\r\n        height : 700,\r\n        overflowY : 'auto',\r\n\r\n        // form control background style\r\n        \"& .MuiFormControl-root\" : {\r\n            borderRadius : 5,\r\n            \"& svg\" :{\r\n                color : 'white'\r\n            }\r\n        },\r\n\r\n        // when hover border color style\r\n        '& .MuiOutlinedInput-root': {\r\n            height : '30px !important',\r\n            maxWidth : '160px !important',\r\n\r\n            padding : '0px !important',\r\n            '& fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '1px solid gray !important',\r\n            },\r\n        },\r\n\r\n        // textfield color style or disabled color style\r\n        \"& .MuiInputBase-input\" :{\r\n            fontSize : 13\r\n        },\r\n\r\n        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button':\r\n        {\r\n            display: 'none',\r\n        },\r\n    },\r\n    listItemDiv : {\r\n        paddingTop : 10,\r\n        paddingRight : 30,\r\n        paddingBottom : 5,\r\n        \r\n        borderBottom: '1px solid gray'\r\n    },\r\n    liDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10\r\n    },\r\n    underLineDiv : {\r\n        cursor : 'pointer',\r\n        borderBottom : '1px dotted gray',\r\n        \"&:hover\" : {\r\n            color : '#c77e33'\r\n        }\r\n    },\r\n    rangeDiv : {\r\n        paddingTop : 10,\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    checkboxDiv : {\r\n        display : 'flex', alignItems : 'center', gap : 10,\r\n        justifyContent : 'flex-end'\r\n    },\r\n    selectDateDiv : {\r\n        paddingTop : 10,\r\n        paddingLeft : 20,\r\n        display : 'flex', gap : 10,\r\n        fontSize: 15\r\n    },\r\n    selectDiv : {\r\n        cursor : 'pointer',\r\n        \"&:hover\" : {\r\n            color : 'blue'\r\n        }\r\n    },\r\n    multiLetterDiv : {\r\n        paddingLeft : 20\r\n    },\r\n    bannderDiv : {\r\n        background: 'linear-gradient(90deg, rgba(200,199,195,1) 0%, rgba(255,255,255,1) 100%)',\r\n        fontWeight :'bold'\r\n    },\r\n    sectionDiv: {\r\n        padding : 20,\r\n        fontSize : 20,\r\n        fontWeight : 'bold'\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { InsertScreenOptionData } from '../../../redux/actions/screenOption';\r\n\r\nimport Loading from '../../Common/Loading';\r\n\r\nimport {\r\n    Box,\r\n} from '@mui/material' ;\r\n\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nimport { useStyles } from './StyledDiv/Favorite.styles';\r\n\r\nconst Favorite = (props) => {\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        InsertScreenOptionData,\r\n        selectedScreenList,\r\n        formData,\r\n    } = props;\r\n    \r\n    const [ loading, setLoading ] = React.useState(false);\r\n\r\n    React.useEffect(async () => {\r\n\r\n        setLoading(true);\r\n\r\n            await InsertScreenOptionData(formData);\r\n            \r\n            console.log( formData, '[ tobacked')\r\n            console.log( 'to backedn');\r\n\r\n        setLoading(false);\r\n        \r\n    }, [formData])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <Box className={classes.sectionDiv}>\r\n                    Your Favorite Criterial are dislayed here in the 'Favorite Criteria' Category\r\n                </Box>\r\n                <Box className={classes.sectionDiv}>\r\n                    As you click the favorite icon <StarBorderIcon /> for a criteria, a copy of that criteria will appear.\r\n                </Box>\r\n                <Box className={classes.sectionDiv}>\r\n                    You might find it useful to keep track of criteria that you commonly use in multiple screens.\r\n                </Box>\r\n            </Box>\r\n            {\r\n                loading && <Loading\r\n                    status={\"Insert setdata to database\"}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n    InsertScreenOptionData,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Favorite) ;","import ActionTypes from \"./actionTypes\";\r\nimport axios from 'axios' ;\r\nimport * as config from '../../static/constants';\r\n\r\nexport const GetScreenOptionData = (screen_id) => async dispatch => {\r\n    try {\r\n        let res = await axios.get(`${config.PRIVATE_MARKETSMITH_API}screenoption/?screen_id=${screen_id}` , {}) ;\r\n        console.log('there', res.data, screen_id)\r\n        if(res.status === 200){\r\n            await dispatch({\r\n                type : ActionTypes.GetScreenOptionData,\r\n                payload : res.data[0]\r\n            }) ;\r\n        }\r\n        return true ;\r\n    } catch(err){\r\n        console.log(err) ;\r\n\r\n        return false ;\r\n    } \r\n}\r\n\r\nexport const InsertScreenOptionData = (formData) => async dispatch => {\r\n    try {\r\n        console.log(typeof(formData[\"eps_rating_min\"]), formData[\"eps_rating_min\"]);\r\n        console.log(typeof(formData[\"rs_rating_min\"]), formData[\"rs_rating_min\"]);\r\n        let res = await axios.post(`${config.PRIVATE_MARKETSMITH_API}screenoption/add/` , {formData}) ;\r\n\r\n        await dispatch({\r\n            type : ActionTypes.InsertScreenOptionData,\r\n            payload : formData,\r\n        })\r\n\r\n        return true ;\r\n    } catch(err){\r\n        console.log(err) ;\r\n\r\n        return false ;\r\n    } \r\n}","import * as React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { GetScreenOptionData } from \"../../../redux/actions/screenOption\";\r\n\r\nimport SmartForm from \"./SmartForm\";\r\nimport EarningForm from './EarningForm' ;\r\nimport SalesForm from './SalesForm' ;\r\nimport IndustryForm from \"./IndustryForm\";\r\nimport SharingForm from \"./SharingForm\";\r\nimport PriceVolumeForm from \"./PriceVolumeForm\";\r\nimport MarginsForm from \"./MarginsForm\";\r\nimport GeneralForm from \"./GeneralForm\";\r\nimport IDB from \"./IDB\";\r\nimport Loading from \"../../Common/Loading\";\r\n\r\nimport {\r\n    Box,\r\n} from '@mui/material';\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Favorite from \"./Favorite\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        padding : '0px 10px',\r\n\r\n        \"& .MuiSvgIcon-root\" : {\r\n            color : 'yellow',\r\n            width : '16px'\r\n        },\r\n        \"& .MuiListItem-root\" : {\r\n            justifyContent : 'space-between'\r\n        },\r\n        \"& input\" : {\r\n            width : '80px',\r\n            height : '30px'\r\n        }\r\n    },\r\n    title : {\r\n        fontSize : '13px',\r\n        color : 'gray',\r\n        background : 'rgb(240,240,230)'\r\n    },\r\n}))\r\n\r\nconst Criteria = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        selectedItem,\r\n        stateFormData,\r\n        setStateFormData,\r\n        selectedScreenList,\r\n        GetScreenOptionData\r\n    } = props ;\r\n\r\n    const [ loading, setLoading ] = React.useState(false);\r\n \r\n    React.useEffect(async () => {\r\n        if(selectedScreenList !== 0){\r\n            setLoading(true);\r\n            console.log('get the data')\r\n            await GetScreenOptionData(selectedScreenList);\r\n            setLoading(false);\r\n        }\r\n        \r\n    }, [selectedScreenList])\r\n    \r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <Box className={classes.title}>\r\n                    CRITERIA\r\n                </Box>\r\n                {\r\n                    selectedItem === 'smart' && <SmartForm formData={stateFormData} setFormData={setStateFormData}/>\r\n                }\r\n                {\r\n                    selectedItem === 'earning' && <EarningForm formData={stateFormData} setFormData={setStateFormData}/>\r\n                }\r\n                {\r\n                    selectedItem === 'sales' && <SalesForm formData={stateFormData} setFormData={setStateFormData}/>\r\n                }\r\n                {\r\n                    selectedItem === 'industry' && <IndustryForm formData={stateFormData} setFormData={setStateFormData}/>\r\n                }\r\n                {\r\n                    selectedItem === 'sharing' && <SharingForm  formData={stateFormData} setFormData={setStateFormData}/>\r\n                }\r\n                {\r\n                    selectedItem === 'pricevolume' && <PriceVolumeForm formData={stateFormData} setFormData={setStateFormData}/>\r\n                }\r\n                {\r\n                    selectedItem === 'margins' && <MarginsForm formData={stateFormData} setFormData={setStateFormData}/>\r\n                }\r\n                {\r\n                    selectedItem === 'general' && <GeneralForm formData={stateFormData} setFormData={setStateFormData}/>\r\n                }\r\n                {\r\n                    selectedItem === 'idb' && <IDB formData={stateFormData} setFormData={setStateFormData}/>\r\n                }\r\n                {\r\n                    selectedItem === 'favorite' && <Favorite  formData={stateFormData} selectedScreenList={selectedScreenList}/>\r\n                }\r\n            </Box>\r\n            {\r\n                loading && <Loading \r\n                    status={\"Get setdata from database\"}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n    GetScreenOptionData\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Criteria)  ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    root : {\r\n        border : '2px solid black',\r\n        height : '100%',\r\n        marginLeft : 10,\r\n        marginRight  : 10,\r\n\r\n        \"& .MuiTableContainer-root\" :{\r\n            height : 'calc(100% - 90px)',\r\n            borderBottom : '1px solid lightgray'\r\n        },\r\n        \"& .MuiTableHead-root\" : {\r\n            background : 'rgb(240,240,230)',\r\n            borderTop : '1px solid white',\r\n\r\n            \"& .MuiTableRow-root\" : {\r\n                position : \"relative\" ,\r\n                cursor : 'pointer',\r\n            },\r\n            \"& .MuiTableCell-root\" : {\r\n                padding : \"0px\" ,\r\n                paddingTop : 3,\r\n                paddingBottom : 3,\r\n                textAlign : 'center',\r\n                fontSize : \"12px\",\r\n                color : 'black',\r\n            }\r\n        },\r\n        \"& .MuiTableBody-root\" : {\r\n            borderTop : '1px solid black',\r\n\r\n            \"& .MuiTableRow-root\" : {\r\n                position : \"relative\" ,\r\n                cursor : 'pointer',\r\n            },\r\n            \"& .MuiTableCell-root\" : {\r\n                padding : \"0px\" ,\r\n                paddingTop : 3,\r\n                paddingBottom : 3,\r\n                textAlign : 'center',\r\n                fontSize : \"12px\",\r\n                color : 'black',\r\n            }\r\n        },\r\n    },\r\n    titleDiv : {\r\n        background : 'rgb(240,240,230)',\r\n        fontWeight : 'bold',\r\n        paddingLeft : 10,\r\n        fontSize : 12,\r\n        height : 20,\r\n\r\n        textTransform : 'uppercase'\r\n    },\r\n    buttonDiv : {\r\n        height : 70,\r\n        display : 'flex', alignItems : 'center', justifyContent : 'center'\r\n    },\r\n    buttonCss : {\r\n        textTransform : 'capitalize !important',\r\n        background: 'linear-gradient(0deg, rgba(88,87,85,1) 0%, rgba(78,75,75,1) 52%, rgba(112,112,111,0) 100%) !important',\r\n        border : '1px solid black !important',\r\n\r\n        \"&:hover\" : {\r\n            background : 'linear-gradient(0deg, rgba(249,166,0,1) 0%, rgba(238,197,28,1) 52%, rgba(237,142,16,0) 100%) !important'\r\n        }\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { GetMyScreenData,SetChangeDataResult } from '../../../redux/actions/result';\r\n\r\nimport { useResultViewInfo } from '../../../contexts/ResultViewContext';\r\nimport { SetTreeViewType } from '../../../redux/actions/screen';\r\nimport Loading from '../../Common/Loading';\r\n\r\nimport {\r\n    Box,\r\n    TableContainer,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Table,\r\n    Button\r\n} from '@mui/material' ;\r\n\r\nimport { useStyles } from './StyledDiv/Summary.styles';\r\n// import { element } from 'prop-types';\r\n\r\nconst Summary = (props) => {\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        InitialResultViewPoint,\r\n    } = useResultViewInfo() ;\r\n\r\n    const {\r\n        selectedItem,\r\n        stateFormData,\r\n        oldStateFormData,\r\n        selectedScreenList,\r\n        GetMyScreenData,\r\n        SetChangeDataResult,\r\n        SetTreeViewType,\r\n        stockCount\r\n    } = props ;\r\n\r\n    const [ changeData, setChangeData ] = React.useState({});\r\n    const [ changeField, setChangeField ] = React.useState({});\r\n    const [ loading, setLoading ] = React.useState(false);\r\n\r\n    let temp = [];\r\n\r\n    React.useEffect(async() => {\r\n        setChangeData({});\r\n    }, [selectedScreenList])\r\n    \r\n    React.useEffect(() => {\r\n\r\n        if(stateFormData !== oldStateFormData){            \r\n            \r\n            Object.keys(stateFormData).forEach( element => {\r\n                if(element !== 'screen_id'){\r\n\r\n\r\n                    let temp_new = JSON.stringify( stateFormData[element] ) ;\r\n                    let temp_old = JSON.stringify( oldStateFormData[element] ) ;\r\n                    \r\n                    if( ( temp_new != temp_old)) {                        \r\n                        console.log( temp_new, temp_old, element, 'tempn e')\r\n\r\n                        changeData[element] = stateFormData[element]\r\n                        \r\n                        setChangeData({...changeData})\r\n    \r\n                        Object.entries(stateFormData).map((row, index) => {\r\n                            if(row[0] === element)\r\n                                temp.push(row[0])\r\n                        })\r\n                        setChangeField(temp)\r\n                    }\r\n                }\r\n                \r\n            });\r\n            console.log(changeData);\r\n        }\r\n\r\n        else{\r\n            setChangeData('');\r\n        }\r\n\r\n    }, [stateFormData])\r\n\r\n    const getCount = (value) => {\r\n        let count = 0;\r\n        changeField && changeField.map((element, index) => {\r\n            if(element.slice(0,-4) === value)\r\n                count ++ ;\r\n        })\r\n        \r\n        return count;\r\n    }\r\n\r\n    const handleViewResult = async() => {\r\n        setLoading(true);\r\n\r\n        await InitialResultViewPoint(250) ;\r\n        await SetChangeDataResult(changeData);\r\n        await GetMyScreenData();\r\n        await SetTreeViewType(\"my screen\");\r\n\r\n        setLoading(false);\r\n    }\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                {                \r\n                    selectedItem === 'favorite' && <>\r\n                        <Box className={classes.titleDiv}>\r\n                            Screen Summary\r\n                        </Box>\r\n                        <TableContainer >\r\n                            <Table >\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>CRITERIA</TableCell>\r\n                                        <TableCell>VALUES</TableCell>\r\n                                        <TableCell>REMAINING</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody >\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={3}>\r\n                                            Screen from : MarketSmith Database\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    \r\n                                    {\r\n                                        \r\n                                        Object.keys(changeData) != 0 && Object.entries(changeData).map( (element, index) => {\r\n                                            \r\n                                            element[1] = element[1].toString()\r\n                                            \r\n                                            return (\r\n                                                <TableRow key={index}>\r\n                                                {\r\n                                                    <>\r\n                                                        {\r\n                                                            (element[0].includes('min') || element[0].includes('max')) &&\r\n                                                            \r\n                                                                !(getCount(element[0].slice(0,-4)) === 2 && element[0].includes(\"max\")) &&\r\n                                                                <>\r\n                                                                    <TableCell>{element[0].slice(0,-4)}</TableCell>\r\n                                                                    {\r\n                                                                        (getCount(element[0].slice(0,-4)) === 2) ?\r\n                                                                            <TableCell>\r\n                                                                                {\r\n                                                                                        <Box> { element[1]} {\"-\"} {stateFormData[element[0].slice(0,-4) + '_max']}</Box>\r\n                                                                                }\r\n                                                                            </TableCell>\r\n                                                                            :\r\n                                                                            <>\r\n                                                                                {\r\n                                                                                    element[0].includes(\"min\") ?\r\n                                                                                        <TableCell>\r\n                                                                                                {\r\n                                                                                                    <Box> {\">=\"} { element[1]} </Box>\r\n                                                                                                }\r\n                                                                                        </TableCell>\r\n                                                                                        :\r\n                                                                                        <TableCell>\r\n                                                                                                {\r\n                                                                                                    <Box> {\"<=\"} { element[1]} </Box>\r\n                                                                                                }\r\n                                                                                        </TableCell>\r\n                                                                                }\r\n                                                                            </>\r\n                                                                    }\r\n                                                                    <TableCell>{stockCount}</TableCell>\r\n                                                                </> \r\n                                                        }\r\n                                                        {\r\n                                                            (element[1] === \"yes\" || element[1] === \"no\") &&\r\n                                                            <>\r\n                                                                <TableCell>{element[0]}</TableCell>\r\n                                                                    <TableCell>\r\n                                                                        {\r\n                                                                                <Box> { element[1] } </Box>\r\n                                                                        }\r\n                                                                    </TableCell>\r\n                                                                <TableCell>{stockCount}</TableCell>\r\n                                                            </>\r\n                                                        }\r\n                                                        {\r\n                                                            (element[1].includes(',')) &&\r\n                                                            <>\r\n                                                                <TableCell>{element[0]}</TableCell>\r\n                                                                <TableCell>\r\n                                                                    {\r\n                                                                            <Box> { element[1].split(',') } </Box>\r\n                                                                    }\r\n                                                                </TableCell>\r\n                                                                <TableCell>{stockCount}</TableCell>\r\n                                                            </>\r\n                                                        }\r\n                                                        {\r\n                                                            typeof(element[1]) === 'object' &&\r\n                                                            <>\r\n                                                                <TableCell>{element[0]}</TableCell>\r\n                                                                <TableCell>\r\n                                                                    {\r\n                                                                        element[1].map((row, index) => {\r\n                                                                            return(\r\n                                                                                <Box component={'span'} key={index}>\r\n                                                                                    {\r\n                                                                                        index !== 0  &&  <Box component={'span'}>{\",\"}</Box>\r\n                                                                                    }\r\n                                                                                    <Box component={'span'}> { row } </Box>\r\n                                                                                </Box>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </TableCell>\r\n                                                                <TableCell>{stockCount}</TableCell>\r\n                                                            </>\r\n                                                        }\r\n                                                    </>\r\n                                                }\r\n                                                </TableRow>\r\n                                            )                               \r\n                                        })\r\n                                    \r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <Box className={classes.buttonDiv}>\r\n                            <Button variant='contained' className={classes.buttonCss}\r\n                                onClick={() => handleViewResult()}\r\n                            >\r\n                                View Screen Results\r\n                            </Button>\r\n                        </Box>\r\n                    </>\r\n                }\r\n            </Box>\r\n            {\r\n                loading &&\r\n                <Loading />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    stockCount : state.result.stockCount\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    SetChangeDataResult,\r\n    GetMyScreenData,\r\n    SetTreeViewType\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Summary) ;","import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    Box,\r\n    Grid,\r\n} from '@mui/material';\r\n\r\nimport Category from \"./Category\";\r\nimport Criteria from \"./Criteria\";\r\nimport Summary from \"./Summary\";\r\n\r\nimport { makeStyles, useTheme } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \r\n    }\r\n}))\r\n\r\nconst ScreenOption = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme() ;\r\n\r\n    const {\r\n        selectedScreenList,\r\n        formData,\r\n        inserFormtData\r\n    } = props;\r\n\r\n    const [ selectedItem, setSelectedItem ] = useState('smart') ;\r\n    const [ stateFormData, setStateFormData ] = React.useState({\r\n        screen_id : selectedScreenList,\r\n        eps_rating_min : '',\r\n        eps_rating_max : '',\r\n        rs_rating_min : '',\r\n        rs_rating_max : '',\r\n        smr_rating : '',\r\n        ad_rating : '',\r\n        comp_rating_min : '',\r\n        comp_rating_max : '',\r\n        ind_group_rs_rating : '',\r\n        erns_lst_rpt_date_min : new Date().toISOString().substring(0, 10),\r\n        erns_lst_rpt_date_max : new Date().toISOString().substring(0, 10),\r\n        erns_dued_min : new Date().toISOString().substring(0, 10),\r\n        erns_dued_max : new Date().toISOString().substring(0, 10),\r\n        eps_chg_lst_rpt_q_min : '',\r\n        eps_chg_lst_rpt_q_max : '',\r\n        eps_chg_q_1_min : '',\r\n        eps_chg_q_1_max : '',\r\n        erns_acce_lst_q_3 : \"no\",\r\n        erns_stability_min : '',\r\n        erns_stability_max : '',\r\n        eps_chg_q_2_min : '',\r\n        eps_chg_q_2_max : '',\r\n        eps_chg_q_3_min : '',\r\n        eps_chg_q_3_max : '',\r\n        eps_chg_lst_rpt_q_eps_chg_lst_q_3_is_bigger : \"no\",\r\n        avg_eps_chg_lst_q_2_min : '',\r\n        avg_eps_chg_lst_q_2_max : '',\r\n        avg_eps_chg_lst_q_3_min : '',\r\n        avg_eps_chg_lst_q_3_max : '',\r\n        avg_eps_chg_lst_q_4_min : '',\r\n        avg_eps_chg_lst_q_4_max : '',\r\n        avg_eps_chg_lst_q_5_min : '',\r\n        avg_eps_chg_lst_q_5_max : '',\r\n        avg_eps_chg_lst_q_6_min : '',\r\n        avg_eps_chg_lst_q_6_max : '',\r\n        eps_trailing_q_4_min : '',\r\n        eps_trailing_q_4_max : '',\r\n        eps_trailing_q_4_is_bigger : \"no\",\r\n        eps_trailing_q_4_lst_y_is_bigger : \"no\",\r\n        eps_chg_lst_rpty_vs_1y_ago_min : '',\r\n        eps_chg_lst_rpty_vs_1y_ago_max : '',\r\n        eps_chg_lst_rpty_vs_2y_ago_min : '',\r\n        eps_chg_lst_rpty_vs_2y_ago_max : '',\r\n        eps_chg_lst_y_min : '',\r\n        eps_chg_lst_y_max : '',\r\n        eps_grow_rate_lst_3y_min : '',\r\n        eps_grow_rate_lst_3y_max : '',\r\n        eps_grow_rate_lst_5y_min : '',\r\n        eps_grow_rate_lst_5y_max : '',\r\n        eps_grow_rate_lst_3y_5y_is_bigger : \"no\",\r\n        eps_grow_rate_lst_5y_percent_rnk_min : '',\r\n        eps_grow_rate_lst_5y_percent_rnk_max : '',\r\n        eps_grow_rate_projected_sus_growth_min : '',\r\n        eps_grow_rate_projected_sus_growth_max : '',\r\n        eps_lst_rpty_min : '',\r\n        eps_lst_rpty_max : '',\r\n        eps_1y_ago_min : '',\r\n        eps_1y_ago_max : '',\r\n        eps_2y_ago_min : '',\r\n        eps_2y_ago_max : '',\r\n        eps_3y_ago_min : '',\r\n        eps_3y_ago_max : '',\r\n        eps_4y_ago_min : '',\r\n        eps_4y_ago_max : '',\r\n        eps_5y_ago_min : '',\r\n        eps_5y_ago_max : '',\r\n        eps_6y_ago_min : '',\r\n        eps_6y_ago_max : '',\r\n        eps_lst_rpty_4y_is_bigger : \"no\",\r\n        eps_est_erns_surp_min : '',\r\n        eps_est_erns_surp_max : '',\r\n        eps_est_chg_next_q_min : '',\r\n        eps_est_chg_next_q_max : '',\r\n        eps_est_chg_cur_y_min : '',\r\n        eps_est_chg_cur_y_max : '',\r\n        eps_est_chg_1y_forward_vs_min : '',\r\n        eps_est_chg_1y_forward_vs_max : '',\r\n        sales_chg_lst_rpt_q_min : '',\r\n        sales_chg_lst_rpt_q_max : '',\r\n        avg_sales_chg_lst_2_q_min : '',\r\n        avg_sales_chg_lst_2_q_max : '',\r\n        avg_sales_chg_lst_3_q_min : '',\r\n        avg_sales_chg_lst_3_q_max : '',\r\n        avg_sales_chg_lst_4_q_min : '',\r\n        avg_sales_chg_lst_4_q_max : '',\r\n        avg_sales_chg_lst_5_q_min : '',\r\n        avg_sales_chg_lst_5_q_max : '',\r\n        avg_sales_chg_lst_6_q_min : '',\r\n        avg_sales_chg_lst_6_q_max : '',\r\n        sales_acc_lst_2_q : 'no',\r\n        sales_acc_lst_3_q : 'no',\r\n        sales_chg_lst_rpt_y_min : '',\r\n        sales_chg_lst_rpt_y_max : '',\r\n        sales_growth_rate_lst_3_y_min : '',\r\n        sales_growth_rate_lst_3_y_max : '',\r\n        sales_growth_rate_lst_5_y_min : '',\r\n        sales_growth_rate_lst_5_y_max : '',\r\n        tot_ann_sales_lst_rpt_y_min : '',\r\n        tot_ann_sales_lst_rpt_y_max : '',\r\n        company_ids_g_r_min : '',\r\n        company_ids_g_r_max : '',\r\n        industry_g_n : [],\r\n        broad_sectors : [],\r\n        shares_outstanding_min : '',\r\n        shares_outstanding_max : '',\r\n        shares_in_float_min : '',\r\n        shares_in_float_max : '',\r\n        market_capitialization_min : '',\r\n        market_capitialization_max : '',\r\n        enterprise_value_min : '',\r\n        enterprise_value_max : '',\r\n        sponsorship_rating : '',\r\n        funds_min : '',\r\n        funds_max : '',\r\n        funds_increase_min : '',\r\n        funds_increase_max : '',\r\n        number_of_fund_min : '',\r\n        number_of_fund_max : '',\r\n        management_min : '',\r\n        management_max : '',\r\n        institutional_ownership : 'no',\r\n        price_min : '',\r\n        price_max : '',\r\n        price_vs_52_week_high_min : '',\r\n        price_vs_52_week_high_max : '',\r\n        price_chg_cur_d_min : '',\r\n        price_chg_cur_d_max : '',\r\n        price_chg_min : '',\r\n        price_chg_max : '',\r\n        price_chg_cur_w_min : '',\r\n        price_chg_cur_w_max : '',\r\n        price_chg_lst_m_min : '',\r\n        price_chg_lst_m_max : '',\r\n        price_chg_lst_3_m_min : '',\r\n        price_chg_lst_3_m_max : '',\r\n        price_chg_lst_6_m_min : '',\r\n        price_chg_lst_6_m_max : '',\r\n        price_chg_lst_12_m_min : '',\r\n        price_chg_lst_12_m_max : '',\r\n        price_chg_y_to_d_min : '',\r\n        price_chg_y_to_d_max : '',\r\n        price_chg_sp_500_lst26w_min : '',\r\n        price_chg_sp_500_lst26w_max : '',\r\n        weekly_closing_range_min : '',\r\n        weekly_closing_range_max : '',\r\n        daily_closing_range_min : '',\r\n        daily_closing_range_max : '',\r\n        price_vs_10_d_min : '',\r\n        price_vs_10_d_max : '',\r\n        price_vs_21_d_min : '',\r\n        price_vs_21_d_max : '',\r\n        price_vs_50_d_min : '',\r\n        price_vs_50_d_max : '',\r\n        price_vs_150_d_min : '',\r\n        price_vs_150_d_max : '',\r\n        price_vs_200_d_min : '',\r\n        price_vs_200_d_max : '',\r\n        d_10_d_21_d_50 : 'no',\r\n        d_50_d_150_d_200 : 'no',\r\n        vol_50_d_avg_min : '',\r\n        vol_50_d_avg_max : '',\r\n        vol_Chg_50_d_avg_min : '',\r\n        vol_Chg_50_d_avg_max : '',\r\n        w_vol_chg_10_w_avg_min : '',\r\n        w_vol_chg_10_w_avg_max : '',\r\n        cur_d_vol_grt_pre_5_d : 'no',\r\n        cur_d_vol_grt_pre_10_d : 'no',\r\n        cur_d_vol_grt_pre_20_d : 'no',\r\n        vol_int_min : '',\r\n        vol_int_max : '',\r\n        up_down_vol_rat_min : '',\r\n        up_down_vol_rat_max : '',\r\n        vol_50_d_avg_dol_1000s_min : '',\r\n        vol_50_d_avg_dol_1000s_max : '',\r\n        rs_line_new_high : 'no',\r\n        rs_line_new_low : 'no',\r\n        rs_rating_3_m_min : '',\r\n        rs_rating_3_m_max : '',\r\n        rs_rating_6_m_min : '',\r\n        rs_rating_6_m_max : '',\r\n        timeliness_rating : '',\r\n        alpha_min : '',\r\n        alpha_max : '',\r\n        beta_min : '',\r\n        beta_max : '',\r\n        avg_true_range_30_d_min : '',\r\n        avg_true_range_30_d_max : '',\r\n        davidend_yield_min : '',\r\n        davidend_yield_max : '',\r\n        after_tax_mrgn_acce_lst_3_q : 'no',\r\n        pre_tax_mrgn_lst_rpty_min : '',\r\n        pre_tax_mrgn_lst_rpty_max : '',\r\n        after_tax_mrgn_lst_rpt_q_min : '',\r\n        after_tax_mrgn_lst_rpt_q_max : '',\r\n        after_tax_mrgn_avg_lst_q_2_min : '',\r\n        after_tax_mrgn_avg_lst_q_2_max : '',\r\n        after_tax_mrgn_avg_lst_q_3_min : '',\r\n        after_tax_mrgn_avg_lst_q_3_max : '',\r\n        after_tax_mrgn_avg_lst_q_4_min : '',\r\n        after_tax_mrgn_avg_lst_q_4_max : '',\r\n        after_tax_mrgn_avg_lst_q_5_min : '',\r\n        after_tax_mrgn_avg_lst_q_5_max : '',\r\n        after_tax_mrgn_avg_lst_q_6_min : '',\r\n        after_tax_mrgn_avg_lst_q_6_max : '',\r\n        opr_sys_ids_median_is_bigger : 'no',\r\n        profile_mrgn_ids_median_is_bigger : 'no',\r\n        p_e_current_min : '',\r\n        p_e_current_max : '',\r\n        p_e_est_min : '',\r\n        p_e_est_max : '',\r\n        p_e_vs_sp_500_min : '',\r\n        p_e_vs_sp_500_max : '',\r\n        p_e_percent_rnk_min : '',\r\n        p_e_percent_rnk_max : '',\r\n        p_e_percent_rnk_in_grp_min : '',\r\n        p_e_percent_rnk_in_grp_max : '',\r\n        p_e_avg_5y_is_bigger : 'no',\r\n        peg_min : '',\r\n        peg_max : '',\r\n        peg_divid_adj_min : '',\r\n        peg_divid_adj_max : '',\r\n        cf_v_eps_diff_lst_rpt_q_min : '',\r\n        cf_v_eps_diff_lst_rpt_q_max : '',\r\n        cf_v_eps_diff_lst_rpt_y_min : '',\r\n        cf_v_eps_diff_lst_rpt_y_max : '',\r\n        roe_5y_avg_min : '',\r\n        roe_5y_avg_max : '',\r\n        debit_lst_rpt_y_min : '',\r\n        debit_lst_rpt_y_max : '',\r\n        current_ratio_min : '',\r\n        current_ratio_max : '',\r\n        price_to_sales_min : '',\r\n        price_to_sales_max : '',\r\n        price_to_book_value_min : '',\r\n        price_to_book_value_max : '',\r\n        price_to_cash_flow_min : '',\r\n        price_to_cash_flow_max : '',\r\n        epr_val_free_cash_flow_min : '',\r\n        epr_val_free_cash_flow_max : '',\r\n        long_term_debit_work_cap_min : '',\r\n        long_term_debit_work_cap_max : '',\r\n        tot_lia_tot_assn : 'no',\r\n        exchange : [],\r\n        adr : 'no',\r\n        etf_closed_end_fund : 'no',\r\n        etf : 'no',\r\n        options : 'no',\r\n        ipo_date_min : new Date().toISOString().substring(0, 10),\r\n        ipo_date_max : new Date().toISOString().substring(0, 10),\r\n        incorporation_date_min : new Date().toISOString().substring(0, 10),\r\n        incorporation_date_max : new Date().toISOString().substring(0, 10),\r\n        headquarters_city : [],\r\n        new_ceo_in_lst_12_m : 'no',\r\n        ibd_article_lst_2_y : 'no',\r\n        ibd_50 : 'no',\r\n        ibd_new_america : 'no',\r\n        ibd_85 : 'no',\r\n        ibd_big_cap_20 : 'no',\r\n    })\r\n\r\n    const [oldStateFormData, setOldStateFormData] = React.useState({\r\n        screen_id : selectedScreenList,\r\n        eps_rating_min : '',\r\n        eps_rating_max : '',\r\n        rs_rating_min : '',\r\n        rs_rating_max : '',\r\n        smr_rating : '',\r\n        ad_rating : '',\r\n        comp_rating_min : '',\r\n        comp_rating_max : '',\r\n        ind_group_rs_rating : '',\r\n        erns_lst_rpt_date_min : new Date().toISOString().substring(0, 10),\r\n        erns_lst_rpt_date_max : new Date().toISOString().substring(0, 10),\r\n        erns_dued_min : new Date().toISOString().substring(0, 10),\r\n        erns_dued_max : new Date().toISOString().substring(0, 10),\r\n        eps_chg_lst_rpt_q_min : '',\r\n        eps_chg_lst_rpt_q_max : '',\r\n        eps_chg_q_1_min : '',\r\n        eps_chg_q_1_max : '',\r\n        erns_acce_lst_q_3 : \"no\",\r\n        erns_stability_min : '',\r\n        erns_stability_max : '',\r\n        eps_chg_q_2_min : '',\r\n        eps_chg_q_2_max : '',\r\n        eps_chg_q_3_min : '',\r\n        eps_chg_q_3_max : '',\r\n        eps_chg_lst_rpt_q_eps_chg_lst_q_3_is_bigger : \"no\",\r\n        avg_eps_chg_lst_q_2_min : '',\r\n        avg_eps_chg_lst_q_2_max : '',\r\n        avg_eps_chg_lst_q_3_min : '',\r\n        avg_eps_chg_lst_q_3_max : '',\r\n        avg_eps_chg_lst_q_4_min : '',\r\n        avg_eps_chg_lst_q_4_max : '',\r\n        avg_eps_chg_lst_q_5_min : '',\r\n        avg_eps_chg_lst_q_5_max : '',\r\n        avg_eps_chg_lst_q_6_min : '',\r\n        avg_eps_chg_lst_q_6_max : '',\r\n        eps_trailing_q_4_min : '',\r\n        eps_trailing_q_4_max : '',\r\n        eps_trailing_q_4_is_bigger : \"no\",\r\n        eps_trailing_q_4_lst_y_is_bigger : \"no\",\r\n        eps_chg_lst_rpty_vs_1y_ago_min : '',\r\n        eps_chg_lst_rpty_vs_1y_ago_max : '',\r\n        eps_chg_lst_rpty_vs_2y_ago_min : '',\r\n        eps_chg_lst_rpty_vs_2y_ago_max : '',\r\n        eps_chg_lst_y_min : '',\r\n        eps_chg_lst_y_max : '',\r\n        eps_grow_rate_lst_3y_min : '',\r\n        eps_grow_rate_lst_3y_max : '',\r\n        eps_grow_rate_lst_5y_min : '',\r\n        eps_grow_rate_lst_5y_max : '',\r\n        eps_grow_rate_lst_3y_5y_is_bigger : \"no\",\r\n        eps_grow_rate_lst_5y_percent_rnk_min : '',\r\n        eps_grow_rate_lst_5y_percent_rnk_max : '',\r\n        eps_grow_rate_projected_sus_growth_min : '',\r\n        eps_grow_rate_projected_sus_growth_max : '',\r\n        eps_lst_rpty_min : '',\r\n        eps_lst_rpty_max : '',\r\n        eps_1y_ago_min : '',\r\n        eps_1y_ago_max : '',\r\n        eps_2y_ago_min : '',\r\n        eps_2y_ago_max : '',\r\n        eps_3y_ago_min : '',\r\n        eps_3y_ago_max : '',\r\n        eps_4y_ago_min : '',\r\n        eps_4y_ago_max : '',\r\n        eps_5y_ago_min : '',\r\n        eps_5y_ago_max : '',\r\n        eps_6y_ago_min : '',\r\n        eps_6y_ago_max : '',\r\n        eps_lst_rpty_4y_is_bigger : \"no\",\r\n        eps_est_erns_surp_min : '',\r\n        eps_est_erns_surp_max : '',\r\n        eps_est_chg_next_q_min : '',\r\n        eps_est_chg_next_q_max : '',\r\n        eps_est_chg_cur_y_min : '',\r\n        eps_est_chg_cur_y_max : '',\r\n        eps_est_chg_1y_forward_vs_min : '',\r\n        eps_est_chg_1y_forward_vs_max : '',\r\n        sales_chg_lst_rpt_q_min : '',\r\n        sales_chg_lst_rpt_q_max : '',\r\n        avg_sales_chg_lst_2_q_min : '',\r\n        avg_sales_chg_lst_2_q_max : '',\r\n        avg_sales_chg_lst_3_q_min : '',\r\n        avg_sales_chg_lst_3_q_max : '',\r\n        avg_sales_chg_lst_4_q_min : '',\r\n        avg_sales_chg_lst_4_q_max : '',\r\n        avg_sales_chg_lst_5_q_min : '',\r\n        avg_sales_chg_lst_5_q_max : '',\r\n        avg_sales_chg_lst_6_q_min : '',\r\n        avg_sales_chg_lst_6_q_max : '',\r\n        sales_acc_lst_2_q : 'no',\r\n        sales_acc_lst_3_q : 'no',\r\n        sales_chg_lst_rpt_y_min : '',\r\n        sales_chg_lst_rpt_y_max : '',\r\n        sales_growth_rate_lst_3_y_min : '',\r\n        sales_growth_rate_lst_3_y_max : '',\r\n        sales_growth_rate_lst_5_y_min : '',\r\n        sales_growth_rate_lst_5_y_max : '',\r\n        tot_ann_sales_lst_rpt_y_min : '',\r\n        tot_ann_sales_lst_rpt_y_max : '',\r\n        company_ids_g_r_min : '',\r\n        company_ids_g_r_max : '',\r\n        industry_g_n : [],\r\n        broad_sectors : [],\r\n        shares_outstanding_min : '',\r\n        shares_outstanding_max : '',\r\n        shares_in_float_min : '',\r\n        shares_in_float_max : '',\r\n        market_capitialization_min : '',\r\n        market_capitialization_max : '',\r\n        enterprise_value_min : '',\r\n        enterprise_value_max : '',\r\n        sponsorship_rating : '',\r\n        funds_min : '',\r\n        funds_max : '',\r\n        funds_increase_min : '',\r\n        funds_increase_max : '',\r\n        number_of_fund_min : '',\r\n        number_of_fund_max : '',\r\n        management_min : '',\r\n        management_max : '',\r\n        institutional_ownership : 'no',\r\n        price_min : '',\r\n        price_max : '',\r\n        price_vs_52_week_high_min : '',\r\n        price_vs_52_week_high_max : '',\r\n        price_chg_cur_d_min : '',\r\n        price_chg_cur_d_max : '',\r\n        price_chg_min : '',\r\n        price_chg_max : '',\r\n        price_chg_cur_w_min : '',\r\n        price_chg_cur_w_max : '',\r\n        price_chg_lst_m_min : '',\r\n        price_chg_lst_m_max : '',\r\n        price_chg_lst_3_m_min : '',\r\n        price_chg_lst_3_m_max : '',\r\n        price_chg_lst_6_m_min : '',\r\n        price_chg_lst_6_m_max : '',\r\n        price_chg_lst_12_m_min : '',\r\n        price_chg_lst_12_m_max : '',\r\n        price_chg_y_to_d_min : '',\r\n        price_chg_y_to_d_max : '',\r\n        price_chg_sp_500_lst26w_min : '',\r\n        price_chg_sp_500_lst26w_max : '',\r\n        weekly_closing_range_min : '',\r\n        weekly_closing_range_max : '',\r\n        daily_closing_range_min : '',\r\n        daily_closing_range_max : '',\r\n        price_vs_10_d_min : '',\r\n        price_vs_10_d_max : '',\r\n        price_vs_21_d_min : '',\r\n        price_vs_21_d_max : '',\r\n        price_vs_50_d_min : '',\r\n        price_vs_50_d_max : '',\r\n        price_vs_150_d_min : '',\r\n        price_vs_150_d_max : '',\r\n        price_vs_200_d_min : '',\r\n        price_vs_200_d_max : '',\r\n        d_10_d_21_d_50 : 'no',\r\n        d_50_d_150_d_200 : 'no',\r\n        vol_50_d_avg_min : '',\r\n        vol_50_d_avg_max : '',\r\n        vol_Chg_50_d_avg_min : '',\r\n        vol_Chg_50_d_avg_max : '',\r\n        w_vol_chg_10_w_avg_min : '',\r\n        w_vol_chg_10_w_avg_max : '',\r\n        cur_d_vol_grt_pre_5_d : 'no',\r\n        cur_d_vol_grt_pre_10_d : 'no',\r\n        cur_d_vol_grt_pre_20_d : 'no',\r\n        vol_int_min : '',\r\n        vol_int_max : '',\r\n        up_down_vol_rat_min : '',\r\n        up_down_vol_rat_max : '',\r\n        vol_50_d_avg_dol_1000s_min : '',\r\n        vol_50_d_avg_dol_1000s_max : '',\r\n        rs_line_new_high : 'no',\r\n        rs_line_new_low : 'no',\r\n        rs_rating_3_m_min : '',\r\n        rs_rating_3_m_max : '',\r\n        rs_rating_6_m_min : '',\r\n        rs_rating_6_m_max : '',\r\n        timeliness_rating : '',\r\n        alpha_min : '',\r\n        alpha_max : '',\r\n        beta_min : '',\r\n        beta_max : '',\r\n        avg_true_range_30_d_min : '',\r\n        avg_true_range_30_d_max : '',\r\n        davidend_yield_min : '',\r\n        davidend_yield_max : '',\r\n        after_tax_mrgn_acce_lst_3_q : 'no',\r\n        pre_tax_mrgn_lst_rpty_min : '',\r\n        pre_tax_mrgn_lst_rpty_max : '',\r\n        after_tax_mrgn_lst_rpt_q_min : '',\r\n        after_tax_mrgn_lst_rpt_q_max : '',\r\n        after_tax_mrgn_avg_lst_q_2_min : '',\r\n        after_tax_mrgn_avg_lst_q_2_max : '',\r\n        after_tax_mrgn_avg_lst_q_3_min : '',\r\n        after_tax_mrgn_avg_lst_q_3_max : '',\r\n        after_tax_mrgn_avg_lst_q_4_min : '',\r\n        after_tax_mrgn_avg_lst_q_4_max : '',\r\n        after_tax_mrgn_avg_lst_q_5_min : '',\r\n        after_tax_mrgn_avg_lst_q_5_max : '',\r\n        after_tax_mrgn_avg_lst_q_6_min : '',\r\n        after_tax_mrgn_avg_lst_q_6_max : '',\r\n        opr_sys_ids_median_is_bigger : 'no',\r\n        profile_mrgn_ids_median_is_bigger : 'no',\r\n        p_e_current_min : '',\r\n        p_e_current_max : '',\r\n        p_e_est_min : '',\r\n        p_e_est_max : '',\r\n        p_e_vs_sp_500_min : '',\r\n        p_e_vs_sp_500_max : '',\r\n        p_e_percent_rnk_min : '',\r\n        p_e_percent_rnk_max : '',\r\n        p_e_percent_rnk_in_grp_min : '',\r\n        p_e_percent_rnk_in_grp_max : '',\r\n        p_e_avg_5y_is_bigger : 'no',\r\n        peg_min : '',\r\n        peg_max : '',\r\n        peg_divid_adj_min : '',\r\n        peg_divid_adj_max : '',\r\n        cf_v_eps_diff_lst_rpt_q_min : '',\r\n        cf_v_eps_diff_lst_rpt_q_max : '',\r\n        cf_v_eps_diff_lst_rpt_y_min : '',\r\n        cf_v_eps_diff_lst_rpt_y_max : '',\r\n        roe_5y_avg_min : '',\r\n        roe_5y_avg_max : '',\r\n        debit_lst_rpt_y_min : '',\r\n        debit_lst_rpt_y_max : '',\r\n        current_ratio_min : '',\r\n        current_ratio_max : '',\r\n        price_to_sales_min : '',\r\n        price_to_sales_max : '',\r\n        price_to_book_value_min : '',\r\n        price_to_book_value_max : '',\r\n        price_to_cash_flow_min : '',\r\n        price_to_cash_flow_max : '',\r\n        epr_val_free_cash_flow_min : '',\r\n        epr_val_free_cash_flow_max : '',\r\n        long_term_debit_work_cap_min : '',\r\n        long_term_debit_work_cap_max : '',\r\n        tot_lia_tot_assn : 'no',\r\n        exchange : [],\r\n        adr : 'no',\r\n        etf_closed_end_fund : 'no',\r\n        etf : 'no',\r\n        options : 'no',\r\n        ipo_date_min : new Date().toISOString().substring(0, 10),\r\n        ipo_date_max : new Date().toISOString().substring(0, 10),\r\n        incorporation_date_min : new Date().toISOString().substring(0, 10),\r\n        incorporation_date_max : new Date().toISOString().substring(0, 10),\r\n        headquarters_city : [],\r\n        new_ceo_in_lst_12_m : 'no',\r\n        ibd_article_lst_2_y : 'no',\r\n        ibd_50 : 'no',\r\n        ibd_new_america : 'no',\r\n        ibd_85 : 'no',\r\n        ibd_big_cap_20 : 'no',\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        console.log('form data', formData);\r\n        if( formData ){\r\n            console.log('not null formdata ') ;\r\n\r\n            if(formData.length != 0 ){\r\n                \r\n                let industry_g_n = formData.industry_g_n\r\n                let result = industry_g_n.replace( /'/g, '\"')\r\n                let _industry_g_n = JSON.parse( result )\r\n\r\n                let exchange = formData.exchange\r\n                result = exchange.replace( /'/g, '\"')\r\n                let _exchange = JSON.parse( result )\r\n\r\n                let headquarters_city = formData.headquarters_city\r\n                result = headquarters_city.replace( /'/g, '\"')\r\n                let _headquarters_city = JSON.parse( result )\r\n                \r\n                let broad_sectors = formData.broad_sectors\r\n                result = broad_sectors.replace( /'/g, '\"')\r\n                let _broad_sectors = JSON.parse( result )\r\n\r\n                setStateFormData( { \r\n                    ...formData, \r\n                    industry_g_n: _industry_g_n,\r\n                    exchange: _exchange,\r\n                    headquarters_city: _headquarters_city,\r\n                    broad_sectors: _broad_sectors,\r\n                    \r\n                } )\r\n\r\n                setOldStateFormData( { \r\n                    ...oldStateFormData,\r\n                    erns_lst_rpt_date_min : formData.erns_lst_rpt_date_min,\r\n                    erns_lst_rpt_date_max : formData.erns_lst_rpt_date_max,\r\n                    erns_dued_min : formData.erns_dued_min,\r\n                    erns_dued_max : formData.erns_dued_max,\r\n                    ipo_date_min : formData.ipo_date_min,\r\n                    ipo_date_max : formData.ipo_date_max,\r\n                    incorporation_date_min : formData.incorporation_date_min,\r\n                    incorporation_date_max : formData.incorporation_date_max\r\n                } )\r\n                \r\n            }\r\n        }         \r\n    }, [formData])\r\n    \r\n    React.useEffect(() => {\r\n        if(selectedScreenList){\r\n            setStateFormData({\r\n                ...stateFormData,\r\n                screen_id : selectedScreenList,\r\n            })\r\n            setOldStateFormData({\r\n                ...oldStateFormData,\r\n                screen_id : selectedScreenList\r\n            })\r\n            if( formData ) {\r\n                setStateFormData({\r\n                    screen_id : selectedScreenList,\r\n                    eps_rating_min : '',\r\n                    eps_rating_max : '',\r\n                    rs_rating_min : '',\r\n                    rs_rating_max : '',\r\n                    smr_rating : '',\r\n                    ad_rating : '',\r\n                    comp_rating_min : '',\r\n                    comp_rating_max : '',\r\n                    ind_group_rs_rating : '',\r\n                    erns_lst_rpt_date_min : new Date().toISOString().substring(0, 10),\r\n                    erns_lst_rpt_date_max : new Date().toISOString().substring(0, 10),\r\n                    erns_dued_min : new Date().toISOString().substring(0, 10),\r\n                    erns_dued_max : new Date().toISOString().substring(0, 10),\r\n                    eps_chg_lst_rpt_q_min : '',\r\n                    eps_chg_lst_rpt_q_max : '',\r\n                    eps_chg_q_1_min : '',\r\n                    eps_chg_q_1_max : '',\r\n                    erns_acce_lst_q_3 : \"no\",\r\n                    erns_stability_min : '',\r\n                    erns_stability_max : '',\r\n                    eps_chg_q_2_min : '',\r\n                    eps_chg_q_2_max : '',\r\n                    eps_chg_q_3_min : '',\r\n                    eps_chg_q_3_max : '',\r\n                    eps_chg_lst_rpt_q_eps_chg_lst_q_3_is_bigger : \"no\",\r\n                    avg_eps_chg_lst_q_2_min : '',\r\n                    avg_eps_chg_lst_q_2_max : '',\r\n                    avg_eps_chg_lst_q_3_min : '',\r\n                    avg_eps_chg_lst_q_3_max : '',\r\n                    avg_eps_chg_lst_q_4_min : '',\r\n                    avg_eps_chg_lst_q_4_max : '',\r\n                    avg_eps_chg_lst_q_5_min : '',\r\n                    avg_eps_chg_lst_q_5_max : '',\r\n                    avg_eps_chg_lst_q_6_min : '',\r\n                    avg_eps_chg_lst_q_6_max : '',\r\n                    eps_trailing_q_4_min : '',\r\n                    eps_trailing_q_4_max : '',\r\n                    eps_trailing_q_4_is_bigger : \"no\",\r\n                    eps_trailing_q_4_lst_y_is_bigger : \"no\",\r\n                    eps_chg_lst_rpty_vs_1y_ago_min : '',\r\n                    eps_chg_lst_rpty_vs_1y_ago_max : '',\r\n                    eps_chg_lst_rpty_vs_2y_ago_min : '',\r\n                    eps_chg_lst_rpty_vs_2y_ago_max : '',\r\n                    eps_chg_lst_y_min : '',\r\n                    eps_chg_lst_y_max : '',\r\n                    eps_grow_rate_lst_3y_min : '',\r\n                    eps_grow_rate_lst_3y_max : '',\r\n                    eps_grow_rate_lst_5y_min : '',\r\n                    eps_grow_rate_lst_5y_max : '',\r\n                    eps_grow_rate_lst_3y_5y_is_bigger : \"no\",\r\n                    eps_grow_rate_lst_5y_percent_rnk_min : '',\r\n                    eps_grow_rate_lst_5y_percent_rnk_max : '',\r\n                    eps_grow_rate_projected_sus_growth_min : '',\r\n                    eps_grow_rate_projected_sus_growth_max : '',\r\n                    eps_lst_rpty_min : '',\r\n                    eps_lst_rpty_max : '',\r\n                    eps_1y_ago_min : '',\r\n                    eps_1y_ago_max : '',\r\n                    eps_2y_ago_min : '',\r\n                    eps_2y_ago_max : '',\r\n                    eps_3y_ago_min : '',\r\n                    eps_3y_ago_max : '',\r\n                    eps_4y_ago_min : '',\r\n                    eps_4y_ago_max : '',\r\n                    eps_5y_ago_min : '',\r\n                    eps_5y_ago_max : '',\r\n                    eps_6y_ago_min : '',\r\n                    eps_6y_ago_max : '',\r\n                    eps_lst_rpty_4y_is_bigger : \"no\",\r\n                    eps_est_erns_surp_min : '',\r\n                    eps_est_erns_surp_max : '',\r\n                    eps_est_chg_next_q_min : '',\r\n                    eps_est_chg_next_q_max : '',\r\n                    eps_est_chg_cur_y_min : '',\r\n                    eps_est_chg_cur_y_max : '',\r\n                    eps_est_chg_1y_forward_vs_min : '',\r\n                    eps_est_chg_1y_forward_vs_max : '',\r\n                    sales_chg_lst_rpt_q_min : '',\r\n                    sales_chg_lst_rpt_q_max : '',\r\n                    avg_sales_chg_lst_2_q_min : '',\r\n                    avg_sales_chg_lst_2_q_max : '',\r\n                    avg_sales_chg_lst_3_q_min : '',\r\n                    avg_sales_chg_lst_3_q_max : '',\r\n                    avg_sales_chg_lst_4_q_min : '',\r\n                    avg_sales_chg_lst_4_q_max : '',\r\n                    avg_sales_chg_lst_5_q_min : '',\r\n                    avg_sales_chg_lst_5_q_max : '',\r\n                    avg_sales_chg_lst_6_q_min : '',\r\n                    avg_sales_chg_lst_6_q_max : '',\r\n                    sales_acc_lst_2_q : 'no',\r\n                    sales_acc_lst_3_q : 'no',\r\n                    sales_chg_lst_rpt_y_min : '',\r\n                    sales_chg_lst_rpt_y_max : '',\r\n                    sales_growth_rate_lst_3_y_min : '',\r\n                    sales_growth_rate_lst_3_y_max : '',\r\n                    sales_growth_rate_lst_5_y_min : '',\r\n                    sales_growth_rate_lst_5_y_max : '',\r\n                    tot_ann_sales_lst_rpt_y_min : '',\r\n                    tot_ann_sales_lst_rpt_y_max : '',\r\n                    company_ids_g_r_min : '',\r\n                    company_ids_g_r_max : '',\r\n                    industry_g_n : [],\r\n                    broad_sectors : [],\r\n                    shares_outstanding_min : '',\r\n                    shares_outstanding_max : '',\r\n                    shares_in_float_min : '',\r\n                    shares_in_float_max : '',\r\n                    market_capitialization_min : '',\r\n                    market_capitialization_max : '',\r\n                    enterprise_value_min : '',\r\n                    enterprise_value_max : '',\r\n                    sponsorship_rating : '',\r\n                    funds_min : '',\r\n                    funds_max : '',\r\n                    funds_increase_min : '',\r\n                    funds_increase_max : '',\r\n                    number_of_fund_min : '',\r\n                    number_of_fund_max : '',\r\n                    management_min : '',\r\n                    management_max : '',\r\n                    institutional_ownership : 'no',\r\n                    price_min : '',\r\n                    price_max : '',\r\n                    price_vs_52_week_high_min : '',\r\n                    price_vs_52_week_high_max : '',\r\n                    price_chg_cur_d_min : '',\r\n                    price_chg_cur_d_max : '',\r\n                    price_chg_min : '',\r\n                    price_chg_max : '',\r\n                    price_chg_cur_w_min : '',\r\n                    price_chg_cur_w_max : '',\r\n                    price_chg_lst_m_min : '',\r\n                    price_chg_lst_m_max : '',\r\n                    price_chg_lst_3_m_min : '',\r\n                    price_chg_lst_3_m_max : '',\r\n                    price_chg_lst_6_m_min : '',\r\n                    price_chg_lst_6_m_max : '',\r\n                    price_chg_lst_12_m_min : '',\r\n                    price_chg_lst_12_m_max : '',\r\n                    price_chg_y_to_d_min : '',\r\n                    price_chg_y_to_d_max : '',\r\n                    price_chg_sp_500_lst26w_min : '',\r\n                    price_chg_sp_500_lst26w_max : '',\r\n                    weekly_closing_range_min : '',\r\n                    weekly_closing_range_max : '',\r\n                    daily_closing_range_min : '',\r\n                    daily_closing_range_max : '',\r\n                    price_vs_10_d_min : '',\r\n                    price_vs_10_d_max : '',\r\n                    price_vs_21_d_min : '',\r\n                    price_vs_21_d_max : '',\r\n                    price_vs_50_d_min : '',\r\n                    price_vs_50_d_max : '',\r\n                    price_vs_150_d_min : '',\r\n                    price_vs_150_d_max : '',\r\n                    price_vs_200_d_min : '',\r\n                    price_vs_200_d_max : '',\r\n                    d_10_d_21_d_50 : 'no',\r\n                    d_50_d_150_d_200 : 'no',\r\n                    vol_50_d_avg_min : '',\r\n                    vol_50_d_avg_max : '',\r\n                    vol_Chg_50_d_avg_min : '',\r\n                    vol_Chg_50_d_avg_max : '',\r\n                    w_vol_chg_10_w_avg_min : '',\r\n                    w_vol_chg_10_w_avg_max : '',\r\n                    cur_d_vol_grt_pre_5_d : 'no',\r\n                    cur_d_vol_grt_pre_10_d : 'no',\r\n                    cur_d_vol_grt_pre_20_d : 'no',\r\n                    vol_int_min : '',\r\n                    vol_int_max : '',\r\n                    up_down_vol_rat_min : '',\r\n                    up_down_vol_rat_max : '',\r\n                    vol_50_d_avg_dol_1000s_min : '',\r\n                    vol_50_d_avg_dol_1000s_max : '',\r\n                    rs_line_new_high : 'no',\r\n                    rs_line_new_low : 'no',\r\n                    rs_rating_3_m_min : '',\r\n                    rs_rating_3_m_max : '',\r\n                    rs_rating_6_m_min : '',\r\n                    rs_rating_6_m_max : '',\r\n                    timeliness_rating : '',\r\n                    alpha_min : '',\r\n                    alpha_max : '',\r\n                    beta_min : '',\r\n                    beta_max : '',\r\n                    avg_true_range_30_d_min : '',\r\n                    avg_true_range_30_d_max : '',\r\n                    davidend_yield_min : '',\r\n                    davidend_yield_max : '',\r\n                    after_tax_mrgn_acce_lst_3_q : 'no',\r\n                    pre_tax_mrgn_lst_rpty_min : '',\r\n                    pre_tax_mrgn_lst_rpty_max : '',\r\n                    after_tax_mrgn_lst_rpt_q_min : '',\r\n                    after_tax_mrgn_lst_rpt_q_max : '',\r\n                    after_tax_mrgn_avg_lst_q_2_min : '',\r\n                    after_tax_mrgn_avg_lst_q_2_max : '',\r\n                    after_tax_mrgn_avg_lst_q_3_min : '',\r\n                    after_tax_mrgn_avg_lst_q_3_max : '',\r\n                    after_tax_mrgn_avg_lst_q_4_min : '',\r\n                    after_tax_mrgn_avg_lst_q_4_max : '',\r\n                    after_tax_mrgn_avg_lst_q_5_min : '',\r\n                    after_tax_mrgn_avg_lst_q_5_max : '',\r\n                    after_tax_mrgn_avg_lst_q_6_min : '',\r\n                    after_tax_mrgn_avg_lst_q_6_max : '',\r\n                    opr_sys_ids_median_is_bigger : 'no',\r\n                    profile_mrgn_ids_median_is_bigger : 'no',\r\n                    p_e_current_min : '',\r\n                    p_e_current_max : '',\r\n                    p_e_est_min : '',\r\n                    p_e_est_max : '',\r\n                    p_e_vs_sp_500_min : '',\r\n                    p_e_vs_sp_500_max : '',\r\n                    p_e_percent_rnk_min : '',\r\n                    p_e_percent_rnk_max : '',\r\n                    p_e_percent_rnk_in_grp_min : '',\r\n                    p_e_percent_rnk_in_grp_max : '',\r\n                    p_e_avg_5y_is_bigger : 'no',\r\n                    peg_min : '',\r\n                    peg_max : '',\r\n                    peg_divid_adj_min : '',\r\n                    peg_divid_adj_max : '',\r\n                    cf_v_eps_diff_lst_rpt_q_min : '',\r\n                    cf_v_eps_diff_lst_rpt_q_max : '',\r\n                    cf_v_eps_diff_lst_rpt_y_min : '',\r\n                    cf_v_eps_diff_lst_rpt_y_max : '',\r\n                    roe_5y_avg_min : '',\r\n                    roe_5y_avg_max : '',\r\n                    debit_lst_rpt_y_min : '',\r\n                    debit_lst_rpt_y_max : '',\r\n                    current_ratio_min : '',\r\n                    current_ratio_max : '',\r\n                    price_to_sales_min : '',\r\n                    price_to_sales_max : '',\r\n                    price_to_book_value_min : '',\r\n                    price_to_book_value_max : '',\r\n                    price_to_cash_flow_min : '',\r\n                    price_to_cash_flow_max : '',\r\n                    epr_val_free_cash_flow_min : '',\r\n                    epr_val_free_cash_flow_max : '',\r\n                    long_term_debit_work_cap_min : '',\r\n                    long_term_debit_work_cap_max : '',\r\n                    tot_lia_tot_assn : 'no',\r\n                    exchange : [],\r\n                    adr : 'no',\r\n                    etf_closed_end_fund : 'no',\r\n                    etf : 'no',\r\n                    options : 'no',\r\n                    ipo_date_min : new Date().toISOString().substring(0, 10),\r\n                    ipo_date_max : new Date().toISOString().substring(0, 10),\r\n                    incorporation_date_min : new Date().toISOString().substring(0, 10),\r\n                    incorporation_date_max : new Date().toISOString().substring(0, 10),\r\n                    headquarters_city : [],\r\n                    new_ceo_in_lst_12_m : 'no',\r\n                    ibd_article_lst_2_y : 'no',\r\n                    ibd_50 : 'no',\r\n                    ibd_new_america : 'no',\r\n                    ibd_85 : 'no',\r\n                    ibd_big_cap_20 : 'no',\r\n                })              \r\n                \r\n                setOldStateFormData({\r\n                    screen_id : selectedScreenList,\r\n                    eps_rating_min : '',\r\n                    eps_rating_max : '',\r\n                    rs_rating_min : '',\r\n                    rs_rating_max : '',\r\n                    smr_rating : '',\r\n                    ad_rating : '',\r\n                    comp_rating_min : '',\r\n                    comp_rating_max : '',\r\n                    ind_group_rs_rating : '',\r\n                    erns_lst_rpt_date_min : new Date().toISOString().substring(0, 10),\r\n                    erns_lst_rpt_date_max : new Date().toISOString().substring(0, 10),\r\n                    erns_dued_min : new Date().toISOString().substring(0, 10),\r\n                    erns_dued_max : new Date().toISOString().substring(0, 10),\r\n                    eps_chg_lst_rpt_q_min : '',\r\n                    eps_chg_lst_rpt_q_max : '',\r\n                    eps_chg_q_1_min : '',\r\n                    eps_chg_q_1_max : '',\r\n                    erns_acce_lst_q_3 : \"no\",\r\n                    erns_stability_min : '',\r\n                    erns_stability_max : '',\r\n                    eps_chg_q_2_min : '',\r\n                    eps_chg_q_2_max : '',\r\n                    eps_chg_q_3_min : '',\r\n                    eps_chg_q_3_max : '',\r\n                    eps_chg_lst_rpt_q_eps_chg_lst_q_3_is_bigger : \"no\",\r\n                    avg_eps_chg_lst_q_2_min : '',\r\n                    avg_eps_chg_lst_q_2_max : '',\r\n                    avg_eps_chg_lst_q_3_min : '',\r\n                    avg_eps_chg_lst_q_3_max : '',\r\n                    avg_eps_chg_lst_q_4_min : '',\r\n                    avg_eps_chg_lst_q_4_max : '',\r\n                    avg_eps_chg_lst_q_5_min : '',\r\n                    avg_eps_chg_lst_q_5_max : '',\r\n                    avg_eps_chg_lst_q_6_min : '',\r\n                    avg_eps_chg_lst_q_6_max : '',\r\n                    eps_trailing_q_4_min : '',\r\n                    eps_trailing_q_4_max : '',\r\n                    eps_trailing_q_4_is_bigger : \"no\",\r\n                    eps_trailing_q_4_lst_y_is_bigger : \"no\",\r\n                    eps_chg_lst_rpty_vs_1y_ago_min : '',\r\n                    eps_chg_lst_rpty_vs_1y_ago_max : '',\r\n                    eps_chg_lst_rpty_vs_2y_ago_min : '',\r\n                    eps_chg_lst_rpty_vs_2y_ago_max : '',\r\n                    eps_chg_lst_y_min : '',\r\n                    eps_chg_lst_y_max : '',\r\n                    eps_grow_rate_lst_3y_min : '',\r\n                    eps_grow_rate_lst_3y_max : '',\r\n                    eps_grow_rate_lst_5y_min : '',\r\n                    eps_grow_rate_lst_5y_max : '',\r\n                    eps_grow_rate_lst_3y_5y_is_bigger : \"no\",\r\n                    eps_grow_rate_lst_5y_percent_rnk_min : '',\r\n                    eps_grow_rate_lst_5y_percent_rnk_max : '',\r\n                    eps_grow_rate_projected_sus_growth_min : '',\r\n                    eps_grow_rate_projected_sus_growth_max : '',\r\n                    eps_lst_rpty_min : '',\r\n                    eps_lst_rpty_max : '',\r\n                    eps_1y_ago_min : '',\r\n                    eps_1y_ago_max : '',\r\n                    eps_2y_ago_min : '',\r\n                    eps_2y_ago_max : '',\r\n                    eps_3y_ago_min : '',\r\n                    eps_3y_ago_max : '',\r\n                    eps_4y_ago_min : '',\r\n                    eps_4y_ago_max : '',\r\n                    eps_5y_ago_min : '',\r\n                    eps_5y_ago_max : '',\r\n                    eps_6y_ago_min : '',\r\n                    eps_6y_ago_max : '',\r\n                    eps_lst_rpty_4y_is_bigger : \"no\",\r\n                    eps_est_erns_surp_min : '',\r\n                    eps_est_erns_surp_max : '',\r\n                    eps_est_chg_next_q_min : '',\r\n                    eps_est_chg_next_q_max : '',\r\n                    eps_est_chg_cur_y_min : '',\r\n                    eps_est_chg_cur_y_max : '',\r\n                    eps_est_chg_1y_forward_vs_min : '',\r\n                    eps_est_chg_1y_forward_vs_max : '',\r\n                    sales_chg_lst_rpt_q_min : '',\r\n                    sales_chg_lst_rpt_q_max : '',\r\n                    avg_sales_chg_lst_2_q_min : '',\r\n                    avg_sales_chg_lst_2_q_max : '',\r\n                    avg_sales_chg_lst_3_q_min : '',\r\n                    avg_sales_chg_lst_3_q_max : '',\r\n                    avg_sales_chg_lst_4_q_min : '',\r\n                    avg_sales_chg_lst_4_q_max : '',\r\n                    avg_sales_chg_lst_5_q_min : '',\r\n                    avg_sales_chg_lst_5_q_max : '',\r\n                    avg_sales_chg_lst_6_q_min : '',\r\n                    avg_sales_chg_lst_6_q_max : '',\r\n                    sales_acc_lst_2_q : 'no',\r\n                    sales_acc_lst_3_q : 'no',\r\n                    sales_chg_lst_rpt_y_min : '',\r\n                    sales_chg_lst_rpt_y_max : '',\r\n                    sales_growth_rate_lst_3_y_min : '',\r\n                    sales_growth_rate_lst_3_y_max : '',\r\n                    sales_growth_rate_lst_5_y_min : '',\r\n                    sales_growth_rate_lst_5_y_max : '',\r\n                    tot_ann_sales_lst_rpt_y_min : '',\r\n                    tot_ann_sales_lst_rpt_y_max : '',\r\n                    company_ids_g_r_min : '',\r\n                    company_ids_g_r_max : '',\r\n                    industry_g_n : [],\r\n                    broad_sectors : [],\r\n                    shares_outstanding_min : '',\r\n                    shares_outstanding_max : '',\r\n                    shares_in_float_min : '',\r\n                    shares_in_float_max : '',\r\n                    market_capitialization_min : '',\r\n                    market_capitialization_max : '',\r\n                    enterprise_value_min : '',\r\n                    enterprise_value_max : '',\r\n                    sponsorship_rating : '',\r\n                    funds_min : '',\r\n                    funds_max : '',\r\n                    funds_increase_min : '',\r\n                    funds_increase_max : '',\r\n                    number_of_fund_min : '',\r\n                    number_of_fund_max : '',\r\n                    management_min : '',\r\n                    management_max : '',\r\n                    institutional_ownership : 'no',\r\n                    price_min : '',\r\n                    price_max : '',\r\n                    price_vs_52_week_high_min : '',\r\n                    price_vs_52_week_high_max : '',\r\n                    price_chg_cur_d_min : '',\r\n                    price_chg_cur_d_max : '',\r\n                    price_chg_min : '',\r\n                    price_chg_max : '',\r\n                    price_chg_cur_w_min : '',\r\n                    price_chg_cur_w_max : '',\r\n                    price_chg_lst_m_min : '',\r\n                    price_chg_lst_m_max : '',\r\n                    price_chg_lst_3_m_min : '',\r\n                    price_chg_lst_3_m_max : '',\r\n                    price_chg_lst_6_m_min : '',\r\n                    price_chg_lst_6_m_max : '',\r\n                    price_chg_lst_12_m_min : '',\r\n                    price_chg_lst_12_m_max : '',\r\n                    price_chg_y_to_d_min : '',\r\n                    price_chg_y_to_d_max : '',\r\n                    price_chg_sp_500_lst26w_min : '',\r\n                    price_chg_sp_500_lst26w_max : '',\r\n                    weekly_closing_range_min : '',\r\n                    weekly_closing_range_max : '',\r\n                    daily_closing_range_min : '',\r\n                    daily_closing_range_max : '',\r\n                    price_vs_10_d_min : '',\r\n                    price_vs_10_d_max : '',\r\n                    price_vs_21_d_min : '',\r\n                    price_vs_21_d_max : '',\r\n                    price_vs_50_d_min : '',\r\n                    price_vs_50_d_max : '',\r\n                    price_vs_150_d_min : '',\r\n                    price_vs_150_d_max : '',\r\n                    price_vs_200_d_min : '',\r\n                    price_vs_200_d_max : '',\r\n                    d_10_d_21_d_50 : 'no',\r\n                    d_50_d_150_d_200 : 'no',\r\n                    vol_50_d_avg_min : '',\r\n                    vol_50_d_avg_max : '',\r\n                    vol_Chg_50_d_avg_min : '',\r\n                    vol_Chg_50_d_avg_max : '',\r\n                    w_vol_chg_10_w_avg_min : '',\r\n                    w_vol_chg_10_w_avg_max : '',\r\n                    cur_d_vol_grt_pre_5_d : 'no',\r\n                    cur_d_vol_grt_pre_10_d : 'no',\r\n                    cur_d_vol_grt_pre_20_d : 'no',\r\n                    vol_int_min : '',\r\n                    vol_int_max : '',\r\n                    up_down_vol_rat_min : '',\r\n                    up_down_vol_rat_max : '',\r\n                    vol_50_d_avg_dol_1000s_min : '',\r\n                    vol_50_d_avg_dol_1000s_max : '',\r\n                    rs_line_new_high : 'no',\r\n                    rs_line_new_low : 'no',\r\n                    rs_rating_3_m_min : '',\r\n                    rs_rating_3_m_max : '',\r\n                    rs_rating_6_m_min : '',\r\n                    rs_rating_6_m_max : '',\r\n                    timeliness_rating : '',\r\n                    alpha_min : '',\r\n                    alpha_max : '',\r\n                    beta_min : '',\r\n                    beta_max : '',\r\n                    avg_true_range_30_d_min : '',\r\n                    avg_true_range_30_d_max : '',\r\n                    davidend_yield_min : '',\r\n                    davidend_yield_max : '',\r\n                    after_tax_mrgn_acce_lst_3_q : 'no',\r\n                    pre_tax_mrgn_lst_rpty_min : '',\r\n                    pre_tax_mrgn_lst_rpty_max : '',\r\n                    after_tax_mrgn_lst_rpt_q_min : '',\r\n                    after_tax_mrgn_lst_rpt_q_max : '',\r\n                    after_tax_mrgn_avg_lst_q_2_min : '',\r\n                    after_tax_mrgn_avg_lst_q_2_max : '',\r\n                    after_tax_mrgn_avg_lst_q_3_min : '',\r\n                    after_tax_mrgn_avg_lst_q_3_max : '',\r\n                    after_tax_mrgn_avg_lst_q_4_min : '',\r\n                    after_tax_mrgn_avg_lst_q_4_max : '',\r\n                    after_tax_mrgn_avg_lst_q_5_min : '',\r\n                    after_tax_mrgn_avg_lst_q_5_max : '',\r\n                    after_tax_mrgn_avg_lst_q_6_min : '',\r\n                    after_tax_mrgn_avg_lst_q_6_max : '',\r\n                    opr_sys_ids_median_is_bigger : 'no',\r\n                    profile_mrgn_ids_median_is_bigger : 'no',\r\n                    p_e_current_min : '',\r\n                    p_e_current_max : '',\r\n                    p_e_est_min : '',\r\n                    p_e_est_max : '',\r\n                    p_e_vs_sp_500_min : '',\r\n                    p_e_vs_sp_500_max : '',\r\n                    p_e_percent_rnk_min : '',\r\n                    p_e_percent_rnk_max : '',\r\n                    p_e_percent_rnk_in_grp_min : '',\r\n                    p_e_percent_rnk_in_grp_max : '',\r\n                    p_e_avg_5y_is_bigger : 'no',\r\n                    peg_min : '',\r\n                    peg_max : '',\r\n                    peg_divid_adj_min : '',\r\n                    peg_divid_adj_max : '',\r\n                    cf_v_eps_diff_lst_rpt_q_min : '',\r\n                    cf_v_eps_diff_lst_rpt_q_max : '',\r\n                    cf_v_eps_diff_lst_rpt_y_min : '',\r\n                    cf_v_eps_diff_lst_rpt_y_max : '',\r\n                    roe_5y_avg_min : '',\r\n                    roe_5y_avg_max : '',\r\n                    debit_lst_rpt_y_min : '',\r\n                    debit_lst_rpt_y_max : '',\r\n                    current_ratio_min : '',\r\n                    current_ratio_max : '',\r\n                    price_to_sales_min : '',\r\n                    price_to_sales_max : '',\r\n                    price_to_book_value_min : '',\r\n                    price_to_book_value_max : '',\r\n                    price_to_cash_flow_min : '',\r\n                    price_to_cash_flow_max : '',\r\n                    epr_val_free_cash_flow_min : '',\r\n                    epr_val_free_cash_flow_max : '',\r\n                    long_term_debit_work_cap_min : '',\r\n                    long_term_debit_work_cap_max : '',\r\n                    tot_lia_tot_assn : 'no',\r\n                    exchange : [],\r\n                    adr : 'no',\r\n                    etf_closed_end_fund : 'no',\r\n                    etf : 'no',\r\n                    options : 'no',\r\n                    ipo_date_min : new Date().toISOString().substring(0, 10),\r\n                    ipo_date_max : new Date().toISOString().substring(0, 10),\r\n                    incorporation_date_min : new Date().toISOString().substring(0, 10),\r\n                    incorporation_date_max : new Date().toISOString().substring(0, 10),\r\n                    headquarters_city : [],\r\n                    new_ceo_in_lst_12_m : 'no',\r\n                    ibd_article_lst_2_y : 'no',\r\n                    ibd_50 : 'no',\r\n                    ibd_new_america : 'no',\r\n                    ibd_85 : 'no',\r\n                    ibd_big_cap_20 : 'no',\r\n                })\r\n            }\r\n        }\r\n    }, [selectedScreenList])\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Grid container>\r\n                <Grid item xs={8}>\r\n                    <Grid container sx={{border : '2px solid #f7810b'}}>\r\n                        <Grid item xs={4}>\r\n                            <Category \r\n                                setSelectedItem={setSelectedItem}\r\n                                selectedItem={selectedItem}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <Criteria \r\n                                selectedItem={selectedItem}\r\n                                stateFormData={stateFormData}\r\n                                setStateFormData={setStateFormData}\r\n                                selectedScreenList={selectedScreenList}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>                    \r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Summary \r\n                        selectedItem={selectedItem}\r\n                        stateFormData={stateFormData}\r\n                        oldStateFormData={oldStateFormData}\r\n                        selectedScreenList={selectedScreenList}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    formData : state.screenOption.formData,\r\n    inserFormData : state.screenOption.inserFormData\r\n})\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ScreenOption);","import * as React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { GetTrendData } from \"../../../redux/actions/result\";\r\nimport { SetTreeViewType } from \"../../../redux/actions/screen\";\r\n\r\nimport { useResultViewInfo } from '../../../contexts/ResultViewContext';\r\nimport Loading from \"../../Common/Loading\";\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n    Grid,\r\n} from '@mui/material';\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        width : '100%',\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        justifyContent : 'center',\r\n        alignItems : 'center'\r\n    },\r\n    title : {\r\n        fontSize : '20px',\r\n        fontWeight : 'bold',\r\n        \r\n        marginBottom : '30px'\r\n    },\r\n    text : {\r\n        background : '#8fc5e6',\r\n        fontStyle : 'italic',\r\n\r\n        padding : '30px',\r\n        marginBottom : '30px'\r\n    },\r\n    buttonCss : {\r\n        textTransform : 'capitalize !important',\r\n        background: 'linear-gradient(0deg, rgba(88,87,85,1) 0%, rgba(78,75,75,1) 52%, rgba(112,112,111,0) 100%) !important',\r\n        border : '1px solid black !important',\r\n\r\n        \"&:hover\" : {\r\n            background : 'linear-gradient(0deg, rgba(249,166,0,1) 0%, rgba(238,197,28,1) 52%, rgba(237,142,16,0) 100%) !important'\r\n        }\r\n    }\r\n}))\r\n\r\nconst TrendTemplate = (props) => {\r\n\r\n    const classes = useStyles();\r\n    \r\n    const {\r\n        GetTrendData,\r\n        SetTreeViewType\r\n    } = props;\r\n\r\n    const {\r\n        InitialResultViewPoint,\r\n    } = useResultViewInfo() ;\r\n\r\n    const [ loading, setLoading ] = React.useState(false);\r\n\r\n    const handleViewResult = async () => {\r\n\r\n        setLoading(true);\r\n        await InitialResultViewPoint(250) ;\r\n        await GetTrendData();\r\n        await SetTreeViewType(\"trend template\");\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <Box className={classes.title}>\r\n                    Screen Summary for Trend Template\r\n                </Box>\r\n                <Box className={classes.text}>\r\n                    Trend Template:\r\n                    <Box>\r\n                        1. Stock Price {'>'} (greater than) 150 MA and 200 day  <br/>\r\n                        2. 150 day MA > 200 day MA <br/>\r\n                        3. 200 day MA is trending up for atleast 4 month(preferable 4-5months minimum) <br/>\r\n                        4. 50 day MA is above both 150 day MA and 200 day MA <br/>\r\n                        5. Stock Price > 25% of 52 week low (Many of the best selections with be 100%, 300% or even greater above their 52) <br/>\r\n                    </Box>\r\n                    week low.\r\n                    <Box>\r\n                        6. Stock Price is within 25% of its 52 week high (closer to the high the better) <br/>\r\n                        7. Relative strength ranking (as reported by investors Business Daily) is 70 or greater (90+ for better selections) <br/>\r\n                        8. Stock price is trading above 50 day MA <br/>\r\n                    </Box>\r\n                </Box>\r\n                <Button variant='contained' className={classes.buttonCss}\r\n                    onClick={() => handleViewResult()}\r\n                >\r\n                    View Screen Results\r\n                </Button>\r\n            </Box>\r\n            {\r\n                loading &&\r\n                <Loading />\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n    GetTrendData,\r\n    SetTreeViewType\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (TrendTemplate);","import * as React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { GetTrendWideData } from \"../../../redux/actions/result\";\r\nimport { SetTreeViewType } from \"../../../redux/actions/screen\";\r\n\r\nimport { useResultViewInfo } from '../../../contexts/ResultViewContext';\r\nimport Loading from \"../../Common/Loading\";\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n} from '@mui/material';\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        width : '100%',\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        justifyContent : 'center',\r\n        alignItems : 'center'\r\n    },\r\n    title : {\r\n        fontSize : '20px',\r\n        fontWeight : 'bold',\r\n        \r\n        marginBottom : '30px'\r\n    },\r\n    text : {\r\n        background : '#8fc5e6',\r\n        fontStyle : 'italic',\r\n\r\n        padding : '30px',\r\n        marginBottom : '30px'\r\n    },\r\n    buttonCss : {\r\n        textTransform : 'capitalize !important',\r\n        background: 'linear-gradient(0deg, rgba(88,87,85,1) 0%, rgba(78,75,75,1) 52%, rgba(112,112,111,0) 100%) !important',\r\n        border : '1px solid black !important',\r\n\r\n        \"&:hover\" : {\r\n            background : 'linear-gradient(0deg, rgba(249,166,0,1) 0%, rgba(238,197,28,1) 52%, rgba(237,142,16,0) 100%) !important'\r\n        }\r\n    }\r\n}))\r\n\r\nconst TrendTemplateWide = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        GetTrendWideData,\r\n        SetTreeViewType\r\n    } = props;\r\n\r\n    const {\r\n        InitialResultViewPoint,\r\n    } = useResultViewInfo() ;\r\n\r\n    const [ loading, setLoading ] = React.useState(false);\r\n\r\n    const handleViewResult = async () => {\r\n\r\n        setLoading(true);\r\n        await InitialResultViewPoint(250) ;\r\n        await GetTrendWideData();\r\n        await SetTreeViewType(\"trend template wide\");\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.title}>\r\n                Screen Summary for Trend Template Wide\r\n            </Box>\r\n            <Box className={classes.text}>\r\n                Trend Template Wide:\r\n                <Box>\r\n                    1. Stock Price {'>'} (greater than) 150 MA and 200 day  <br/>\r\n                    2. 150 day MA > 200 day MA <br/>\r\n                    3. 200 day MA is trending up for atleast 1 month<br/>\r\n                    4. 50 day MA is above both 150 day MA and 200 day MA <br/>\r\n                    5. Stock Price > 25% of 52 week low<br/>\r\n                    6. Stock Price is within 25% of its 52 week high<br/>\r\n                    7. Stock Price is trading no lower than 8% below the 50 day MA\r\n                </Box>\r\n            </Box>\r\n            <Button variant='contained' className={classes.buttonCss}\r\n                onClick={() => handleViewResult()}\r\n            >\r\n                View Screen Results\r\n            </Button>\r\n            {\r\n                loading &&\r\n                <Loading />\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n    GetTrendWideData,\r\n    SetTreeViewType\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (TrendTemplateWide);","import * as React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { GetPowerPlayData } from \"../../../redux/actions/result\";\r\nimport { SetTreeViewType } from \"../../../redux/actions/screen\";\r\n\r\nimport { useResultViewInfo } from '../../../contexts/ResultViewContext';\r\nimport Loading from \"../../Common/Loading\";\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n} from '@mui/material';\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        width : '100%',\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        justifyContent : 'center',\r\n        alignItems : 'center'\r\n    },\r\n    title : {\r\n        fontSize : '20px',\r\n        fontWeight : 'bold',\r\n        \r\n        marginBottom : '30px'\r\n    },\r\n    text : {\r\n        background : '#8fc5e6',\r\n        fontStyle : 'italic',\r\n\r\n        padding : '30px',\r\n        marginBottom : '30px'\r\n    },\r\n    buttonCss : {\r\n        textTransform : 'capitalize !important',\r\n        background: 'linear-gradient(0deg, rgba(88,87,85,1) 0%, rgba(78,75,75,1) 52%, rgba(112,112,111,0) 100%) !important',\r\n        border : '1px solid black !important',\r\n\r\n        \"&:hover\" : {\r\n            background : 'linear-gradient(0deg, rgba(249,166,0,1) 0%, rgba(238,197,28,1) 52%, rgba(237,142,16,0) 100%) !important'\r\n        }\r\n    }\r\n}))\r\n\r\nconst PowerPlay = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        GetPowerPlayData,\r\n        SetTreeViewType\r\n    } = props;\r\n\r\n    const {\r\n        InitialResultViewPoint,\r\n    } = useResultViewInfo() ;\r\n\r\n    const [ loading, setLoading ] = React.useState(false);\r\n\r\n    const handleViewResult = async () => {\r\n\r\n        setLoading(true);\r\n        await InitialResultViewPoint(250) ;\r\n        await GetPowerPlayData();\r\n        await SetTreeViewType(\"trend template wide\");\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.title}>\r\n                Screen Summary for Power Play\r\n            </Box>\r\n            <Box className={classes.text}>\r\n                Power Play:\r\n                <Box>\r\n                    1. Stock Price > 100% above 200 day MA  <br/>\r\n                    2. 150 day MA > 200 day MA <br/>\r\n                    3. 150 day MA > 200 day MA<br/>\r\n                    4. 50 day MA is above both 150 day MA and 200 day MA <br/>\r\n                    5. Stock Price > 25% of 52 week low (Many of the best selections with be 100%, 300% or even greater above their 52 week low).<br/>\r\n                    6. Stock Price is within 25% of its 52 week high (closer to the high the better)<br/>\r\n                    7. Relative strength ranking (as reported by Investors Business Daily) is 70 or greater (90+ for better selections)<br/>\r\n                    8. As this is a proprietary ranking we can make our own calculate (below)<br/>\r\n                    9. Stock price is trading above 50 day MA (exception “low cheat)<br/>\r\n                </Box>\r\n            </Box>\r\n            <Button variant='contained' className={classes.buttonCss}\r\n                onClick={() => handleViewResult()}\r\n            >\r\n                View Screen Results\r\n            </Button>\r\n            {\r\n                loading &&\r\n                <Loading />\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n    GetPowerPlayData,\r\n    SetTreeViewType\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (PowerPlay);","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types' ;\r\n\r\nimport {\r\n    Box,\r\n    Grid,\r\n    MenuItem,\r\n    Select,\r\n} from '@mui/material';\r\n\r\nimport ScreenOption from \"./ScreenOption\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport TrendTemplate from \"./TrendTemplate\";\r\nimport TrendTemplateWide from \"./TrendTemplateWide\";\r\nimport PowerPlay from \"./PowerPlay\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        paddingLeft : 15,\r\n        border : '2px solid gray',\r\n        background : 'white',\r\n\r\n        minHeight : 'calc(100vh - 90px)',\r\n        \r\n        \"& .MuiSelect-select\" : {\r\n            padding : 10,\r\n        }\r\n    }\r\n}))\r\n\r\nconst ScreenForm = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        currentCategory,\r\n        stockList,\r\n        selectedScreenList,\r\n        treeViewId,\r\n    } = props ;\r\n\r\n    const [screenValue, setScreenValue] = useState('MM-loose 50');\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.value);\r\n        setScreenValue(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setScreenValue(currentCategory || 'MM-loose 50') ;\r\n    }, [currentCategory]) ;\r\n    \r\n    return (\r\n        <Box className={classes.root}>\r\n            {/* <Select \r\n                value={screenValue}\r\n                onChange={(e) => handleChange(e)}\r\n            >\r\n                {\r\n                    stockList && stockList.map((element, index) => {\r\n                        return(\r\n                            <MenuItem key={index} value={element.text}>\r\n                                {element.title}\r\n                            </MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Select> */}\r\n\r\n            <Box sx={{borderBottom: '1px solid lightgrey', color : 'black', mt : 2, mb : 5}}>\r\n                Screen from &nbsp;\r\n                <Box component={\"span\"} sx={{color : 'rgb(76,70,195)'}}>\r\n                    Database\r\n                </Box>\r\n                {/* &nbsp; (7,969 stocks) */}\r\n            </Box>\r\n            {\r\n                treeViewId === 1 &&\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <ScreenOption selectedScreenList={selectedScreenList}/>\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n            {\r\n                treeViewId === 2 &&\r\n                <TrendTemplate />\r\n            }\r\n            {\r\n                treeViewId === 3 &&\r\n                <TrendTemplateWide />\r\n            }\r\n            {\r\n                treeViewId === 4 &&\r\n                <PowerPlay />\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\nScreenForm.propTypes = {\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n    stockList : state.screen.stockList\r\n})\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenForm) ;","import * as React from \"react\";\r\n\r\nimport ListView from \"./ListView\";\r\nimport ScreenForm from \"./ScreenForm\";\r\n\r\nimport { useResultViewInfo } from \"../../contexts/ResultViewContext\";\r\n\r\nimport {\r\n    Box,\r\n    Grid,\r\n} from '@mui/material';\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n\r\n    }\r\n}))\r\n\r\nconst ScreenView = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        SetResultViewStatus\r\n    } = useResultViewInfo () ;\r\n\r\n    const [currentCategory, setCurrentCategory] = React.useState('MM-loose 50') ;\r\n    const [ selectedScreenList, setSelectedScreenList ] = React.useState(0);\r\n    const [ treeViewId, setTreeViewId ] = React.useState(1);\r\n\r\n    const handleSelectCategory = (selectedCategory) => {\r\n        setCurrentCategory(selectedCategory) ;\r\n        SetResultViewStatus(selectedCategory) ;\r\n    }\r\n    \r\n    return (\r\n        <Box className={classes.root}>\r\n            <Grid container>\r\n                <Grid item xs={2.4}>\r\n                    <ListView \r\n                        handleSelectCategory={handleSelectCategory}\r\n                        selectedScreenList={selectedScreenList}\r\n                        setSelectedScreenList={setSelectedScreenList}\r\n                        treeViewId={treeViewId}\r\n                        setTreeViewId={setTreeViewId}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={9.6}>\r\n                    <ScreenForm \r\n                        currentCategory={currentCategory}\r\n                        selectedScreenList={selectedScreenList}\r\n                        treeViewId={treeViewId}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ScreenView;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        background : 'gray', \r\n        padding : 3\r\n    },\r\n    tabsDiv : {\r\n        display : 'flex', flexDirection : 'column', gap  : 20\r\n    },\r\n    tabDiv : {\r\n        cursor : 'pointer',\r\n\r\n        borderRadius : 10,\r\n        \r\n        marginRight : 15,\r\n        marginLeft : 15,\r\n\r\n        paddingTop : 15,\r\n        paddingBottom  : 15,\r\n        textAlign : 'center',\r\n\r\n        background : 'white',\r\n    },\r\n    tabActiveDiv : {\r\n        color : theme.palette.brown.main,\r\n\r\n        cursor : 'pointer',\r\n\r\n        borderTopLeftRadius : 10,\r\n        borderBottomLeftRadius : 10,\r\n        \r\n        marginLeft : 15,\r\n\r\n        paddingTop : 15,\r\n        paddingBottom  : 15,\r\n        textAlign : 'center',\r\n\r\n        background : 'white'\r\n    }\r\n}))","import *as React from 'react' ;\r\n\r\nimport { Routes , Route, useNavigate } from \"react-router-dom\";\r\n\r\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\r\n\r\nimport {\r\n    Box,\r\n    Grid\r\n} from '@mui/material' ;\r\n\r\nimport ScreenView from '../../components/ScreenView';\r\n\r\nimport { useStyles } from './StyledDiv/index.styles';\r\n\r\nconst MSTool = () => {\r\n    const classes = useStyles() ;\r\n    const navigate = useNavigate() ;\r\n\r\n    const [selectedTab, setSelectedTab] = React.useState('screens') ;\r\n\r\n    const handleSelectedTab = (selectedTab) => {\r\n        setSelectedTab(selectedTab) ;\r\n        switch(selectedTab) {\r\n            case \"screens\" :\r\n                navigate('/screens') ;\r\n                return ;\r\n            case \"alerts\" :\r\n                navigate('/alerts') ;\r\n                return ;\r\n            case \"notes\" :\r\n                navigate('/notes') ;\r\n                return ;\r\n            default :\r\n                break ;\r\n        }\r\n    }\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Grid container>\r\n                <Grid item xs={1}>\r\n                    <Box sx={{textAlign : 'center', mt : '10px', mb : '10px'}}>\r\n                        <QuestionMarkIcon sx={{color : 'white'}} />\r\n                    </Box>\r\n                    <Box className={classes.tabsDiv}>\r\n                        <Box className={selectedTab === 'screens' ? classes.tabActiveDiv : classes.tabDiv}\r\n                            onClick={() => handleSelectedTab('screens')}\r\n                        >\r\n                            Screens\r\n                        </Box>\r\n                        <Box className={selectedTab === 'alerts' ? classes.tabActiveDiv : classes.tabDiv}\r\n                            onClick={() => handleSelectedTab('alerts')}\r\n                        >\r\n                            Alerts\r\n                        </Box>\r\n                        <Box className={selectedTab === 'notes' ? classes.tabActiveDiv : classes.tabDiv}\r\n                            onClick={() => handleSelectedTab('notes')}\r\n                        >\r\n                            Notes\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={11}>\r\n                    <Routes>\r\n                        <Route path='/*' element={<ScreenView />} />\r\n                        <Route path=\"/screens\" element={<ScreenView />} />\r\n                    </Routes>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MSTool ;","import React, { memo } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nimport { Routes , Route } from \"react-router-dom\";\r\n\r\nimport ProtectedRoute from \"../utils/ProtectedRoute\";\r\n\r\n// Pages\r\nimport NotFound from '../components/Common/NotFound' ;    \r\nimport MSTool from \"../pages/MSTool\";\r\n\r\nconst Routing = () => {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/*\" element={<MSTool />} />\r\n            {/* <Route path=\"/mstool/*\" element={<MSTool />} /> */}\r\n        </Routes>\r\n    );\r\n}\r\n\r\nRouting.propTypes = {\r\n    // selectLanding: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default memo(Routing);\r\n","\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport { connect } from 'react-redux' ;\r\n\r\nimport LOGO_IMAGE from '../../../assets/Layout/logo.png';\r\nimport UTC_IMAGE from '../../../assets/Layout/utc.png';\r\n\r\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport {\r\n    Box, Button ,\r\n} from '@mui/material' ;\r\n  \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        height : '50px',\r\n        display : 'flex',\r\n        alignItems : 'center',\r\n        padding : '0px 20px',\r\n\r\n        \"& select\" : {\r\n            width : '100px',\r\n            height : '25px',\r\n            marginRight : '30px',\r\n            \"&:hover\" : {\r\n                cursor : 'pointer'\r\n            }\r\n        },\r\n        \"& .MuiButtonBase-root\" : {\r\n            minWidth : '20px',\r\n            height : '20px',\r\n            background : 'white',\r\n            textTransform : 'none',\r\n            padding : '12px',\r\n            marginRight : '10px'\r\n        },\r\n    } ,\r\n})) ;\r\n\r\nconst Header = (props) => {\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        // <Box className={classes.root}>\r\n        //     <select>\r\n        //         <option value=\"lvgo\"> LVGO </option>\r\n        //     </select>\r\n        //     <Button variant='outlined'>\r\n        //         Daily\r\n        //     </Button>\r\n        //     <Button variant='outlined'>\r\n        //         Weekly\r\n        //     </Button>\r\n        //     <Button variant='outlined'>\r\n        //         Monthly\r\n        //     </Button>\r\n        //     <select>\r\n        //         <option value=\"5\"> 5 Min </option>\r\n        //     </select>\r\n        // </Box>\r\n        <></>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n}\r\nconst mapStateToProps = state => ({\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header) ;","export default __webpack_public_path__ + \"static/media/logo.27024de2.png\";","export default __webpack_public_path__ + \"static/media/utc.1c63b2a6.png\";","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles(( theme ) => ({\r\n    root : {\r\n        height : props => `calc(${props.height}px - 37px)`,\r\n\r\n        \"& .MuiTableContainer-root\" :{\r\n            height : props => `calc(${props.height}px - 37px)`,\r\n            borderBottom : '1px solid lightgray'\r\n        },\r\n        \"& .MuiTableHead-root\" : {\r\n            background : 'rgb(240,240,230)',\r\n            borderTop : '1px solid white',\r\n\r\n            \"& .MuiTableRow-root\" : {\r\n                position : \"relative\" ,\r\n                cursor : 'pointer',\r\n            },\r\n            \"& .MuiTableCell-root\" : {\r\n                paddingTop : 3,\r\n                paddingBottom : 3,\r\n                textAlign : 'center',\r\n                fontSize : \"12px\",\r\n                color : 'black',\r\n                borderRight : '1px solid lightgray'\r\n            }\r\n        },\r\n        \"& .MuiTableBody-root\" : {\r\n            borderTop : '1px solid black',\r\n\r\n            \"& .MuiTableRow-root\" : {\r\n                position : \"relative\" ,\r\n                cursor : 'pointer',\r\n            },\r\n            \"& .MuiTableCell-root\" : {\r\n                paddingTop : 3,\r\n                paddingBottom : 3,\r\n                textAlign : 'center',\r\n                fontSize : \"12px\",\r\n                color : 'black',\r\n            }\r\n        },\r\n    },\r\n    typeDiv :{\r\n        width : 15,\r\n        height : 15,\r\n        borderRadius : 5,\r\n\r\n        display : 'flex', alignItems : 'center', justifyContent : 'center',\r\n\r\n        fontSize : 10,\r\n        fontWeight : 'bold',\r\n\r\n        border : theme.palette.brown.main,\r\n        background : '#f3d41c99',\r\n        color : theme.palette.brown.main\r\n    }\r\n}))\r\n","import * as React from 'react' ;\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {  GetStockCount } from '../../redux/actions/result';\r\n\r\nimport {\r\n    Box, \r\n    TableContainer,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Table\r\n} from '@mui/material' ;\r\n\r\nimport { useStyles } from './StyledDiv/ScreenResult.styles';\r\n\r\nconst ScreenResultsList = (props) => {\r\n    const {\r\n        customizeColumnHeader,\r\n        customizeColumnData,\r\n        changeData,\r\n        screenResultData,\r\n        treeViewType,\r\n        GetStockCount,\r\n    } = props;\r\n    const classes =  useStyles(props) ;\r\n\r\n    const convertFieldList = {\r\n        \"rs\" : 'eps_rating',\r\n        \"bband_gap\" : 'rs_rating',\r\n        \"will_r\" : \"comp_rating\",\r\n        \"er\" : \"erns_lst_rpt_date\",\r\n        \"c\" : \"eps_chg_lst_rpt_q\",\r\n        \"v\" : \"eps_chg_q_1\"\r\n    }\r\n\r\n    const [ mockList, setMockList ] = useState([\r\n            'Comp Rating', \"EPS Rating\", 'RS Rating','Ind Group RS', 'SMR Rating', 'A/D Rating', 'EPS Lst Rptd', 'EPS Chg Lst', 'EPS Chg 1Q', 'EPS Chg 2Q', 'EPS Chg 3Q'\r\n    ])\r\n    \r\n    const [mockData, setMockData] = useState(null);\r\n\r\n    const [filterList, setFilterList] = useState(null);\r\n    const [tempData, setTempData] = useState(null);\r\n\r\n    const filterCond = async (row) => {\r\n        if(!changeData) return true ;\r\n        let cond = true ;\r\n\r\n        for(let [id, item] of Object.entries(row)) {\r\n            let min = Number(changeData[convertFieldList[id] + \"_min\"]) ;\r\n            let max = Number(changeData[convertFieldList[id] + \"_max\"]) ;\r\n            let val = Number(item) ;\r\n\r\n            if(changeData[convertFieldList[id] + \"_min\"] && changeData[convertFieldList[id] + \"_max\"]) {\r\n                cond = ( val > min && val< max );\r\n\r\n                if(!cond) break ;\r\n            } else if(changeData[convertFieldList[id]+\"_min\"]) {\r\n\r\n                cond =  val > min ;\r\n\r\n                console.log(item, changeData[convertFieldList[id] + \"_min\"], cond) ;\r\n\r\n                if(!cond) break ;\r\n            } else if (changeData[convertFieldList[id]+\"_max\"]) {\r\n                cond =  val < max ;\r\n\r\n               if(!cond) break ;\r\n            } \r\n        }\r\n        return cond ;\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if(screenResultData){\r\n            // if(treeViewType === \"my screen\"){\r\n            //     let temp = [] ;\r\n\r\n            //     await Promise.all(\r\n            //         screenResultData.map(async row => {\r\n            //             let cond = await filterCond(row) ;\r\n            //             if(cond) {\r\n            //                 temp.push(row) ;\r\n            //             }\r\n            //         })\r\n            //     )\r\n            //     setFilterList([...temp]) ;\r\n            // }\r\n        }\r\n    }, [screenResultData , changeData])\r\n\r\n    useEffect(() => {\r\n        if(customizeColumnHeader) {\r\n            setMockList(customizeColumnHeader);\r\n\r\n        }\r\n    }, [customizeColumnHeader])\r\n\r\n    useEffect(() => {\r\n        if(customizeColumnData) {\r\n            setMockData(customizeColumnData);\r\n        }\r\n    }, [customizeColumnData])\r\n\r\n    useEffect(async () => {\r\n    }, [])\r\n    \r\n    useEffect(async () => {\r\n        if(filterList){\r\n            await GetStockCount(filterList);\r\n        }\r\n    }, [filterList])\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <TableContainer >\r\n                <Table >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>{\"p\"}</TableCell>\r\n                            <TableCell sx={{minWidth : '30px'}}>{\"#\"}</TableCell>\r\n                            {\r\n                                screenResultData && Object.entries(screenResultData[0]).map((row,index) => {\r\n                                    return(\r\n                                        <TableCell key={index} sx={{minWidth : '50px'}}>{row[0]}</TableCell>\r\n                                    )\r\n                                })\r\n                            }\r\n                            {/* {\r\n                                treeViewType !== \"my screen\" && tempData &&\r\n                                Object.entries(tempData[0]).map((row,index) => {\r\n                                    return(\r\n                                        <TableCell key={index} sx={{minWidth : '50px'}}>{row[0]}</TableCell>\r\n                                    )\r\n                                })\r\n                            } */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody >\r\n                            {/* {\r\n                                \r\n                                treeViewType === \"my screen\" && screenResultData &&\r\n                                screenResultData.map((row, index) => {\r\n                                            return <TableRow key={index}>\r\n                                                <TableCell sx={{minWidth : '70px'}}></TableCell>\r\n                                                <TableCell>{index}</TableCell>\r\n                                                <TableCell>{row.ticker_symbol}</TableCell>\r\n                                                <TableCell>{row.date_populated}</TableCell>\r\n                                                <TableCell>{row.rs}</TableCell>\r\n                                                <TableCell>{row.bband_gap}</TableCell>\r\n                                                <TableCell>{row.will_r}</TableCell>\r\n                                                <TableCell>{row.er}</TableCell>\r\n                                                <TableCell>{row.grade}</TableCell>\r\n                                                <TableCell>{row.events}</TableCell>\r\n                                                <TableCell>{row.c}</TableCell>\r\n                                                <TableCell>{row.v}</TableCell>\r\n                                            </TableRow>\r\n                                        }) \r\n                            } */}\r\n                            {\r\n                                screenResultData && screenResultData.map((row, index) => {\r\n                                    return(\r\n                                        <TableRow key={index}>\r\n                                            <TableCell sx={{minWidth : '70px'}}></TableCell>\r\n                                            <TableCell>{index}</TableCell>\r\n                                            {\r\n                                                Object.entries(row).map((element, i) => {\r\n                                                    return(\r\n                                                        <TableCell key={i}> {element[1]}</TableCell>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                            }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    customizeColumnHeader : state.column.customizeColumnHeader,\r\n    customizeColumnData : state.column.customizeColumnData,\r\n    changeData : state.result.changeData,\r\n    screenResultData : state.result.screenResultData,\r\n    treeViewType : state.screen.treeViewType\r\n})\r\nconst mapDispatchToProps = {\r\n    GetStockCount,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenResultsList) ;","import { makeStyles } from '@mui/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        height : props => `calc(${props.height}px - 37px)`,\r\n        border : '1px solid grey',\r\n        borderTopLeftRadius : '5px',\r\n        borderBottomLeftRadius : '5px',\r\n        background : 'white',\r\n        overflowY : 'scroll',\r\n\r\n        \"& .MuiButtonBase-root\" : {\r\n            minWidth : '20px',\r\n            height : '20px',\r\n            background: 'linear-gradient(0deg, rgba(232,231,228,1) 0%, rgba(255,253,249,1) 52%, rgba(255,255,253,0) 100%)',\r\n            textTransform : 'none',\r\n            padding : '12px',\r\n        },\r\n\r\n        \"& .MuiListItem-root\" : {\r\n            display : 'flex',\r\n            alignItems : 'center',\r\n            padding : '0px 40px',\r\n            \r\n            \"&:hover\" : {\r\n                background : '#f7b147',\r\n                cursor : 'pointer'\r\n            }\r\n        },\r\n\r\n        \"& .MuiTreeItem-root\" : {\r\n            \"& svg\" : {\r\n                color : '#f7b147'\r\n            },\r\n        },\r\n        \"& .MuiTreeItem-content\" : {\r\n            background : 'white !important'\r\n        },\r\n        \"& .MuiCollapse-root\" : {\r\n            marginLeft : '10px'\r\n        }\r\n    },\r\n    alertDiv : {\r\n        display : 'flex', gap : 5,\r\n        \"& svg\" : {\r\n            color : theme.palette.brown.main\r\n        }\r\n    },\r\n    screenResultDiv : {\r\n        display : 'flex', gap : 5, alignItems : 'center',\r\n        padding : 5\r\n    },\r\n    activeDiv : {\r\n        background : theme.palette.brown.B100\r\n    },\r\n    blackRectDiv : {\r\n        background : 'black',\r\n        width : 10, height : 10\r\n    }\r\n}))","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types' ;\r\n\r\nimport { useResultViewInfo } from \"../../contexts/ResultViewContext\";\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n    List,\r\n    ListItem,\r\n    ListItemText\r\n} from '@mui/material';\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\n\r\nimport { useStyles } from \"./StyledDiv/MenuView.styles\";\r\nimport { useTheme } from \"@mui/styles\";\r\n\r\nconst MenuView = (props) => {\r\n    const classes = useStyles(props) ;\r\n    const theme = useTheme() ;\r\n\r\n    const {\r\n        selectedMenuItem\r\n    } = useResultViewInfo() ;\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <TreeView\r\n                    defaultCollapseIcon={<ExpandMoreIcon />}\r\n                    defaultExpandIcon={<ChevronRightIcon />}\r\n                    sx={{ flexGrow: 1, maxWidth: 400, maxHeight : 'calc(100vh - 200px)',overflowY: 'auto' }}\r\n                >\r\n                    <TreeItem nodeId=\"1\" label={<Box className={classes.alertDiv}>\r\n                                <NotificationsIcon />\r\n                                <Box>Smart Alerts</Box>\r\n                            </Box>\r\n                        }\r\n                    />\r\n                    <TreeItem nodeId=\"2\" label=\"My Lists\">\r\n                        <List>\r\n                        </List>\r\n                    </TreeItem>\r\n                    <TreeItem nodeId=\"3\" label=\"Favorites\">\r\n                        <List>\r\n                        </List>\r\n                    </TreeItem>\r\n                    <TreeItem nodeId=\"4\" label=\"Activity Lists\">\r\n                        <List>\r\n                        </List>\r\n                    </TreeItem>\r\n                    <TreeItem nodeId=\"5\" label=\"Tracked\">\r\n                        <List>\r\n                        </List>\r\n                    </TreeItem>\r\n                    <TreeItem nodeId=\"6\" label=\"Reports\">\r\n                        <List>\r\n                        </List>\r\n                    </TreeItem>\r\n                    <TreeItem nodeId=\"7\" label={<Box className={clsx(classes.screenResultDiv, selectedMenuItem === 'screen_result' && classes.activeDiv)}>\r\n                                <Box className={classes.blackRectDiv} />\r\n                                <Box>Smart Alerts</Box>\r\n                            </Box>\r\n                        }\r\n                    />\r\n                </TreeView>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nMenuView.propTypes = {\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuView) ;","import React, { useEffect } from 'react' ;\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport {\r\n   Popover,\r\n   List,\r\n   Box,\r\n   ListItemButton\r\n} from '@mui/material' ;\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\n// import NewStockModal from './NewStockModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popover : {\r\n        zIndex : \"1500 !important\",\r\n        \"& .MuiList-root\" : {\r\n            padding : \"10px\"\r\n        },\r\n        \"& .MuiListItemButton-root\" : {\r\n            padding : 3,\r\n            fontSize : \"14px\" ,\r\n            color : 'black',\r\n\r\n            display : 'flex', gap: 10\r\n        },\r\n        \"& a\" : {\r\n            textDecoration : \"none\"\r\n        },\r\n        \"& .MuiSvgIcon-root\" : {\r\n            width : '15px'\r\n        }\r\n    },\r\n    blackRectDiv : {\r\n        background : 'black',\r\n        width : 10, height : 10\r\n    },\r\n    greenRectDiv : {\r\n        background : 'green',\r\n        width : 10, height : 10\r\n    }\r\n}))\r\n\r\nconst csv = [\r\n    {\r\n        symbol : 'ASNX',\r\n        name : \"Axonics Modulation Tech\",\r\n        comp_rating : 78,\r\n        eps_rating : 48,\r\n        rs_rating : 90,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"C-\",\r\n        eps_lst_rptd  : \"06-06-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'AYTU',\r\n        name : \"Aytu BioScient Inc\",\r\n        comp_rating : 72,\r\n        eps_rating : 85,\r\n        rs_rating : 64,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"A-\",\r\n        eps_lst_rptd  : \"06-14-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'CLSK',\r\n        name : \"CleanSpark Inc\",\r\n        comp_rating : 72,\r\n        eps_rating : 12,\r\n        rs_rating : 99,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"A\",\r\n        eps_lst_rptd  : \"06-04-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'FOR',\r\n        name : \"Forestar Group INC\",\r\n        comp_rating : 72,\r\n        eps_rating : 32,\r\n        rs_rating : 69,\r\n        ind_group_rs : \"B\",\r\n        smr_rating : \"B\",\r\n        a_d_rating :\"B\",\r\n        eps_lst_rptd  : \"07-23-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : -17,\r\n        eps_chg_q_2 : 338,\r\n        eps_chg_q_3 : -77,\r\n    },\r\n    {\r\n        symbol : 'FRG',\r\n        name : \"Franchise Group Inc\",\r\n        comp_rating : 85,\r\n        eps_rating : 17,\r\n        rs_rating : 57,\r\n        ind_group_rs : \"C\",\r\n        smr_rating : \"C\",\r\n        a_d_rating :\"B+\",\r\n        eps_lst_rptd  : \"06-05-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : -7,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'GLG',\r\n        name : \"Td Holding INC\",\r\n        comp_rating : 80,\r\n        eps_rating : 59,\r\n        rs_rating : 96,\r\n        ind_group_rs : \"A-\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"D+\",\r\n        eps_lst_rptd  : \"06-14-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'GMAB',\r\n        name : \"Germab Ais Ads\",\r\n        comp_rating : 99,\r\n        eps_rating : 84,\r\n        rs_rating : 92,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"A\",\r\n        a_d_rating :\"C\",\r\n        eps_lst_rptd  : \"06-12-2022\",\r\n        eps_chg_last : 3750,\r\n        eps_chg_q_1 : 200,\r\n        eps_chg_q_2 : 75,\r\n        eps_chg_q_3 : 200,\r\n    },\r\n    {\r\n        symbol : 'GRWG',\r\n        name : \"Grow Genragion Corp\",\r\n        comp_rating : 92,\r\n        eps_rating : 38,\r\n        rs_rating : 99,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"C\",\r\n        a_d_rating :\"A\",\r\n        eps_lst_rptd  : \"08-13-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'GSX',\r\n        name : \"GSX Techedu Inc CIA Ads\",\r\n        comp_rating : 96,\r\n        eps_rating : 78,\r\n        rs_rating : 99,\r\n        ind_group_rs : \"C+\",\r\n        smr_rating : \"A\",\r\n        a_d_rating :\"A-\",\r\n        eps_lst_rptd  : \"09-02-2022\",\r\n        eps_chg_last : 100,\r\n        eps_chg_q_1 : 450,\r\n        eps_chg_q_2 : 450,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'HARP',\r\n        name : \"Harpoon Therapeutics Inc\",\r\n        comp_rating : 52,\r\n        eps_rating : 29,\r\n        rs_rating : 60,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"B\",\r\n        eps_lst_rptd  : \"06-05-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'IIPR',\r\n        name : \"IInnovative INd Prop\",\r\n        comp_rating : 97,\r\n        eps_rating : 79,\r\n        rs_rating : 92,\r\n        ind_group_rs : \"D+\",\r\n        smr_rating : \"A\",\r\n        a_d_rating :\"B+\",\r\n        eps_lst_rptd  : \"08-05-2022\",\r\n        eps_chg_last : 102,\r\n        eps_chg_q_1 : 107,\r\n        eps_chg_q_2 : 211,\r\n        eps_chg_q_3 : 126,\r\n    },\r\n    {\r\n        symbol : 'KIN',\r\n        name : \"Kindred Bidosiences Inc\",\r\n        comp_rating : 36,\r\n        eps_rating : 55,\r\n        rs_rating : 22,\r\n        ind_group_rs : \"D+\",\r\n        smr_rating : \"B\",\r\n        a_d_rating :\"D+\",\r\n        eps_lst_rptd  : \"06-05-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'LVGO',\r\n        name : \"Livongo Health Inc\",\r\n        comp_rating : 98,\r\n        eps_rating : 78,\r\n        rs_rating : 99,\r\n        ind_group_rs : \"A+\",\r\n        smr_rating : \"C\",\r\n        a_d_rating :\"B+\",\r\n        eps_lst_rptd  : \"08-05-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'MEIP',\r\n        name : \"M E I Pharama INC\",\r\n        comp_rating : 66,\r\n        eps_rating : 20,\r\n        rs_rating : 94,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"B\",\r\n        eps_lst_rptd  : \"09-09-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'NFE',\r\n        name : \"New Fortress Energy CIA\",\r\n        comp_rating : 67,\r\n        eps_rating : 1,\r\n        rs_rating : 96,\r\n        ind_group_rs : \"C\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"A\",\r\n        eps_lst_rptd  : \"06-03-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'NVAX',\r\n        name : \"Novatavax Inc\",\r\n        comp_rating : 80,\r\n        eps_rating : 53,\r\n        rs_rating : 90,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"E\",\r\n        a_d_rating :\"B+\",\r\n        eps_lst_rptd  : \"06-15-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'OCUL',\r\n        name : \"Ooular Thcrapeutix Inc\",\r\n        comp_rating : 63,\r\n        eps_rating : 25,\r\n        rs_rating : 53,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"D-\",\r\n        eps_lst_rptd  : \"06-07-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'OTRK',\r\n        name : \"Ontrak Inc\",\r\n        comp_rating : 63,\r\n        eps_rating : 11,\r\n        rs_rating : 99,\r\n        ind_group_rs : \"A+\",\r\n        smr_rating : null,\r\n        a_d_rating :\"C+\",\r\n        eps_lst_rptd  : \"06-05-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'PFSI',\r\n        name : \"Penymac Financal Svcs\",\r\n        comp_rating : 89,\r\n        eps_rating : 54,\r\n        rs_rating : 92,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"B+\",\r\n        eps_lst_rptd  : \"06-12-2022\",\r\n        eps_chg_last : 377,\r\n        eps_chg_q_1 : 533,\r\n        eps_chg_q_2 : 198,\r\n        eps_chg_q_3 : 165,\r\n    },\r\n    {\r\n        symbol : 'PRTK',\r\n        name : \"Paratek Pharmaceuticals\",\r\n        comp_rating : 89,\r\n        eps_rating : 96,\r\n        rs_rating : 96,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"A\",\r\n        a_d_rating :\"B+\",\r\n        eps_lst_rptd  : \"06-10-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'PTON',\r\n        name : \"Peloton Interactive CIA\",\r\n        comp_rating : 91,\r\n        eps_rating : 42,\r\n        rs_rating : 96,\r\n        ind_group_rs : \"A-\",\r\n        smr_rating : \"C\",\r\n        a_d_rating :\"B\",\r\n        eps_lst_rptd  : \"09-10-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'SE',\r\n        name : \"Sea Limited Ads CIA\",\r\n        comp_rating : 81,\r\n        eps_rating : 22,\r\n        rs_rating : 99,\r\n        ind_group_rs : \"A\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"B-\",\r\n        eps_lst_rptd  : \"08-18-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'SIGM',\r\n        name : \"Siga Technologies Inc\",\r\n        comp_rating : 75,\r\n        eps_rating : 31,\r\n        rs_rating : 86,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"C\",\r\n        a_d_rating :\"C+\",\r\n        eps_lst_rptd  : \"08-05-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'VXRT',\r\n        name : \"Vaxart Inc\",\r\n        comp_rating : 81,\r\n        eps_rating : 63,\r\n        rs_rating : 99,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"B+\",\r\n        eps_lst_rptd  : \"06-06-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'XERC',\r\n        name : \"Xers Pharmaceuticals\",\r\n        comp_rating : 79,\r\n        eps_rating : 51,\r\n        rs_rating : 86,\r\n        ind_group_rs : \"B+\",\r\n        smr_rating : \"D\",\r\n        a_d_rating :\"A-\",\r\n        eps_lst_rptd  : \"06-12-2022\",\r\n        eps_chg_last : null,\r\n        eps_chg_q_1 : null,\r\n        eps_chg_q_2 : null,\r\n        eps_chg_q_3 : null,\r\n    },\r\n    {\r\n        symbol : 'ZN',\r\n        name : \"Zoom Video Comm CIA\",\r\n        comp_rating : 99,\r\n        eps_rating : 76,\r\n        rs_rating : 99,\r\n        ind_group_rs : \"A\",\r\n        smr_rating : \"A\",\r\n        a_d_rating :\"B+\",\r\n        eps_lst_rptd  : \"06-30-2022\",\r\n        eps_chg_last : 1050,\r\n        eps_chg_q_1 : 561,\r\n        eps_chg_q_2 : 275,\r\n        eps_chg_q_3 : 800,\r\n    },\r\n]\r\n\r\nlet csvData = [];\r\n\r\nconst CSVPopOver = (props) => {\r\n\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        open , anchorEl , handleCsvPopOver, \r\n        customizeColumnHeader,\r\n        customizeColumnData,\r\n        screenResultData\r\n    } = props ;\r\n\r\n    useEffect(() => {\r\n        if(customizeColumnHeader) {\r\n            Object.keys(csv).forEach(key => {\r\n                    let temp = {};\r\n                    temp['symbol'] = csv[key].symbol;\r\n                    temp['name'] = csv[key].name;\r\n                    Object.entries(customizeColumnData).map((row, index) => {\r\n                    temp[row[1].field] = row[1].value;\r\n                })\r\n                csvData.push(\r\n                    temp\r\n                );\r\n            })\r\n        }\r\n    }, [customizeColumnHeader])\r\n\r\n    return (\r\n        <>\r\n            <Popover\r\n                id=\"NewPopOver-popover\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleCsvPopOver}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right'\r\n                }}\r\n                classes={{\r\n                    paper : classes.popover\r\n                }}\r\n            >\r\n                <List>\r\n                    <ListItemButton>\r\n                        <CSVLink data={screenResultData ? screenResultData : ''}>Comma Demited(.csv)</CSVLink>\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                        <Box>Excel 97-2003(.xls)</Box>\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                        <Box>Excel(.xlsx)</Box>\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                        <Box>Text(.txt)</Box>\r\n                    </ListItemButton>\r\n                </List>\r\n            </Popover>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    customizeColumnHeader : state.column.customizeColumnHeader,\r\n    customizeColumnData : state.column.customizeColumnData,\r\n    screenResultData : state.result.screenResultData\r\n}) ;\r\nconst mapDispatchToProps = {\r\n} ;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CSVPopOver) ;","import { Box } from \"@mui/material\";\r\n\r\nimport { makeStyles } from '@mui/styles' ;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card : {\r\n        borderRadius : '12px',\r\n        background : 'white',\r\n        width : '100px',\r\n        height : '100px'\r\n    }\r\n}))\r\n\r\nexport const accordionContent = [\r\n    {\r\n        title: <Box sx={{fontSize : '20px'}}>SmartSelect Ratings (5 of 6)</Box>,\r\n        droppableId : 'smartSelect',\r\n        context: \r\n            <Box sx={{display : 'flex', flexWrap : 'wrap'}}>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n            </Box>,\r\n        expanded: false,\r\n    },\r\n    {\r\n        title: <Box sx={{fontSize : '20px'}}>Earnings (8 of 41)</Box>,\r\n        droppableId : 'earnings',\r\n        context: \r\n            <Box sx={{display : 'flex', flexWrap : 'wrap'}}>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n            </Box>,\r\n        expanded: false,\r\n    },\r\n    {\r\n        title: <Box sx={{fontSize : '20px'}}>Sales (4 of 12)</Box>,\r\n        droppableId : 'sales',\r\n        context: \r\n            <Box sx={{display : 'flex', flexWrap : 'wrap'}}>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n            </Box>,\r\n        expanded: false,\r\n    },\r\n    {\r\n        title: <Box sx={{fontSize : '20px'}}>Industry & Sector(2 of 3)</Box>,\r\n        droppableId : 'industry',\r\n        context: \r\n            <Box sx={{display : 'flex', flexWrap : 'wrap'}}>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n            </Box>,\r\n        expanded: false,\r\n    },\r\n    {\r\n        title: <Box sx={{fontSize : '20px'}}> Shares & Holding(0 of 10) </Box>,\r\n        droppableId : 'sharings',\r\n        context: \r\n            <Box sx={{display : 'flex', flexWrap : 'wrap'}}>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n            </Box>,\r\n        expanded: false,\r\n    },\r\n    {\r\n        title: <Box sx={{fontSize : '20px'}}> Price & Volume(2 of 3) </Box>,\r\n        droppableId : 'priceVolume',\r\n        context: \r\n            <Box sx={{display : 'flex', flexWrap : 'wrap'}}>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n            </Box>,\r\n        expanded: false,\r\n    },\r\n    {\r\n        title: <Box sx={{fontSize : '20px'}}> Margins & Ratios(2 of 3) </Box>,\r\n        droppableId : 'margins',\r\n        context: \r\n            <Box sx={{display : 'flex', flexWrap : 'wrap'}}>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n            </Box>,\r\n        expanded: false,\r\n    },\r\n    {\r\n        title: <Box sx={{fontSize : '20px'}}> General Stock Criteria(2 of 3) </Box>,\r\n        droppableId : 'generalStock',\r\n        context: \r\n            <Box sx={{display : 'flex', flexWrap : 'wrap'}}>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n            </Box>,\r\n        expanded: false,\r\n    },\r\n    {\r\n        title: <Box sx={{fontSize : '20px'}}> IBD Content(2 of 3) </Box>,\r\n        droppableId : 'ibd',\r\n        context: \r\n            <Box sx={{display : 'flex', flexWrap : 'wrap'}}>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n                <Box sx={{width : '130px', height : '60px', background : 'white', color : 'black', display : 'flex', justifyContent : 'center', alignItems : 'center', textAlign : 'center', border : '1px solid black', margin : '5px', padding : '10px'}}>\r\n                    Sales % ChgLst Qtr\r\n                </Box>\r\n            </Box>,\r\n        expanded: false,\r\n    },\r\n]","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    root : {\r\n\r\n    },\r\n    itemDiv : {\r\n        width : '170px !important', height : '60px !important', \r\n        background : 'white !important',\r\n        color : 'black', \r\n        fontSize : 15,\r\n        display : 'flex', justifyContent : 'center', alignItems : 'center', \r\n        textAlign : 'center', \r\n        border : '3px solid rgb(159, 115,66)', \r\n        margin : '5px', padding : '10px',\r\n\r\n        \"&:hover\" : {\r\n            background : '#fad873 !important'\r\n        }\r\n    }\r\n}))","import * as React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport {\r\n  Box\r\n} from '@mui/material' ;\r\n\r\nimport { useStyles } from \"./StyledDiv/DragListItem.styles\";\r\n\r\nconst DragListItem = ({ item, index }) => {\r\n\r\n  const classes = useStyles() ;\r\n\r\n  return (\r\n    \r\n    <Draggable draggableId={item?.id} index={index}\r\n    >\r\n        {\r\n            (provided, snapshot) => {\r\n                return (\r\n                    <Box className={classes.itemDiv}\r\n                        ref={provided.innerRef}\r\n                        snapshot={snapshot}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                    >\r\n                        {\r\n                          item?.field\r\n                        }\r\n                    </Box>\r\n                );\r\n            }\r\n        }\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default DragListItem;\r\n","import * as React from 'react' ;\r\n\r\nimport { useMeasure } from 'react-use';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types' ;\r\nimport { ExpandedItem } from '../../redux/actions/accordions';\r\n\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport DragListItem from '../ResultView/DragListItem';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Accordion ,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Box,\r\n    Typography,\r\n    List,\r\n    ListItem\r\n} from '@mui/material' ;\r\n\r\n\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\nimport { makeStyles } from '@mui/styles' ;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root :{\r\n            fontFamily: \"Montserrat\",\r\n            color : \"black !important\" ,\r\n            margin : '0px 0px !important',\r\n\r\n            \"&::before\": {\r\n                content: 'none !important'\r\n            },\r\n        \r\n            \"& svg\" :{\r\n                color: \"black !important\",\r\n                margin : '0px 10px'\r\n            },\r\n\r\n            \"& .MuiButtonBase-root\" : {\r\n                minHeight : '10px'\r\n            },\r\n            \"& .MuiAccordionSummary-root\" : {\r\n                minHeight : '30px !important',\r\n                padding : '0px',\r\n                paddingLeft : '20px',\r\n                \"&:hover\" : {\r\n                    background : 'linear-gradient(0deg, rgba(253,123,16,1) 10%, rgba(250,250,250,1) 52%, rgba(112,112,111,0) 100%) !important',\r\n                }\r\n            },\r\n            \"& .MuiAccordionSummary-content\" : {\r\n                borderRight : '1px solid rgba(180,180,180,1)',\r\n                margin : '0px 0px !important',\r\n            },\r\n            \"& .MuiAccordionDetails-root\" : {\r\n                background : '#ffefd7 !important',\r\n            },\r\n    },\r\n    draggableListDiv : {\r\n        width : '100%',\r\n        overflowX : 'hidden',\r\n        \"& div\" : {\r\n            minHeight : 70,\r\n            display : 'flex',\r\n        }\r\n    },\r\n    expandedColumn : {\r\n        background : 'linear-gradient(0deg, rgba(253,123,16,1) 10%, rgba(250,250,250,1) 52%, rgba(112,112,111,0) 100%) !important',\r\n    }\r\n})) ;\r\n\r\nconst SOLDIV_WIDTH = 170 ;\r\n\r\nconst AccordionPanel = (props) => {\r\n    \r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        title , \r\n        context,\r\n        idx,\r\n        droppableId,\r\n        draggableList,\r\n\r\n        isDropDisabled\r\n    } = props ;\r\n\r\n    const [expanded , setExpaned] = React.useState(false) ;\r\n\r\n    const {\r\n        ExpandedItem,\r\n        expandedItem\r\n    } = props ;\r\n\r\n    const [ listDiv, {width , height} ] = useMeasure() ;\r\n\r\n    const [listModel, setListModel] = React.useState({\r\n        rowCount : 0,\r\n        colCount : 0,\r\n        leftOverIndex : 0,\r\n        estDivWidth : 0\r\n    }) ;\r\n\r\n    const TriggerExpandedItem = async (e, expanded, itemIndex) => {\r\n        await ExpandedItem(itemIndex) ;\r\n        setExpaned(expanded) ;\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        if(expandedItem !== idx){\r\n            setExpaned(false) ;\r\n        }\r\n    }, [expandedItem]) ;\r\n\r\n    React.useEffect(() => {\r\n        if(draggableList.length) {\r\n            let colCount = Math.floor(width / SOLDIV_WIDTH) ;\r\n            let estDivWidth = width / colCount ;\r\n            let rowCount = Math.floor(draggableList.length / colCount) ;\r\n            let leftOverIndex = colCount * rowCount ;\r\n\r\n            if(Number.isInteger(colCount) && Number.isInteger(rowCount) && Number.isInteger(leftOverIndex)) {\r\n                setListModel({\r\n                    colCount : colCount,\r\n                    rowCount : rowCount,\r\n                    leftOverIndex : leftOverIndex,\r\n                    estDivWidth : estDivWidth\r\n                });\r\n            }\r\n        }\r\n    }, [width, draggableList]) ;\r\n\r\n    return (\r\n        <Accordion  className={classes.root} expanded={expanded} id={droppableId + '_div'}\r\n            onChange={(e, expanded) => {\r\n                TriggerExpandedItem(e, expanded, idx)\r\n            }}\r\n        >\r\n            <AccordionSummary\r\n                expandIcon={expanded ===false ? <AddIcon className={classes.expandIcon}/> : <RemoveIcon className={classes.expandIcon}/>}\r\n                aria-controls={`panel1a-content-${title}`}\r\n                id={`panel1a-header-${title}`}\r\n                \r\n                sx={{ background : expanded  ?  'linear-gradient(0deg, rgba(255,200,115,1) 10%, rgba(250,250,250,1) 52%, rgba(112,112,111,0) 100%) !important' : 'linear-gradient(0deg, rgba(180,180,180,1) 10%, rgba(250,250,250,1) 52%, rgba(112,112,111,0) 100%) !important'}}\r\n            >\r\n                <Box>{title}</Box>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Box className={classes.draggableListDiv} sx={{display : expanded ? 'block' : 'none'}}\r\n                    ref={listDiv}\r\n                >\r\n                    {\r\n                        \r\n                        [...Array(listModel.rowCount)].map((item, rowIndex) => {\r\n                            return (\r\n                                <Droppable droppableId={droppableId + \"_\" + rowIndex}\r\n                                    direction={'horizontal'}\r\n                                    key={'row_'+rowIndex}\r\n                                    isDropDisabled={isDropDisabled}\r\n                                >\r\n                                    {\r\n                                        (provided) => (\r\n                                            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                            {\r\n                                                <Box  className={classes.rowDiv}>\r\n                                                    {\r\n                                                        [...Array(listModel.colCount)].map((item, colIndex) => {\r\n                                                            return (\r\n                                                                <Box sx={{width : listModel.estDivWidth}} className={classes.colDiv} key={'cell_' + rowIndex * listModel.colCount + colIndex }>\r\n                                                                    <DragListItem key={draggableList[rowIndex * listModel.colCount + colIndex]?.id} item={draggableList[rowIndex * listModel.colCount + colIndex]} index={rowIndex * listModel.colCount + colIndex} />\r\n                                                                </Box>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </Box>\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </Droppable>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        listModel.leftOverIndex < draggableList.length && \r\n                        <Droppable droppableId={droppableId + \"_\" + listModel.rowCount}\r\n                            direction={'horizontal'}\r\n                            isDropDisabled={isDropDisabled}\r\n                        >\r\n                            {\r\n                                (provided) => (\r\n                                    <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                    {\r\n                                        <Box key={'row_'+ listModel.rowCount + 1} className={classes.rowDiv}>\r\n                                        {\r\n                                            [...Array(draggableList.length - listModel.leftOverIndex)].map((item, colIndex) => {\r\n                                                return (\r\n                                                    <Box sx={{width : listModel.estDivWidth}} className={classes.colDiv} key={'cell_' + listModel.leftOverIndex + colIndex }>\r\n                                                        <DragListItem key={draggableList[listModel.leftOverIndex + colIndex]?.id} item={draggableList[listModel.leftOverIndex + colIndex]} index={listModel.leftOverIndex + colIndex} />\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        </Box>\r\n                                    }\r\n                                    {provided.placeholder}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </Droppable>\r\n                    }\r\n                    \r\n                </Box>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    )\r\n}\r\nAccordionPanel.propTypes = {\r\n    ExpandedItem : PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    expandedItem : state.accordions.expandedItem\r\n})\r\nconst mapDispatchToProps = {\r\n    ExpandedItem\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccordionPanel) ;\r\n\r\n","import ActionTypes from \"./actionTypes\";\r\n\r\nexport const ExpandedItem = (expandedItem) => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.ExpandedItem,\r\n            payload : expandedItem\r\n        }) ;\r\n        \r\n        return true ;\r\n    } catch(err) {\r\n        console.log(err) ;\r\n        return false ;\r\n    }\r\n}\r\n\r\n","import * as React from 'react' ;\r\n\r\nimport { useMeasure } from 'react-use';\r\nimport { useResultViewInfo } from '../../contexts/ResultViewContext' ;\r\n\r\nimport { connect } from 'react-redux';\r\nimport { CustomizeColumnHeader, CustomizeColumnData } from '../../redux/actions/column';\r\n\r\nimport { accordionContent } from '../Common/StaticData';\r\nimport AccordionPanel from '../Common/AccordionPanel';\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport DragListItem from './DragListItem';\r\n\r\nimport  {\r\n    Grid,\r\n    Dialog,\r\n    DialogContent,\r\n    Box,\r\n    DialogTitle,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Paper,\r\n    Button,\r\n    TableHead,\r\n    DialogActions\r\n} from '@mui/material' ;\r\n\r\nimport { makeStyles } from '@mui/styles' ;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        \r\n    },\r\n    paper : {\r\n        maxWidth : '1000px !important',\r\n        \"& .MuiDialogContent-root\" : {\r\n            padding : '20px ',\r\n        },\r\n\r\n        \"& .MuiDialogTitle-root\" : {\r\n            textAlign : 'center',\r\n            borderBottom : '1px solid grey'\r\n        },\r\n        \"& .MuiDialogActions-root\" : {\r\n            justifyContent : 'center'\r\n        }\r\n    },\r\n    accordionDiv : {\r\n        height : '300px',\r\n        overflowY : 'scroll',\r\n        border : '3px solid lightgrey',\r\n        borderTop : '3px solid #fd7b10',\r\n        padding : '10px'\r\n    },\r\n    preview : {\r\n        border : '3px solid #fd7b10',\r\n        borderRadius : '4px',\r\n        marginTop : '30px',\r\n    },\r\n    previewTitle : {\r\n        display : 'flex',\r\n        justifyContent : 'space-between',\r\n        background : '#fd7b10',\r\n        padding : '0px 10px'\r\n    },\r\n    previewContent : {\r\n        background : '#ffc873',\r\n        position : 'relative',\r\n        overflowX : 'scroll',\r\n        zIndex : 500,\r\n    },\r\n    scrollDiv : {\r\n        minWidth : '100%',\r\n        position : 'absolute',\r\n        left : 0,\r\n    },\r\n    previewColumn : {\r\n        background : '#ffc873',\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        justifyContent : 'center',\r\n\r\n        minHeight : 80,\r\n\r\n        \"& div\" : {\r\n            height : 70,\r\n            display : 'flex',\r\n            alignItems : 'center', \r\n            gap : 10,\r\n            background : '#ffc873',\r\n        }\r\n    },\r\n    previewTable : {\r\n        background : '#ffefd7 !important',\r\n        padding : '10px',\r\n        width : '100%',\r\n        \r\n        \"& .MuiTableContainer-root\" : {\r\n        },\r\n        \"& .MuiTable-root\" : {\r\n            borderCollapse: 'separate !important',\r\n            borderSpacing: '0 5px',\r\n            \"& .MuiTableCell-root\" : {\r\n                padding : 0,\r\n                textAlign : 'center !important'\r\n            }\r\n        },\r\n        \"& .MuiTableHead-root\" : {\r\n            \r\n        },\r\n        \"& .MuiTableBody-root\" : {\r\n            \"& .MuiTableRow-root\" : {\r\n                cursor : 'pointer',\r\n                transition : '0.2s',\r\n                \"&:hover\" : {\r\n                },\r\n            },\r\n            \"& .MuiTableCell-root\" : {\r\n                border : 'none !important',\r\n                fontSize : '13px',\r\n            }\r\n        },\r\n\r\n        \"& .MuiButtonBase-root\" : {\r\n            minWidth : '20px',\r\n            height : '20px',\r\n            background: 'linear-gradient(0deg, rgba(232,231,228,1) 0%, rgba(255,253,249,1) 52%, rgba(255,255,253,0) 100%)',\r\n            textTransform : 'none',\r\n            padding : '12px',\r\n        },\r\n    },\r\n    previewFooter : {\r\n        padding : '10px',\r\n    }\r\n})) ;\r\n\r\nconst CustomizeColumnModal = (props) => {\r\n\r\n    const classes = useStyles() ;\r\n    \r\n    const mockDataSmartSelect = [\r\n        {\r\n            id : 'comp_rating',\r\n            content : 'Comp Rating',\r\n            field : 'Comp Rating',\r\n            prefix : 'smartSelect',\r\n            value : 78\r\n        },\r\n        {\r\n            id : 'eps_rating',\r\n            content : 'Sales % ChgLst Qtr 2',\r\n            field : 'EPS Rating',\r\n            prefix : 'smartSelect',\r\n            value : 48\r\n        },\r\n        {\r\n            id : 'rs_rating',\r\n            field : 'RS Rating',\r\n            content : 'RS Rating',\r\n            prefix : 'smartSelect',\r\n            value : 90\r\n        },\r\n        {\r\n            content : 'Ind Group Rs Rating',\r\n            id : 'ind_group',\r\n            field : 'Ind Group RS',\r\n            prefix : 'smartSelect',\r\n            value : 'B+'\r\n        },\r\n        {\r\n            field : 'SMR Rating',\r\n            content : 'SMR Rating',\r\n            id : 'smr_rating',\r\n            prefix : 'smartSelect',\r\n            value : 'A+'\r\n        },\r\n        {\r\n            field : 'A/D Rating',\r\n            content : 'A/D Rating',\r\n            id : 'a_d_rating',\r\n            prefix : 'smartSelect',\r\n            value : 'C-'\r\n        },\r\n    ] ;\r\n\r\n    const mockDataEarnings = [\r\n        {\r\n            id : 'erns_lst_rpt_date',\r\n            content : 'Earnings Last Reported Date',\r\n            field : 'Earnings Lst Rptd',\r\n            prefix : 'earnings',\r\n            value : '2022-08-17'\r\n        },\r\n        {\r\n            id : 'erns_dued',\r\n            content : 'Earnings Due Date',\r\n            field : 'Earnings Due Date',\r\n            prefix : 'earnings',\r\n            value : '2022-07-01'\r\n        },\r\n        {\r\n            id : 'eps_chg_lst_rpt_q',\r\n            content : 'EPS % Change - Last Reported Quarter',\r\n            field : 'EPS % Chg Lst Q',\r\n            prefix : 'earnings',\r\n            value : 13\r\n        },\r\n        {\r\n            id : 'eps_chg_q_1',\r\n            content : 'EPS % Change - 1 Quarter Ago',\r\n            field : 'EPS % Chg 1Q',\r\n            prefix : 'earnings',\r\n            value : 23\r\n        },\r\n        {\r\n            id : 'erns_acce_lst_q_3',\r\n            content : 'Earnings Acceleration - Last 3 Qtrs',\r\n            field : 'Earnings Acce Lst 3Q',\r\n            prefix : 'earnings',\r\n            value : 'NO'\r\n        },\r\n        {\r\n            id : 'erns_stability',\r\n            content : 'Earnings Stability',\r\n            field : 'Earnings Stability',\r\n            prefix : 'earnings',\r\n            value : 23\r\n        },\r\n        {\r\n            id : 'eps_chg_q_2',\r\n            content : 'EPS % Change - 2 Quarter Ago',\r\n            field : 'EPS % Chg 2Q',\r\n            prefix : 'earnings',\r\n            value : 169\r\n        },\r\n        {\r\n            id : 'eps_chg_q_3',\r\n            content : 'EPS % Change - 3 Quarter Ago',\r\n            field : 'EPS % Chg 3Q',\r\n            prefix : 'earnings',\r\n            value : 56\r\n        },\r\n        {\r\n            id : 'eps_chg_lst_rpt_q_eps_chg_lst_q_3_is_bigger',\r\n            content : 'EPS % Change - Last Reported Quarter > Last 3 Quarters',\r\n            field : 'EPS % Chg Lst Rptd > Lst 3Q',\r\n            prefix : 'earnings',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'avg_eps_chg_lst_q_2',\r\n            content : 'Average EPS % Change - Last 2 Qtrs',\r\n            field : 'Avg EPS % Chg Lst 2Q',\r\n            prefix : 'earnings',\r\n            value : 89\r\n        },\r\n        {\r\n            id : 'avg_eps_chg_lst_q_3',\r\n            content : 'Average EPS % Change - Last 3 Qtrs',\r\n            field : 'Avg EPS % Chg Lst 3Q',\r\n            prefix : 'earnings',\r\n            value : 74\r\n        },\r\n        {\r\n            id : 'avg_eps_chg_lst_q_4',\r\n            content : 'Average EPS % Change - Last 4 Qtrs',\r\n            field : 'Avg EPS % Chg Lst 4Q',\r\n            prefix : 'earnings',\r\n            value : 24\r\n        },\r\n        {\r\n            id : 'avg_eps_chg_lst_q_5',\r\n            content : 'Average EPS % Change - Last 5 Qtrs',\r\n            field : 'Avg EPS % Chg Lst 5Q',\r\n            prefix : 'earnings',\r\n            value : 652\r\n        },\r\n        {\r\n            id : 'avg_eps_chg_lst_q_6',\r\n            content : 'Average EPS % Change - Last 6 Qtrs',\r\n            field : 'Avg EPS % Chg Lst 6Q',\r\n            prefix : 'earnings',\r\n            value : 35\r\n        },\r\n        {\r\n            id : 'eps_trailing_q_4',\r\n            content : 'EPS - Trailing 4 Qtrs',\r\n            field : 'EPS Trailing 4Q',\r\n            prefix : 'earnings',\r\n            value : 112\r\n        },\r\n        {\r\n            id : 'eps_trailing_q_4_is_bigger',\r\n            content : 'EPS - Trailing 4 Qtrs > EPS, 4Years Ago',\r\n            field : 'EPS Trailing 4Q > EPS Lst 4Y Ago',\r\n            prefix : 'earnings',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'eps_trailing_q_4_lst_y_is_bigger',\r\n            content : 'EPS Trailing >= Last Year',\r\n            field : 'EPS Trailing 4Q >= Last Y',\r\n            prefix : 'earnings',\r\n            value : 'NO'\r\n        },\r\n        {\r\n            id : 'eps_chg_lst_rpty_vs_1y_ago',\r\n            content : 'EPS % Change - Last Reported Year vs. 1 Years Ago',\r\n            field : 'EPS % Chg Lst RptY vs 1Y Ago',\r\n            prefix : 'earnings',\r\n            value : 123\r\n        },\r\n        {\r\n            id : 'eps_chg_lst_rpty_vs_2y_ago',\r\n            content : 'EPS % Change - Last Reported Year vs. 2 Years Ago',\r\n            field : 'EPS % Chg Lst RptY vs 2Y Ago',\r\n            prefix : 'earnings',\r\n            value : 617\r\n        },\r\n        {\r\n            id : 'eps_chg_lst_y',\r\n            content : 'EPS % Change Last Year',\r\n            field : 'EPS % Chg Lst Y',\r\n            prefix : 'earnings',\r\n            value : 367\r\n        },\r\n        {\r\n            id : 'eps_grow_rate_lst_3y',\r\n            content : 'EPS % Growth Rate - Last 3 Years',\r\n            field : 'EPS % Growth Rate - Lst 3Y',\r\n            prefix : 'earnings',\r\n            value : 25\r\n        },\r\n        {\r\n            id : 'eps_grow_rate_lst_5y',\r\n            content : 'EPS % Growth Rate - Last 5 Years',\r\n            field : 'EPS % Growth Rate - Lst 5Y',\r\n            prefix : 'earnings',\r\n            value : 58\r\n        },\r\n        {\r\n            id : 'eps_grow_rate_lst_3y_5y_is_bigger',\r\n            content : 'EPS % Growth Rate - Last 3 Years >= 5 Years',\r\n            field : 'EPS % Growth Rate - Lst 3Y >= 5Y',\r\n            prefix : 'earnings',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'eps_grow_rate_lst_5y_percent_rnk',\r\n            content : 'EPS % Growth Rate- Last 5 Years Percentile Rank',\r\n            field : 'EPS % Growth Rate - Lst 5Y Percentile Rnk',\r\n            prefix : 'earnings',\r\n            value : 281\r\n        },\r\n        {\r\n            id : 'eps_grow_rate_projected_sus_growth',\r\n            content : 'EPS % Growth Rate - Projected Sustainable Growth',\r\n            field : 'EPS % Growth Rate - Projected Sus Growth',\r\n            prefix : 'earnings',\r\n            value : 145\r\n        },\r\n        {\r\n            id : 'eps_lst_rpty',\r\n            content : 'EPS - Last reported Year',\r\n            field : 'EPS - Lst Rpty',\r\n            prefix : 'earnings',\r\n            value : 719\r\n        },\r\n        {\r\n            id : 'eps_1y_ago',\r\n            content : 'EPS - 1 Years Ago',\r\n            field : 'EPS 1Y',\r\n            prefix : 'earnings',\r\n            value : 54\r\n        },\r\n        {\r\n            id : 'eps_2y_ago',\r\n            content : 'EPS - 2 Years Ago',\r\n            field : 'EPS 2Y',\r\n            prefix : 'earnings',\r\n            value : 15\r\n        },\r\n        {\r\n            id : 'eps_3y_ago',\r\n            content : 'EPS - 3 Years Ago',\r\n            field : 'EPS 3Y',\r\n            prefix : 'earnings',\r\n            value : 48\r\n        },\r\n        {\r\n            id : 'eps_4y_ago',\r\n            content : 'EPS - 4 Years Ago',\r\n            field : 'EPS 4Y',\r\n            prefix : 'earnings',\r\n            value : 87\r\n        },\r\n        {\r\n            id : 'eps_5y_ago',\r\n            content : 'EPS - 5 Years Ago',\r\n            field : 'EPS 5Y',\r\n            prefix : 'earnings',\r\n            value : 27\r\n        },\r\n        {\r\n            id : 'eps_6y_ago',\r\n            content : 'EPS - 6 Years Ago',\r\n            field : 'EPS 6Y',\r\n            prefix : 'earnings',\r\n            value : 78\r\n        },\r\n        {\r\n            id : 'eps_lst_rpty_4y_is_bigger',\r\n            content : 'EPS - Last Reported Year > 4 Years Ago',\r\n            field : 'EPS Lst Rpty >= 4Y',\r\n            prefix : 'earnings',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'eps_est_erns_surp',\r\n            content : 'EPS - Estimate - Earnings Surprise',\r\n            field : 'EPS Est Erns Surp',\r\n            prefix : 'earnings',\r\n            value : 132\r\n        },\r\n        {\r\n            id : 'eps_est_chg_next_q',\r\n            content : 'EPS - Estimate % Change - Next Quarter',\r\n            field : 'EPS Est % Chg Next Q',\r\n            prefix : 'earnings',\r\n            value : 62\r\n        },\r\n        {\r\n            id : 'eps_est_chg_cur_y',\r\n            content : 'EPS - Estimate % Change - Current Year',\r\n            field : 'EPS Est Chg Cur Y',\r\n            prefix : 'earnings',\r\n            value : 259\r\n        },\r\n        {\r\n            id : 'eps_est_chg_1y_forward_vs',\r\n            content : 'EPS - Estimate % Change - 1 Year Forward vs. C...',\r\n            field : 'EPS Est Chg 1Y Forward Vs C...',\r\n            prefix : 'earnings',\r\n            value : 64\r\n        },\r\n    ] ;\r\n\r\n    const mockDataSales = [\r\n        {\r\n            id : 'sales_chg_lst_rpt_q',\r\n            content : 'Sales % Change - Last Reported Quarter',\r\n            field : 'Sales Chg Lst Rpt Q',\r\n            prefix : 'sales',\r\n            value : 28\r\n        },\r\n        {\r\n            id : 'avg_sales_chg_lst_2_q',\r\n            content : 'Average Sales % Change - Last 2 Qtrs',\r\n            field : 'Avg Sales Chg Lst 2Q',\r\n            prefix : 'sales',\r\n            value : 168\r\n        },\r\n        {\r\n            id : 'avg_sales_chg_lst_3_q',\r\n            content : 'Average Sales % Change - Last 3 Qtrs',\r\n            field : 'Avg Sales Chg Lst 3Q',\r\n            prefix : 'sales',\r\n            value : 51\r\n        },\r\n        {\r\n            id : 'avg_sales_chg_lst_4_q',\r\n            content : 'Average Sales % Change - Last 4 Qtrs',\r\n            field : 'Avg Sales Chg Lst 4Q',\r\n            prefix : 'sales',\r\n            value : 82\r\n        },\r\n        {\r\n            id : 'avg_sales_chg_lst_5_q',\r\n            content : 'Average Sales % Change - Last 5 Qtrs',\r\n            field : 'Avg Sales Chg Lst 5Q',\r\n            prefix : 'sales',\r\n            value : 128\r\n        },\r\n        {\r\n            id : 'avg_sales_chg_lst_6_q',\r\n            content : 'Average Sales % Change - Last 6 Qtrs',\r\n            field : 'Avg Sales Chg Lst 6Q',\r\n            prefix : 'sales',\r\n            value : 239\r\n        },\r\n        {\r\n            id : 'sales_acc_lst_2_q',\r\n            content : 'Sales Acceleration - Last 2 Qtrs',\r\n            field : 'Sales Acc Lst2Q',\r\n            prefix : 'sales',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'sales_acc_lst_3_q',\r\n            content : 'Sales Acceleration - Last 3 Qtrs',\r\n            field : 'Sales Acc Lst3Q',\r\n            prefix : 'sales',\r\n            value : 'NO'\r\n        },\r\n        {\r\n            id : 'sales_chg_lst_rpt_y',\r\n            content : 'Sales % Change - Last Reported Year',\r\n            field : 'Sales Chg Lst Rpt Y',\r\n            prefix : 'sales',\r\n            value : 303\r\n        },\r\n        {\r\n            id : 'sales_growth_rate_lst_3_y',\r\n            content : 'Sales % Growth Rate - Last 3 Years',\r\n            field : 'Sales Growth Rate Lst3Y',\r\n            prefix : 'sales',\r\n            value : 178\r\n        },\r\n        {\r\n            id : 'sales_growth_rate_lst_5_y',\r\n            content : 'Sales % Growth Rate - Last 5 Years',\r\n            field : 'Sales Growth Rate Lst5Y',\r\n            prefix : 'sales',\r\n            value : 49\r\n        },\r\n        {\r\n            id : 'tot_ann_sales_lst_rpt_y',\r\n            content : 'Total Annual Sales(mil) - Last Reported Year',\r\n            field : 'Tot Ann Sales Lst RptY',\r\n            prefix : 'sales',\r\n            value : 184\r\n        },\r\n    ] ;\r\n\r\n    const mockDataIndustry = [\r\n        {\r\n            id : 'company_ids_g_r',\r\n            content : `Company's Industry Group Rank`,\r\n            field : 'Company Ids G R',\r\n            prefix : 'industry',\r\n            value : 34\r\n        },\r\n        {\r\n            id : 'industry_g_n',\r\n            content : `Industry Group Name`,\r\n            field : 'Industry G N',\r\n            prefix : 'industry',\r\n            value : 'Aerospace/Defense, Agricultural Operations, Apparel-Clothing Mfg'\r\n        },\r\n        {\r\n            id : 'broad_sectors',\r\n            content : `Broad Sectors`,\r\n            field : 'Broad Sectors',\r\n            prefix : 'industry',\r\n            value : 'AEROSPACE, AGRICULTURE'\r\n        }\r\n    ] ;\r\n\r\n    const mockDataSharings = [\r\n        {\r\n            id : 'shares_outstanding',\r\n            content : `Shares Outstanding(1000s)`,\r\n            field : 'Shares Outstanding(1000s)',\r\n            prefix : 'sharings',\r\n            value : 34\r\n        },\r\n        {\r\n            id : 'shares_in_float',\r\n            content : `Shares in Float(1000s)`,\r\n            field : 'Shares In Float(1000s)',\r\n            prefix : 'sharings',\r\n            value : 63\r\n        },\r\n        {\r\n            id : 'market_capitialization',\r\n            content : `Market Capitalization(mil)`,\r\n            field : 'Market Capitalization(mil)',\r\n            prefix : 'sharings',\r\n            value : 49\r\n        },\r\n        {\r\n            id : 'enterprise_value',\r\n            content : `Enterprise Value(mil)`,\r\n            field : 'Enterprise Value(mil)',\r\n            prefix : 'sharings',\r\n            value : 27\r\n        },\r\n        {\r\n            id : 'sponsorship_rating',\r\n            content : `Sponsorship Rating`,\r\n            field : 'Sponsorship Rating',\r\n            prefix : 'sharings',\r\n            value : 'A'\r\n        },\r\n        {\r\n            id : 'funds',\r\n            content : `Funds %`,\r\n            field : 'Funds %',\r\n            prefix : 'sharings',\r\n            value : 33\r\n        },\r\n        {\r\n            id : 'funds_increase',\r\n            content : `Funds % Increase`,\r\n            field : 'Funds % Increase',\r\n            prefix : 'sharings',\r\n            value : 54\r\n        },\r\n        {\r\n            id : 'number_of_fund',\r\n            content : `Number of Fund`,\r\n            field : 'Number of Fund',\r\n            prefix : 'sharings',\r\n            value : 28\r\n        },\r\n        {\r\n            id : 'management',\r\n            content : `Management %`,\r\n            field : 'Management %',\r\n            prefix : 'sharings',\r\n            value : 44\r\n        },\r\n        {\r\n            id : 'institutional_ownership',\r\n            content : `Institutional Ownership < Median`,\r\n            field : 'Institutional Ownership < Median',\r\n            prefix : 'sharings',\r\n            value : 'YES'\r\n        }\r\n    ] ;\r\n\r\n    const mockDataPriceVolume = [\r\n        {\r\n            id : 'price',\r\n            content : `Price`,\r\n            field : 'Price',\r\n            prefix : 'priceVolume',\r\n            value : 11\r\n        },\r\n        {\r\n            id : 'price_vs_52_week_high',\r\n            content : `Price vs 52-Week High`,\r\n            field : 'Price 52-Week High',\r\n            prefix : 'priceVolume',\r\n            value : 582\r\n        },\r\n        {\r\n            id : 'price_chg_cur_d',\r\n            content : `Price % Change - Current Day`,\r\n            field : 'Price Chg CurD',\r\n            prefix : 'priceVolume',\r\n            value : 39\r\n        },\r\n        {\r\n            id : 'price_chg',\r\n            content : `Price $ Change`,\r\n            field : 'Price $ Chg',\r\n            prefix : 'priceVolume',\r\n            value : 182\r\n        },\r\n        {\r\n            id : 'price_chg_cur_w',\r\n            content : `Price % Change - Current Week`,\r\n            field : 'Price Chg CurW',\r\n            prefix : 'priceVolume',\r\n            value : 84\r\n        },\r\n        {\r\n            id : 'price_chg_lst_m',\r\n            content : `Price % Change - Last Month`,\r\n            field : 'Price Chg LstM',\r\n            prefix : 'priceVolume',\r\n            value : 546\r\n        },\r\n        {\r\n            id : 'price_chg_lst_3_m',\r\n            content : `Price % Change - Last 3 Months`,\r\n            field : 'Price Chg Lst3M',\r\n            prefix : 'priceVolume',\r\n            value : 164\r\n        },\r\n        {\r\n            id : 'price_chg_lst_6_m',\r\n            content : `Price % Change - Last 6 Months`,\r\n            field : 'Price Chg Lst6M',\r\n            prefix : 'priceVolume',\r\n            value : 43\r\n        },\r\n        {\r\n            id : 'price_chg_lst_12_m',\r\n            content : `Price % Change - Last 12 Months`,\r\n            field : 'Price Chg Lst12M',\r\n            prefix : 'priceVolume',\r\n            value : 95\r\n        },\r\n        {\r\n            id : 'price_chg_y_to_d',\r\n            content : `Price % Change -= Year to Date`,\r\n            field : 'Price Chg Y to D',\r\n            prefix : 'priceVolume',\r\n            value : 392\r\n        },\r\n        {\r\n            id : 'price_chg_sp_500_lst26w',\r\n            content : `Price % Change - vs. S&P 500(Last 26 Weeks)`,\r\n            field : 'Price Chg S&P 500 LST26W',\r\n            prefix : 'priceVolume',\r\n            value : 175\r\n        },\r\n        {\r\n            id : 'weekly_closing_range',\r\n            content : `Weekly Closing Range`,\r\n            field : 'Weekly Closing Range',\r\n            prefix : 'priceVolume',\r\n            value : 39\r\n        },\r\n        {\r\n            id : 'daily_closing_range',\r\n            content : `Daily Closing Range`,\r\n            field : 'Daily Closing Range',\r\n            prefix : 'priceVolume',\r\n            value : 449\r\n        },\r\n        {\r\n            id : 'price_vs_10_d',\r\n            content : `Price vs 10 Day`,\r\n            field : 'Price vs 10D',\r\n            prefix : 'priceVolume',\r\n            value : 82\r\n        },\r\n        {\r\n            id : 'price_vs_21_d',\r\n            content : `Price vs 21 Day`,\r\n            field : 'Price vs 21D',\r\n            prefix : 'priceVolume',\r\n            value : 27\r\n        },\r\n        {\r\n            id : 'price_vs_50_d',\r\n            content : `Price vs 50 Day`,\r\n            field : 'Price vs 50D',\r\n            prefix : 'priceVolume',\r\n            value : 77\r\n        },\r\n        {\r\n            id : 'price_vs_150_d',\r\n            content : `Price vs 150 Day`,\r\n            field : 'Price vs 150D',\r\n            prefix : 'priceVolume',\r\n            value : 150\r\n        },\r\n        {\r\n            id : 'price_vs_200_d',\r\n            content : `Price vs 200 Day`,\r\n            field : 'Price vs 200D',\r\n            prefix : 'priceVolume',\r\n            value : 188\r\n        },\r\n        {\r\n            id : 'd_10_d_21_d_50',\r\n            content : `10 Day > 21 Day > 50 Day`,\r\n            field : '10D 21D 50D',\r\n            prefix : 'priceVolume',\r\n            value : \"YES\"\r\n        },\r\n        {\r\n            id : 'd_50_d_150_d_200',\r\n            content : `50 Day > 150 Day > 200 Day`,\r\n            field : '50D 150D 200D',\r\n            prefix : 'priceVolume',\r\n            value : 'NO'\r\n        },\r\n        {\r\n            id : 'vol_50_d_avg',\r\n            content : `Volume - 50 Day Average(1000s)`,\r\n            field : 'Vol 50D Avg',\r\n            prefix : 'priceVolume',\r\n            value : 33\r\n        },\r\n        {\r\n            id : 'vol_Chg_50_d_avg',\r\n            content : `Volume - % Chg vs. 50 Day Average`,\r\n            field : 'Volume Chg 50D Avg',\r\n            prefix : 'priceVolume',\r\n            value : 70\r\n        },\r\n        {\r\n            id : 'w_vol_chg_10_w_avg',\r\n            content : `Weekly Volume - % Chg vs. 10 Week Average`,\r\n            field : 'W Vol Chg 10W Avg',\r\n            prefix : 'priceVolume',\r\n            value : 104\r\n        },\r\n        {\r\n            id : 'cur_d_vol_grt_pre_5_d',\r\n            content : `Current day's Volume greater than previous 5 days`,\r\n            field : 'Cur D Vol grt pre 5D',\r\n            prefix : 'priceVolume',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'cur_d_vol_grt_pre_10_d',\r\n            content : `Current day's Volume greater than previous 10 days`,\r\n            field : 'Cur D Vol grt pre 10D',\r\n            prefix : 'priceVolume',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'cur_d_vol_grt_pre_20_d',\r\n            content : `Current day's Volume greater than previous 20 days`,\r\n            field : 'Cur D Vol grt pre 20D',\r\n            prefix : 'priceVolume',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'vol_int',\r\n            content : `Volume-Instraday(1000s)`,\r\n            field : 'Vol Int',\r\n            prefix : 'priceVolume',\r\n            value : 229\r\n        },\r\n        {\r\n            id : 'up_down_vol_rat',\r\n            content : `Up/Down Volume Ratio`,\r\n            field : 'Up Down Vol Rat',\r\n            prefix : 'priceVolume',\r\n            value : 59\r\n        },\r\n        {\r\n            id : 'vol_50_d_avg_dol_1000s',\r\n            content : `Volume - 50 Day Average Dollar 1000s`,\r\n            field : 'Vol 50D Avg Dol 1000s',\r\n            prefix : 'priceVolume',\r\n            value : 189\r\n        },\r\n        {\r\n            id : 'rs_line_new_high',\r\n            content : `RS Line New High`,\r\n            field : 'RS Line New High',\r\n            prefix : 'priceVolume',\r\n            value : 'NO'\r\n        },\r\n        {\r\n            id : 'rs_line_new_low',\r\n            content : `RS Line NEw Low`,\r\n            field : 'RS Line New Low',\r\n            prefix : 'priceVolume',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'rs_rating_3_m',\r\n            content : `RS Rating - 3 Month`,\r\n            field : 'RS Rating 3M',\r\n            prefix : 'priceVolume',\r\n            value : 411\r\n        },\r\n        {\r\n            id : 'rs_rating_6_m',\r\n            content : `RS Rating - 6 Month`,\r\n            field : 'RS Rating 6M',\r\n            prefix : 'priceVolume',\r\n            value : 369\r\n        },\r\n        {\r\n            id : 'timeliness_rating',\r\n            content : `Timeliness Rating`,\r\n            field : 'Timeliness Rating',\r\n            prefix : 'priceVolume',\r\n            value : 'A, B, C'\r\n        },\r\n        {\r\n            id : 'alpha',\r\n            content : `Alpha`,\r\n            field : 'Alpha',\r\n            prefix : 'priceVolume',\r\n            value : 339\r\n        },\r\n        {\r\n            id : 'beta',\r\n            content : `Beta`,\r\n            field : 'Beta',\r\n            prefix : 'priceVolume',\r\n            value : 89\r\n        },\r\n        {\r\n            id : 'avg_true_range_30_d',\r\n            content : `Average True Range(30 Days)`,\r\n            field : 'Avg True Range 30D',\r\n            prefix : 'priceVolume',\r\n            value : 802\r\n        },\r\n    ] ;\r\n\r\n    const mockDataMargins = [\r\n        {\r\n            id : 'davidend_yield',\r\n            content : `Davidend Yield`,\r\n            field : 'Davidend Yield',\r\n            prefix : 'margins',\r\n            value : 30\r\n        },\r\n        {\r\n            id : 'after_tax_mrgn_acce_lst_3_q',\r\n            content : `After Tax Margin Acceleration Last 3 Qtrs`,\r\n            field : 'After Tax Mrgn Acce Lst 3Q',\r\n            prefix : 'margins',\r\n            value : 25\r\n        },\r\n        {\r\n            id : 'pre_tax_mrgn_lst_rpty',\r\n            content : `Pre Tax Margin Last Reported Year`,\r\n            field : 'Pre Tax Mrgn Lst Rpty',\r\n            prefix : 'margins',\r\n            value : 89\r\n        },\r\n        {\r\n            id : 'after_tax_mrgn_lst_rpt_q',\r\n            content : `After Tax Margin - Last Reported Quarter`,\r\n            field : 'After Tax Mrgn Lst RptQ',\r\n            prefix : 'margins',\r\n            value : 23\r\n        },\r\n        {\r\n            id : 'after_tax_mrgn_avg_lst_q_2',\r\n            content : `After Tax Margin - Average Last 2 Qtrs`,\r\n            field : 'After Tax Mrgn Avg Lst 2Q',\r\n            prefix : 'margins',\r\n            value : 456\r\n        },\r\n        {\r\n            id : 'after_tax_mrgn_avg_lst_q_3',\r\n            content : `After Tax Margin Average Last 3 Qtrs`,\r\n            field : 'After Tax Mrgn Avg Lst 3Q',\r\n            prefix : 'margins',\r\n            value : 124\r\n        },\r\n        {\r\n            id : 'after_tax_mrgn_avg_lst_q_4',\r\n            content : `After Tax Margin Average Last 4 Qtrs`,\r\n            field : 'After Tax Mrgn Avg Lst 4Q',\r\n            prefix : 'margins',\r\n            value : 254\r\n        },\r\n        \r\n        {\r\n            id : 'after_tax_mrgn_avg_lst_q_5',\r\n            content : `After Tax Margin Average Last 5 Qtrs`,\r\n            field : 'After Tax Mrgn Avg Lst 5Q',\r\n            prefix : 'margins',\r\n            value : 658\r\n        },\r\n        {\r\n            id : 'after_tax_mrgn_avg_lst_q_6',\r\n            content : `After Tax Margin Average Last 6 Qtrs`,\r\n            field : 'After Tax Mrgn Avg Lst 6Q',\r\n            prefix : 'margins',\r\n            value : 78\r\n        },\r\n        {\r\n            id : 'opr_sys_ids_median_is_bigger',\r\n            content : `Operating System >= Industry Median`,\r\n            field : 'Operating Sys >= Industry Median',\r\n            prefix : 'margins',\r\n            value : 'No'\r\n        },\r\n        {\r\n            id : 'profile_mrgn_ids_median_is_bigger',\r\n            content : `Profile Margin >= Industry Median`,\r\n            field : 'Profile Mrgn >= Industry Median',\r\n            prefix : 'margins',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'p_e_current',\r\n            content : `P/E Current`,\r\n            field : 'P/E Current',\r\n            prefix : 'margins',\r\n            value : 154\r\n        },\r\n        {\r\n            id : 'p_e_est',\r\n            content : `P/E Estimated`,\r\n            field : 'P/E Estimaged',\r\n            prefix : 'margins',\r\n            value : 254\r\n        },\r\n        {\r\n            id : 'p_e_vs_sp_500',\r\n            content : `P/E - vs. S&P 500 P/E`,\r\n            field : 'P/E Vs S&P 500',\r\n            prefix : 'margins',\r\n            value : 457\r\n        },\r\n        {\r\n            id : 'p_e_percent_rnk',\r\n            content : `P/E - Percentile Rank`,\r\n            field : 'P/E Percentile Rnk',\r\n            prefix : 'margins',\r\n            value : 875\r\n        },\r\n        {\r\n            id : 'p_e_percent_rnk_in_grp',\r\n            content : `P/E - Percentile Rank in Group`,\r\n            field : 'P/E - Percentila Rnk in Grp',\r\n            prefix : 'margins',\r\n            value : 451\r\n        },\r\n        {\r\n            id : 'p_e_avg_5y_is_bigger',\r\n            content : `P/E < Average 5 Year P/E`,\r\n            field : 'P/E < Avg 5Y',\r\n            prefix : 'margins',\r\n            value : \"YES\"\r\n        },\r\n        {\r\n            id : 'peg',\r\n            content : `PEG`,\r\n            field : 'PEG',\r\n            prefix : 'margins',\r\n            value : 237\r\n        },\r\n        {\r\n            id : 'peg_divid_adj',\r\n            content : `PEG(Dividend Adjusted)`,\r\n            field : 'PEG Divd Adj',\r\n            prefix : 'margins',\r\n            value : 185\r\n        },\r\n        {\r\n            id : 'cf_v_eps_diff_lst_rpt_q',\r\n            content : `CF vs EPS % Difference - Last Reported Quarter`,\r\n            field : 'CF v EPS Diff Lst R Q',\r\n            prefix : 'margins',\r\n            value : 363\r\n        },\r\n        {\r\n            id : 'cf_v_eps_diff_lst_rpt_y',\r\n            content : `CF vs EPS % Difference - Last Reported Year`,\r\n            field : 'CF v EPS Diff Lst R Y',\r\n            prefix : 'margins',\r\n            value : 26\r\n        },\r\n        {\r\n            id : 'roe_5y_avg',\r\n            content : `ROE - 5Year Average`,\r\n            field : 'ROE 5Y Avg',\r\n            prefix : 'margins',\r\n            value : 154\r\n        },\r\n        {\r\n            id : 'debit_lst_rpt_y',\r\n            content : `Debit % - Last Reported Year`,\r\n            field : 'Debit Lst Rpt Y',\r\n            prefix : 'margins',\r\n            value : 75\r\n        },\r\n        {\r\n            id : 'current_ratio',\r\n            content : `Current Ratio`,\r\n            field : 'Current Ratio',\r\n            prefix : 'margins',\r\n            value : 62\r\n        },\r\n        {\r\n            id : 'price_to_sales',\r\n            content : `Price to Sales`,\r\n            field : 'Price to Sales',\r\n            prefix : 'margins',\r\n            value : 448\r\n        },\r\n        {\r\n            id : 'price_to_book_value',\r\n            content : `Price to Book Value`,\r\n            field : 'Price to Book Value',\r\n            prefix : 'margins',\r\n            value : 154\r\n        },\r\n        {\r\n            id : 'price_to_cash_flow',\r\n            content : `Price to Cash Flow`,\r\n            field : 'Price to Cash Flow',\r\n            prefix : 'margins',\r\n            value : 95\r\n        },\r\n        {\r\n            id : 'epr_val_free_cash_flow',\r\n            content : `Enterprise Value to Free Cash Flow`,\r\n            field : 'Ent Val Free Cash Flow',\r\n            prefix : 'margins',\r\n            value : 154\r\n        },\r\n        {\r\n            id : 'long_term_debit_work_cap',\r\n            content : `Long Term Debit to Working Captial`,\r\n            field : 'Long Term Debit Work Cap',\r\n            prefix : 'margins',\r\n            value : 34\r\n        },\r\n        {\r\n            id : 'tot_lia_tot_ass',\r\n            content : `Total Liabilities/Total Assets < Industry Median`,\r\n            field : 'Total Lia/Total Ass',\r\n            prefix : 'margins',\r\n            value : \"YES\"\r\n        },\r\n    ] ;\r\n\r\n    const mockDataGeneralStock = [\r\n        {\r\n            id : 'exchange',\r\n            content : `Exchange`,\r\n            field : 'Exchange',\r\n            prefix : 'generalStock',\r\n            value : 'AMEX, ARCA, BATS'\r\n        },\r\n        {\r\n            id : 'adr',\r\n            content : `ADR`,\r\n            field : 'ADR',\r\n            prefix : 'generalStock',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'etf_closed_end_fund',\r\n            content : `ETF/Closed-End Fund`,\r\n            field : 'ETF/Closed-End Fund',\r\n            prefix : 'generalStock',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'etf',\r\n            content : `ETF`,\r\n            field : 'ETF',\r\n            prefix : 'generalStock',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'options',\r\n            content : `Options`,\r\n            field : 'Options',\r\n            prefix : 'generalStock',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'ipo_date',\r\n            content : `IPO Date`,\r\n            field : 'IPO Date',\r\n            prefix : 'generalStock',\r\n            value : '2022-05-03'\r\n        },\r\n        {\r\n            id : 'incorporation_date',\r\n            content : `Incorporation Date`,\r\n            field : 'Incorporation Date',\r\n            prefix : 'generalStock',\r\n            value : '2016-07-05'\r\n        },\r\n        {\r\n            id : 'headquarters_city',\r\n            content : `Headquarters-City/Country`,\r\n            field : 'Headquarters-City/Country',\r\n            prefix : 'generalStock',\r\n            value : 'AB, AK, AL, AR'\r\n        },\r\n        {\r\n            id : 'new_ceo_in_lst_12_m',\r\n            content : `New CEO in Last 12 Months`,\r\n            field : 'New CEO in Lst 12M',\r\n            prefix : 'generalStock',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'ibd_article_lst_2_y',\r\n            content : `IBD Article Last 2 Years`,\r\n            field : 'IBD Article Lst 2Y',\r\n            prefix : 'generalStock',\r\n            value : 'YES'\r\n        },\r\n    ] ;\r\n\r\n    const mockDataIbd = [\r\n        {\r\n            id : 'ibd_50',\r\n            content : `IBD 50`,\r\n            field : 'IBD 50',\r\n            prefix : 'ibd',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'ibd_new_america',\r\n            content : `IBD New America`,\r\n            field : 'IBD New America',\r\n            prefix : 'ibd',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'ibd_85',\r\n            content : `IBD 85-85`,\r\n            field : 'IBD 85-85',\r\n            prefix : 'ibd',\r\n            value : 'YES'\r\n        },\r\n        {\r\n            id : 'ibd_big_cap_20',\r\n            content : `IBD Big Cap 20`,\r\n            field : 'IBD Big Cap 20',\r\n            prefix : 'ibd',\r\n            value : 'YES'\r\n        },\r\n    ] ;\r\n\r\n    const mockDataPreview = [\r\n       \r\n    ] ;\r\n\r\n    const {\r\n        open,\r\n        handleClose,\r\n        CustomizeColumnHeader,\r\n        CustomizeColumnData,\r\n    } = props ;\r\n\r\n    const {\r\n        status\r\n    } = useResultViewInfo() ;\r\n\r\n    const [scrollDiv , {width, height}] = useMeasure() ;\r\n    const [isDropDisabled, setDropDisabled] = React.useState(false) ;\r\n\r\n    const [elements, setElements] = React.useState({\r\n        'smartSelect' : mockDataSmartSelect,\r\n        'earnings' : mockDataEarnings,\r\n        'sales' : mockDataSales,\r\n        'industry' : mockDataIndustry,\r\n        'sharings' : mockDataSharings,\r\n        'priceVolume' : mockDataPriceVolume,\r\n        'margins' : mockDataMargins,\r\n        'generalStock' : mockDataGeneralStock,\r\n        'ibd' : mockDataIbd,\r\n        'preview' : mockDataPreview\r\n    });\r\n\r\n    const removeFromList = (list, index) => {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(index, 1);\r\n        return [removed, result];\r\n    };\r\n      \r\n    const addToList = (list, index, element) => {\r\n        const result = Array.from(list);\r\n        result.splice(index, 0, element);\r\n        return result;\r\n    };\r\n\r\n    const extractDroppableId = (raw_droppable_id) => {\r\n        return raw_droppable_id.split(\"_\")[0] ;\r\n    }\r\n\r\n    const onDragStart = (result) => {\r\n        if(extractDroppableId(result.source.droppableId) !== 'preview') {\r\n            setDropDisabled(true) ;\r\n        }\r\n    }\r\n    \r\n    const onDragEnd = (result) => {\r\n\r\n        if (!result.destination) {\r\n          return;\r\n        }\r\n\r\n        const listCopy = { ...elements };\r\n\r\n        const sourceList = listCopy[extractDroppableId(result.source.droppableId)];\r\n    \r\n        const [removedElement, newSourceList] = removeFromList(\r\n            sourceList,\r\n            result.source.index\r\n        );\r\n    \r\n        listCopy[extractDroppableId(result.source.droppableId)] = newSourceList;\r\n\r\n        const destinationList = listCopy[extractDroppableId(result.destination.droppableId)];\r\n        \r\n        listCopy[extractDroppableId(result.destination.droppableId)] = addToList(\r\n            destinationList,\r\n            result.destination.index,\r\n            removedElement\r\n        );\r\n    \r\n        setElements({\r\n            ...listCopy\r\n        });\r\n\r\n        setDropDisabled(false) ;\r\n    };\r\n\r\n    const handleSaveCSV = () => {\r\n        let tempHeader = [] ;\r\n        let tempData = {} ;\r\n\r\n        elements.preview.map((item, index) => {\r\n            console.log(item.field);\r\n            tempHeader.push(item.field);\r\n            tempData[index] = item;\r\n        })\r\n        CustomizeColumnHeader(tempHeader);\r\n        CustomizeColumnData(tempData);\r\n    }\r\n    \r\n    return (\r\n        <Box className={classes.root}>\r\n            <Dialog\r\n                open={open}\r\n                fullWidth\r\n                classes ={{\r\n                    paper : classes.paper\r\n                }}\r\n                onClose={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Customize Column Layout\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Box sx={{fontWeight : 'bold', p : 1}}>\r\n                        Add a column by dragging it to the preview container below\r\n                    </Box>\r\n                    \r\n                    <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\r\n                        <Box className={classes.accordionDiv}>\r\n                            {\r\n                                accordionContent.map((element, index) => {\r\n                                    return(\r\n                                        <AccordionPanel \r\n                                            key={index}\r\n                                            droppableId={element.droppableId}\r\n                                            title={element.title}\r\n                                            idx={index}\r\n                                            context={element.context}\r\n                                            draggableList={elements[Object.keys(elements)[index]]}\r\n                                            isDropDisabled={isDropDisabled}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Box>\r\n                        \r\n                        <Box className={classes.preview}>\r\n                            <Box className={classes.previewTitle}>\r\n                                <Box sx={{fontWeight : 'bold', color : 'white'}}>\r\n                                    Column Layout Preview\r\n                                </Box>\r\n                                <Box sx={{fontWeight : 'bold', color : '#377878'}}>\r\n                                    Clear All\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            <Box className={classes.previewContent} sx={{height : (height + 9) + 'px'}}>\r\n                                <Box className={classes.scrollDiv} ref={scrollDiv}>\r\n                                    <Box className={classes.previewColumn}>\r\n                                        <Droppable droppableId={`${'preview'}`}\r\n                                            direction='horizontal'\r\n                                        >\r\n                                            {\r\n                                                (provided) => (\r\n                                                    <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                                    {\r\n                                                        elements.preview.map((item, index) => (\r\n                                                            <DragListItem key={item.id} item={item} index={index} />\r\n                                                        ))\r\n                                                    }\r\n                                                    {provided.placeholder}\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </Droppable>\r\n                                    </Box>\r\n                                    <Box className={classes.previewTable}>\r\n                                        <Box sx={{fontWeight : 'bold'}}> Sample Data </Box>\r\n                                        <TableContainer component={Paper}>\r\n                                            <Table size=\"small\" aria-label=\"a dense table\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell sx={{width : '100px !important'}}>Stoke Name</TableCell>\r\n                                                        {\r\n                                                            elements.preview.map((field, index) => {\r\n                                                                return (\r\n                                                                    <TableCell key={index}>\r\n                                                                        { field.field }\r\n                                                                    </TableCell>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    <TableRow\r\n                                                    >\r\n                                                        <TableCell sx={{ width : '100px !important'}}>\r\n                                                            {status}\r\n                                                        </TableCell>\r\n                                                        {\r\n                                                            elements.preview.map((field, index) => {\r\n                                                                return (\r\n                                                                    <TableCell key={index} sx={{textAlign  :'center !important'}}>\r\n                                                                        { field.value }\r\n                                                                    </TableCell>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </TableRow>\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                            </TableContainer>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            <Box className={classes.previewFooter}>\r\n                                <Grid container>\r\n                                    <Grid item xs={6} sx={{fontSize : '12px'}}>\r\n                                        <Box component={\"span\"} sx={{fontWeight : 'bold'}}>Instructions: </Box> Columns can be recordered using a drag and drop action with your mouse.\r\n                                        Click and hold any Column Header and drag it either left or right to the location you preter.\r\n                                        Reconfiguring the table lets you group data items together for easier comparison.\r\n                                        Column definition available on right click of column. \r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Box sx={{display : 'flex', justifyContent : 'flex-end !important', mb : 1}}>\r\n                                            <Button variant=\"outlined\">\r\n                                                Modified & unsaved\r\n                                            </Button>\r\n                                        </Box>\r\n                                        <Box sx={{display : 'flex', justifyContent : 'flex-end !important', alignItems : 'center'}}>\r\n                                            Current Layout:&nbsp; <Box component={\"span\"} sx={{color : '#4680bd', fontSize : '14px'}}>Un-Saved</Box>\r\n                                            <Button variant=\"outlined\" sx={{ml : 2}}>\r\n                                                Save As\r\n                                            </Button>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </Box>    \r\n                    </DragDropContext>\r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"outlined\" sx={{ml : 2}}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"outlined\" onClick={handleSaveCSV} sx={{ml : 2}}>\r\n                        Apply\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\nCustomizeColumnModal.propTypes = {\r\n}\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapDispatchToProps = {\r\n    CustomizeColumnHeader,\r\n    CustomizeColumnData\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizeColumnModal) ;","import ActionTypes from \"./actionTypes\";\r\nimport axios from 'axios' ;\r\nimport * as config from '../../static/constants';\r\n\r\nexport const CustomizeColumnHeader = (tempHeader) => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.CustomizeColumnHeader,\r\n            payload : tempHeader\r\n        }) ;\r\n\r\n        return true ;\r\n    } catch(err){\r\n        console.log(err) ;\r\n\r\n        return false ;\r\n    } \r\n}\r\nexport const CustomizeColumnData = (tempData) => async dispatch => {\r\n    try {\r\n        await dispatch({\r\n            type : ActionTypes.CustomizeColumnData,\r\n            payload : tempData\r\n        }) ;\r\n\r\n        return true ;\r\n    } catch(err){\r\n        console.log(err) ;\r\n\r\n        return false ;\r\n    } \r\n}","import React, { useRef } from 'react' ;\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport {\r\n   Popover,\r\n   List,\r\n   ListItem,\r\n   Divider,\r\n   Box,\r\n   ListItemButton\r\n} from '@mui/material' ;\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport CSVPopOver from './CSVPopOver';\r\nimport CustomizeColumnModal from './CustomizeColumnModal';\r\n// import NewStockModal from './NewStockModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popover : {\r\n        zIndex : \"1500 !important\",\r\n        \"& .MuiList-root\" : {\r\n            padding : \"10px\"\r\n        },\r\n        \"& .MuiListItemButton-root\" : {\r\n            padding : 3,\r\n            fontSize : \"14px\" ,\r\n            color : 'black',\r\n\r\n            display : 'flex', gap: 10\r\n        },\r\n        \"& a\" : {\r\n            textDecoration : \"none\"\r\n        },\r\n        \"& .MuiSvgIcon-root\" : {\r\n            width : '15px'\r\n        }\r\n    },\r\n    blackRectDiv : {\r\n        background : 'black',\r\n        width : 10, height : 10\r\n    },\r\n    greenRectDiv : {\r\n        background : 'green',\r\n        width : 10, height : 10\r\n    }\r\n}))\r\n\r\nconst ToolPopOver = (props) => {\r\n\r\n    const {\r\n        open , anchorEl , handlePopOver,\r\n    } = props ;\r\n\r\n    const classes = useStyles() ;\r\n    const anchorRef1 = React.useRef(null);\r\n\r\n    const [ isCsvOpenPop , setCsvOpenNewPop ] = React.useState(false) ;\r\n    const [ customizeColumnOpen, setCustomizeColumnOpen ] = React.useState(false);\r\n\r\n\r\n    const handleOpenCustomizeColumn = () => {\r\n        setCustomizeColumnOpen(true) ;\r\n        handlePopOver();\r\n    }\r\n    const handleCloseCustomizeColumn = () => {\r\n        setCustomizeColumnOpen(false) ;\r\n    }\r\n\r\n    const handleCsvPopOver = () => {\r\n        setCsvOpenNewPop(!isCsvOpenPop);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Popover\r\n                id=\"NewPopOver-popover\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handlePopOver}\r\n                anchorOrigin={{\r\n                    vertical: 'center',\r\n                    horizontal: 'left',\r\n                }}\r\n                classes={{\r\n                    paper : classes.popover\r\n                }}\r\n            >\r\n                <List>\r\n                    {/* <ListItemButton>\r\n                        <Box>View Details</Box>\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                        <Box>Point List</Box>\r\n                    </ListItemButton> */}\r\n                    <ListItemButton>\r\n                        <Box\r\n                            sx={{width : \"100%\", display : 'flex', justifyContent : 'space-between !important', alignItems : 'center'}}\r\n                            ref={anchorRef1}\r\n                            onClick={handleCsvPopOver}\r\n                        >\r\n                            <Box> Export list </Box>\r\n                            <PlayArrowIcon />\r\n                        </Box>\r\n                    </ListItemButton>\r\n                    {/* <ListItemButton>\r\n                        <Box>Importing Lists</Box>\r\n                    </ListItemButton> */}\r\n                    <ListItemButton>\r\n                        <Box onClick={handleOpenCustomizeColumn}>\r\n                            Customize Column Layout\r\n                        </Box>\r\n                    </ListItemButton>\r\n                    {/* <ListItemButton>\r\n                        <Box>Select Column Layout</Box>\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                        <Box>Append Screen Parameters</Box>\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                        <Box>Column Width Preference</Box>\r\n                    </ListItemButton> */}\r\n                </List>\r\n            </Popover>\r\n\r\n            <CSVPopOver\r\n                open={isCsvOpenPop}\r\n                handleCsvPopOver={handleCsvPopOver}\r\n                anchorEl={anchorRef1 ? anchorRef1.current : null}\r\n            />\r\n\r\n            <CustomizeColumnModal\r\n                open={customizeColumnOpen}\r\n                handleClose={handleCloseCustomizeColumn}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToolPopOver ;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    root : {\r\n        position : 'fixed',\r\n\r\n        zIndex : 1000,\r\n        left : 0,\r\n        bottom : 0,\r\n\r\n        width : '100vw',\r\n        height : props => props.height,\r\n        background : 'white',\r\n\r\n        \"& .MuiSvgIcon-root\" : {\r\n            width : '20px',\r\n            height : '20px',\r\n        }\r\n    },\r\n    toolbarDiv : {\r\n        display : 'flex', justifyContent : 'space-between', alignItems : 'center', \r\n        height : 37,\r\n        color : 'white',\r\n        background : 'linear-gradient(0deg, rgba(88,87,85,1) 0%, rgba(78,75,75,1) 52%, rgba(112,112,111,0) 100%) !important',\r\n        paddingRight : 10,\r\n        borderRight : '2px solid white',\r\n    },\r\n    labelDiv : {\r\n        display : 'flex', alignItems : 'center',\r\n    },\r\n    arrowDiv : {\r\n        paddingLeft : 30,\r\n        display : 'flex',alignItems : 'center', gap : 10\r\n    },\r\n    statusDiv : {\r\n        width : '100%',\r\n        paddingLeft :20,\r\n        paddingRight : 100,\r\n\r\n        display : 'flex', justifyContent : 'space-between', alignItems : 'center', gap : 10\r\n    },\r\n    resultSize : {\r\n        width : '15px',\r\n        height : '15px',\r\n        display : 'flex', alignItems : 'flex-end',\r\n        background : 'white',\r\n        padding : '1px',\r\n        marginRight : \"15px\"\r\n    },\r\n    minimum : {\r\n        width : '13px',\r\n        height : '3px',\r\n        background : 'rgba(58,55,55,1)',\r\n    },\r\n    normalize : {\r\n        width : '13px',\r\n        height : '7px',\r\n        background : 'rgba(58,55,55,1)',\r\n    },\r\n    maximum : {\r\n        width : '13px',\r\n        height : '13px',\r\n        background : 'rgba(58,55,55,1)',\r\n    },\r\n    resizeButtonCss : {\r\n        position : 'absolute',\r\n        left : \"50%\", top : -20,\r\n        width : 200,\r\n        height : 20,\r\n        borderTopRightRadius : 20,\r\n        borderTopLeftRadius : 20,\r\n\r\n        background : 'linear-gradient(0deg, rgba(251,249,249,1) 0%, rgba(203,203,202,1) 52%, rgba(0,0,0,0) 100%)',\r\n        borderLeft : '1px solid lightgray',\r\n        borderTop : '1px solid lightgray',\r\n        borderRight : '1px soild lightgray',\r\n\r\n        cursor : 'row-resize',\r\n        zIndex : 1000\r\n    },\r\n    mouseDragPanel : {\r\n        position : 'fixed',\r\n        left : 0,\r\n        top : 0,\r\n        width : '100vw', height : '100vh',\r\n\r\n        cursor : 'row-resize',\r\n        zIndex : 2000,\r\n    }\r\n}))","import * as React from 'react' ;\r\n\r\nimport { useResultViewInfo } from '../../contexts/ResultViewContext';\r\n\r\nimport ScreenResultsList from './ScreenResultsList';\r\nimport MenuView from './MenuView';\r\nimport ToolPopOver from './ToolPopOver';\r\n\r\nimport BuildIcon from '@mui/icons-material/Build';\r\nimport {\r\n    Box,\r\n    Grid\r\n} from '@mui/material' ;\r\n\r\nimport KeyboardDoubleArrowLeftIcon from '@mui/icons-material/KeyboardDoubleArrowLeft';\r\nimport KeyboardDoubleArrowRightIcon from '@mui/icons-material/KeyboardDoubleArrowRight';\r\nimport CachedIcon from '@mui/icons-material/Cached';\r\n\r\nimport { useStyles } from './StyledDiv/index.styles';\r\nimport { useTheme } from '@mui/styles';\r\n\r\nconst ResultView = (props) => {\r\n    const classes = useStyles(props) ;\r\n    const theme = useTheme() ;\r\n\r\n    const {\r\n        selectedMenuItem,\r\n        status,\r\n        UpdateResultViewHeight,\r\n\r\n        isBeginResize,\r\n        beginStartPoint,\r\n        beginStartHeight,\r\n\r\n        BeginResultViewResize,\r\n        FinishResultViewResize,\r\n        StoreBeginValues,\r\n        InitialResultViewPoint\r\n    } = useResultViewInfo() ;\r\n    \r\n    const [ isOpenPop , setOpenNewPop ] = React.useState(false) ;\r\n\r\n    const anchorRef = React.useRef(null) ;\r\n\r\n    const handlePopOver = () => {\r\n        setOpenNewPop(!isOpenPop) ;\r\n    }\r\n\r\n    const handleMouseDown = async (e) => {\r\n        await BeginResultViewResize() ;\r\n        await StoreBeginValues(e.clientY, beginStartHeight) ;\r\n    }\r\n\r\n    const handleMouseMove = async (e) => {\r\n        if(isBeginResize) await UpdateResultViewHeight(beginStartPoint - e.clientY) ;\r\n    }\r\n\r\n    const handleMouseUp = async () => {\r\n        await FinishResultViewResize(false) ;\r\n    }\r\n\r\n    const handleMouseOut = async () => {\r\n        await FinishResultViewResize(false) ;\r\n    }\r\n\r\n    const handleChangeResultHeight = async (value) => {\r\n        await InitialResultViewPoint(value) ;\r\n    }\r\n    return (\r\n        <Box className={classes.root}\r\n        >\r\n            <Box className={classes.mouseDragPanel} sx={{display : isBeginResize ? 'block' : 'none'}} \r\n                onMouseMove={handleMouseMove}\r\n                onMouseUp={handleMouseUp}\r\n                onMouseOut={handleMouseOut}\r\n            />\r\n\r\n            <Box sx={{position : 'relative'}}>\r\n                <Box className={classes.resizeButtonCss}\r\n                    onMouseDown={handleMouseDown}\r\n                />\r\n            </Box>\r\n            <Grid container sx={{height : '100%'}}>\r\n                <Grid item xs={3} >\r\n                    <Box className={classes.toolbarDiv}>\r\n                        <Box className={classes.arrowDiv}>\r\n                            <KeyboardDoubleArrowLeftIcon />\r\n                            <KeyboardDoubleArrowRightIcon />\r\n                        </Box>\r\n                        <Box className={classes.labelDiv}>\r\n                            Screen Results\r\n                        </Box>\r\n                    </Box>\r\n                    <MenuView \r\n                        height={props.height}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                    <Box className={classes.toolbarDiv}>\r\n                        <Box className={classes.statusDiv}>\r\n                            <Box sx={{display : 'flex', alignItems : 'center'}}>\r\n                                { status } &nbsp;\r\n                                <CachedIcon sx={{cursor : 'pointer', \"&:hover\": {color : theme.palette.brown.B100}}}/>\r\n                                &nbsp; { status && 'Upload : Today 12 : 40 PM ET'}\r\n                            </Box>\r\n                            <Box sx={{display : 'flex', alignItems : 'center'}}>\r\n                                <Box className={classes.resultSize} onClick={() => handleChangeResultHeight(37)}>\r\n                                    <Box className={classes.minimum}></Box>\r\n                                </Box>\r\n                                <Box className={classes.resultSize} onClick={() => handleChangeResultHeight(250)}>\r\n                                    <Box className={classes.normalize}></Box>\r\n                                </Box>\r\n                                <Box className={classes.resultSize} onClick={() => handleChangeResultHeight(window.innerHeight - 37)}>\r\n                                    <Box className={classes.maximum}></Box>\r\n                                </Box>\r\n                                <BuildIcon \r\n                                    ref={anchorRef}\r\n                                    onClick={handlePopOver}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    {\r\n                        selectedMenuItem === 'screen_result' && <ScreenResultsList \r\n                            height={props.height}\r\n                        />\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <ToolPopOver\r\n                open={isOpenPop}\r\n                handlePopOver={handlePopOver}\r\n                anchorEl={anchorRef ? anchorRef.current : null}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ResultView ;","import React, { useEffect , useRef, useState  } from 'react' ;\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types' ;\r\nimport { SetResultViewStatus, \r\n    UpdateResultViewHeight,\r\n    BeginResultViewResize,\r\n    FinishResultViewResize,\r\n    StoreBeginValues,\r\n    InitialResultViewPoint\r\n} from '../redux/actions/result';\r\n\r\nimport { ResultViewProvider } from '../contexts/ResultViewContext';\r\n\r\nimport Routing from './Routes';\r\n\r\nimport {\r\n    Box\r\n} from '@mui/material' ;\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport { getCookie } from '../utils/helper';\r\nimport Header from './Layouts/Header';\r\nimport ResultView from './ResultView';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root : {\r\n        height: '100vh',\r\n        overflowX: 'auto', \r\n        overflowY: 'scroll',\r\n    }\r\n}))\r\n\r\nconst Main = (props) => {\r\n    const classes = useStyles() ;\r\n\r\n    const {\r\n        selectedMenuItem,\r\n        status,\r\n        SetResultViewStatus,\r\n        resultViewHeight,\r\n        UpdateResultViewHeight,\r\n\r\n        isBeginResize,\r\n        beginStartPoint,\r\n        beginStartHeight,\r\n\r\n        BeginResultViewResize,\r\n        FinishResultViewResize,\r\n        StoreBeginValues,\r\n        InitialResultViewPoint\r\n    } = props ;\r\n\r\n    const scrollTop = useRef({                \r\n        current : {\r\n            innerText : \"efefef\"\r\n        }\r\n    }) ;\r\n\r\n    return (\r\n        <Box className={classes.root} ref={scrollTop}>\r\n            <ResultViewProvider \r\n                value={{\r\n                    selectedMenuItem,\r\n                    status,\r\n                    SetResultViewStatus,\r\n\r\n                    UpdateResultViewHeight,\r\n                    resultViewHeight,\r\n\r\n                    isBeginResize,\r\n                    beginStartPoint,\r\n                    beginStartHeight,\r\n\r\n                    BeginResultViewResize,\r\n                    FinishResultViewResize,\r\n                    StoreBeginValues,\r\n                    InitialResultViewPoint\r\n                }}\r\n            >\r\n                <Header />\r\n                <Routing />\r\n                <ResultView \r\n                    height={resultViewHeight}\r\n                />\r\n            </ResultViewProvider>\r\n        </Box>\r\n    )\r\n}\r\n\r\nMain.propTypes = {\r\n    SetResultViewStatus : PropTypes.func.isRequired,\r\n    UpdateResultViewHeight : PropTypes.func.isRequired,\r\n\r\n    BeginResultViewResize : PropTypes.func.isRequired,\r\n    FinishResultViewResize : PropTypes.func.isRequired,\r\n    StoreBeginValues : PropTypes.func.isRequired,\r\n    InitialResultViewPoint : PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    selectedMenuItem : state.result.selectedMenuItem,\r\n    status : state.result.status,\r\n    resultViewHeight : state.result.resultViewHeight,\r\n\r\n    isBeginResize : state.result.isBeginResize,\r\n    beginStartPoint : state.result.beginStartPoint,\r\n    beginStartHeight : state.result.beginStartHeight\r\n}) ;\r\nconst mapDispatchToProps = {\r\n    SetResultViewStatus,\r\n    UpdateResultViewHeight,\r\n\r\n    BeginResultViewResize,\r\n    FinishResultViewResize,\r\n    StoreBeginValues,\r\n    InitialResultViewPoint\r\n} ;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main) ;"],"sourceRoot":""}